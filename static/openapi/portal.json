{
  "openapi": "3.0.2",
  "info": {
    "title": "Portal API",
    "description": "- [Overview](#section/Overview)\n- [Getting Started](#section/Getting-Started)\n- [Authorization](#section/Authorization)\n\n## Overview\nWelcome to the Portal API documentation.\n\n## Getting Started\n\nBefore using Portal API, complete the following steps:\n\n1. **Seasalt Workspace**:\n\n   - You need a workspace because all APIs access data at the workspace level.\n\n\n2. **Generate an API Key**:\n\n   - Login to [Seasalt Portal](https://portal.seasalt.ai)\n   - Go to the Settings → API Key tab.\n   - Click Add New Key and create a new API key.\n   - Enable API access and copy your key. This key will be required for all API requests and please protect it with extreme caution.\n\n\n## Authorization\n### API Key\nAll API requests must include a valid Portal Workspace API key using the custom X-API-Key header.\n\n```bash\nX-API-Key: <your_workspace_api_key>\n```\n\nThis key uniquely identifies your workspace and must be included in every request to access protected endpoints. You can find or regenerate this key in the Workspace Settings → API Key tab.\n\n## Example Curl\n\n```bash\ncurl -X 'POST' \\\n  'https://portal.seasalt.ai/api/v1/analytics/generate_analytics' \\\n  -H 'accept: application/json' \\\n  -H 'X-API-Key: <your_workspace_api_key>' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n      \"metric\": \"today_communication_volume\",\n      \"type\": \"messages\",\n      \"time_unit\": \"month\",\n      \"timezone\": \"UTC\",\n      \"range_type\": \"last_7_days\",\n      \"exclude_empty_response\": false,\n      \"from_date\": \"2019-08-24T14:15:22Z\",\n      \"to_date\": \"2019-08-24T14:15:22Z\",\n      \"labels\": [\n        \"string\"\n      ],\n      \"handling_status\": \"PENDING\",\n      \"year\": \"string\"\n      }'\n```\n\n## Response Codes\n\nFor success responses, Portal only use two codes to indicate success:\n\n1. `200`, indicating that the operation was successful, with a response body attached.\n2. `204`, indicating that the operation was successful but no response body.\n\n## Error Message Format\n\nWhen the response code is a value above 400, the request body will be a fixed format content with the following structure\n\n| Name       | Type   | Description                                                                                                           | Example |\n| ---------- | ------ | --------------------------------------------------------------------------------------------------------------------- | ------- |\n| detail     | string | Description of the error that occurred                                                                                |         |\n| code       | number | The error code can be used to confirm the error type                                                                  |         |\n| parameters | object | The error message may contain parameter information. If there is no parameter information, it will be an empty object |         |\n\nExample of the request body in case of error\n\n```json\n{\n  \"detail\": \"The account: related to the passed in workspace API key does not have the permission to perform this action\",\n  \"code\": 40001,\n  \"parameters\": {\n    \"account_id\": \"related to the passed in workspace API key\"\n  }\n}\n```\n",
    "version": "1.0"
  },
  "paths": {
    "/portal-api/api/v1/analytics/generate_analytics": {
      "post": {
        "tags": ["Analytics"],
        "summary": "Generate Analytics",
        "description": "Generate analytics report for a specified workspace.\n\nUse POST to submit structured analytics query parameters in the request body.\n\nThis endpoint supports multiple types of analytics groups, each returning structured data\nbased on your filters and time range. Use this for generating reports like:\n- Communication volume\n- Activity trends\n- Label usage over time\n- Conversation overviews and breakdowns\n- Total usage summaries\n\nParameters (in request body):\n- metric (AnalyticsMetric): Required. Analytics metric type (e.g., activity_trend, label_usage).\n- type (AnalyticsMessageType): Optional. Type of analytics data, either \"messages\" or \"calls\". Defaults to \"messages\".\n- time_unit (AnalyticsTimeUnit): Optional. (e.g. \"day\", \"month\"(default), or \"year\").\n- timezone (str): Optional. The user's timezone (e.g., \"UTC\", \"Asia/Taipei\"). Defaults to \"UTC\".\n- from_date (datetime, optional): Optional custom start date for the time range (ISO 8601 format). Can include timezone.\n- to_date (datetime, optional): Optional custom end date for the time range (ISO 8601 format). Can include timezone.\n- labels (List[str], optional): Optional. Filter data by one or more label names or IDs.\n- handling_status (ConversationHandlingStatus, optional): Optional (e.g., RESOLVED, PENDING).\n- year (str, optional): Optional. Target year in YYYY format, used for yearly conversation overview.\n...\n\nReturns:\n- Union[AnalyticsResponse,\n    AnalyticsConversationOverviewResponse,\n    AnalyticsConversationOverviewYearlyResponse,\n    AnalyticsConversationBreakdownResponse\n]",
        "operationId": "generate_analytics_api_v1_analytics_generate_analytics_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AnalyticsRequestType" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Generate Analytics Api V1 Analytics Generate Analytics Post",
                  "anyOf": [
                    { "$ref": "#/components/schemas/AnalyticsResponse" },
                    {
                      "$ref": "#/components/schemas/AnalyticsConversationOverviewResponse"
                    },
                    {
                      "$ref": "#/components/schemas/AnalyticsConversationOverviewYearlyResponse"
                    },
                    {
                      "$ref": "#/components/schemas/AnalyticsConversationBreakdownResponse"
                    }
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "APIKeyHeader": [] }]
      }
    }
  },
  "components": {
    "schemas": {
      "AnalyticsCallResponseData": {
        "title": "AnalyticsCallResponseData",
        "required": ["total_chat_responses"],
        "type": "object",
        "properties": {
          "total_voice_minutes": {
            "title": "Total Voice Minutes",
            "type": "number",
            "description": "Total voice call duration in minutes (currently unavailable)"
          },
          "total_chat_responses": {
            "title": "Total Chat Responses",
            "type": "integer",
            "description": "Total number of chat messages sent by agent or bot"
          }
        },
        "description": "Schema containing metrics about total voice minutes and total chat responses."
      },
      "AnalyticsConversationBreakdownResponse": {
        "title": "AnalyticsConversationBreakdownResponse",
        "required": [
          "channel_summary",
          "messages_by_day",
          "messages_by_hour",
          "metric"
        ],
        "type": "object",
        "properties": {
          "channel_summary": {
            "title": "Channel Summary",
            "type": "object",
            "additionalProperties": { "type": "object" },
            "description": "Summary of messages and users by channel",
            "example": {
              "WebChat": { "user_count": 100, "message_count": 1200 }
            }
          },
          "messages_by_day": {
            "title": "Messages by Day",
            "type": "object",
            "additionalProperties": { "type": "integer" },
            "description": "Number of messages sent each day of the week",
            "example": { "Monday": 100, "Tuesday": 150 }
          },
          "messages_by_hour": {
            "title": "Messages by Hour",
            "type": "object",
            "additionalProperties": { "type": "integer" },
            "description": "Number of messages sent each hour of the day",
            "example": { "0": 50, "1": 30 }
          },
          "metric": { "title": "Metric", "type": "string" }
        },
        "description": "Detailed breakdown analytics response with a metric identifier."
      },
      "AnalyticsConversationOverviewResponse": {
        "title": "AnalyticsConversationOverviewResponse",
        "required": [
          "conversations",
          "messages",
          "bot_messages",
          "agent_messages",
          "live_agent_requests",
          "distinct_user_count",
          "conversations_change_percentage",
          "messages_change_percentage",
          "bot_messages_change_percentage",
          "agent_messages_change_percentage",
          "live_agent_requests_change_percentage",
          "current_period_start",
          "current_period_end",
          "previous_period_start",
          "previous_period_end",
          "metric"
        ],
        "type": "object",
        "properties": {
          "conversations": {
            "title": "Conversations",
            "type": "integer",
            "description": "Total number of conversations",
            "example": 100
          },
          "messages": {
            "title": "Messages",
            "type": "integer",
            "description": "Total number of messages",
            "example": 500
          },
          "bot_messages": {
            "title": "Bot Messages",
            "type": "integer",
            "description": "Total number of messages sent by bots",
            "example": 200
          },
          "agent_messages": {
            "title": "Agent Messages",
            "type": "integer",
            "description": "Total number of messages sent by agents",
            "example": 150
          },
          "live_agent_requests": {
            "title": "Live Agent Requests",
            "type": "integer",
            "description": "Total number of live agent requests",
            "example": 50
          },
          "distinct_user_count": {
            "title": "Distinct User Count",
            "type": "integer",
            "description": "Number of distinct users",
            "example": 75
          },
          "conversations_change_percentage": {
            "title": "Conversations Change Percentage",
            "type": "number",
            "description": "Percentage change in conversations",
            "example": 10.5
          },
          "messages_change_percentage": {
            "title": "Messages Change Percentage",
            "type": "number",
            "description": "Percentage change in messages",
            "example": 5.0
          },
          "bot_messages_change_percentage": {
            "title": "Bot Messages Change Percentage",
            "type": "number",
            "description": "Percentage change in bot messages",
            "example": 8.0
          },
          "agent_messages_change_percentage": {
            "title": "Agent Messages Change Percentage",
            "type": "number",
            "description": "Percentage change in agent messages",
            "example": 12.0
          },
          "live_agent_requests_change_percentage": {
            "title": "Live Agent Requests Change Percentage",
            "type": "number",
            "description": "Percentage change in live agent requests",
            "example": 15.0
          },
          "current_period_start": {
            "title": "Current Period Start",
            "type": "string",
            "description": "Start of the current period",
            "format": "date-time",
            "example": "2023-01-01T00:00:00"
          },
          "current_period_end": {
            "title": "Current Period End",
            "type": "string",
            "description": "End of the current period",
            "format": "date-time",
            "example": "2023-01-31T23:59:59"
          },
          "previous_period_start": {
            "title": "Previous Period Start",
            "type": "string",
            "description": "Start of the previous period",
            "format": "date-time",
            "example": "2022-12-01T00:00:00"
          },
          "previous_period_end": {
            "title": "Previous Period End",
            "type": "string",
            "description": "End of the previous period",
            "format": "date-time",
            "example": "2022-12-31T23:59:59"
          },
          "metric": { "$ref": "#/components/schemas/AnalyticsMetric" }
        },
        "description": "Extended schema for conversation overview analytics with a specified metric type."
      },
      "AnalyticsConversationOverviewYearlyResponse": {
        "title": "AnalyticsConversationOverviewYearlyResponse",
        "required": [
          "total_conversations",
          "total_messages",
          "average_messages_per_conversation",
          "monthly_messages",
          "metric"
        ],
        "type": "object",
        "properties": {
          "total_conversations": {
            "title": "Total Conversations",
            "type": "integer",
            "description": "Total number of conversations for the year",
            "example": 1200
          },
          "total_messages": {
            "title": "Total Messages",
            "type": "integer",
            "description": "Total number of messages for the year",
            "example": 6000
          },
          "average_messages_per_conversation": {
            "title": "Average Messages Per Conversation",
            "type": "number",
            "description": "Average number of messages per conversation",
            "example": 5.0
          },
          "monthly_messages": {
            "title": "Monthly Messages",
            "type": "object",
            "additionalProperties": { "type": "integer" },
            "description": "Number of messages per month",
            "example": { "January": 500, "February": 450 }
          },
          "metric": { "title": "Metric", "type": "string" }
        },
        "description": "Yearly analytics response schema with an additional metric identifier."
      },
      "AnalyticsCountPerPeriod": {
        "title": "AnalyticsCountPerPeriod",
        "required": ["period", "count"],
        "type": "object",
        "properties": {
          "period": {
            "title": "Period",
            "type": "string",
            "description": "Time period (e.g., '2024-06')"
          },
          "count": {
            "title": "Count",
            "type": "integer",
            "description": "Count for the given period"
          }
        },
        "description": "Schema for representing a count value grouped by a time period (e.g., daily, monthly, yearly)."
      },
      "AnalyticsLabelUsagePerPeriod": {
        "title": "AnalyticsLabelUsagePerPeriod",
        "required": ["period", "labels"],
        "type": "object",
        "properties": {
          "period": {
            "title": "Period",
            "type": "string",
            "description": "Time period (e.g., '2024-06')"
          },
          "labels": {
            "title": "Labels",
            "type": "array",
            "items": { "$ref": "#/components/schemas/LabelCount" },
            "description": "Mapping of label name to usage count in this period"
          }
        },
        "description": "Schema for representing label usage statistics for a given time period."
      },
      "AnalyticsMessageType": {
        "title": "AnalyticsMessageType",
        "enum": ["messages", "calls"],
        "type": "string",
        "description": "An enumeration."
      },
      "AnalyticsMetric": {
        "title": "AnalyticsMetric",
        "enum": [
          "today_communication_volume",
          "activity_trend",
          "label_usage",
          "label_overview",
          "conversation_overview",
          "total_usage",
          "conversation_overview_yearly",
          "conversation_breakdown"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "AnalyticsRequestType": {
        "title": "AnalyticsRequestType",
        "required": ["metric"],
        "type": "object",
        "properties": {
          "metric": {
            "allOf": [{ "$ref": "#/components/schemas/AnalyticsMetric" }],
            "description": "Analytics metric type"
          },
          "type": {
            "allOf": [{ "$ref": "#/components/schemas/AnalyticsMessageType" }],
            "description": "Type of analytics: messages or calls",
            "default": "messages"
          },
          "time_unit": {
            "allOf": [{ "$ref": "#/components/schemas/AnalyticsTimeUnit" }],
            "description": "Time unit for aggregation",
            "default": "month"
          },
          "timezone": {
            "title": "Timezone",
            "type": "string",
            "description": "User timezone, defaults to UTC",
            "default": "UTC"
          },
          "from_date": {
            "title": "From Date",
            "type": "string",
            "description": "Start date for the time range",
            "format": "date-time"
          },
          "to_date": {
            "title": "To Date",
            "type": "string",
            "description": "End date for the time range",
            "format": "date-time"
          },
          "labels": {
            "title": "Labels",
            "type": "array",
            "items": { "type": "string" },
            "description": "List of label names or IDs to filter by"
          },
          "handling_status": {
            "allOf": [
              { "$ref": "#/components/schemas/ConversationHandlingStatus" }
            ],
            "description": "Handling status to filter conversations"
          },
          "year": {
            "title": "Year",
            "type": "string",
            "description": "Year for yearly conversation overview (YYYY)"
          }
        },
        "description": "Query parameters schema for fetching analytics data through the unified endpoint."
      },
      "AnalyticsResponse": {
        "title": "AnalyticsResponse",
        "required": ["data", "metric"],
        "type": "object",
        "properties": {
          "time_unit": { "$ref": "#/components/schemas/AnalyticsTimeUnit" },
          "data": {
            "title": "Data",
            "type": "array",
            "items": {
              "anyOf": [
                { "$ref": "#/components/schemas/AnalyticsCallResponseData" },
                { "$ref": "#/components/schemas/AnalyticsLabelUsagePerPeriod" },
                { "$ref": "#/components/schemas/AnalyticsCountPerPeriod" },
                {
                  "$ref": "#/components/schemas/AnalyticsVoiceAndTextMessageCounts"
                },
                { "$ref": "#/components/schemas/AnalyticsResponseBase" },
                { "type": "object" }
              ]
            }
          },
          "change_percent": { "title": "Change Percent", "type": "number" },
          "metric": { "title": "Metric", "type": "string" }
        },
        "description": "Schema for analytics responses, including a metric identifier."
      },
      "AnalyticsResponseBase": {
        "title": "AnalyticsResponseBase",
        "required": ["data"],
        "type": "object",
        "properties": {
          "time_unit": { "$ref": "#/components/schemas/AnalyticsTimeUnit" },
          "data": {
            "title": "Data",
            "type": "array",
            "items": {
              "anyOf": [
                { "$ref": "#/components/schemas/AnalyticsCallResponseData" },
                { "$ref": "#/components/schemas/AnalyticsLabelUsagePerPeriod" },
                { "$ref": "#/components/schemas/AnalyticsCountPerPeriod" },
                {
                  "$ref": "#/components/schemas/AnalyticsVoiceAndTextMessageCounts"
                },
                { "$ref": "#/components/schemas/AnalyticsResponseBase" },
                { "type": "object" }
              ]
            }
          },
          "change_percent": { "title": "Change Percent", "type": "number" }
        },
        "description": "Base schema for analytics responses, providing common fields for various analytics types."
      },
      "AnalyticsTimeUnit": {
        "title": "AnalyticsTimeUnit",
        "enum": ["day", "month", "year"],
        "type": "string",
        "description": "An enumeration."
      },
      "AnalyticsVoiceAndTextMessageCounts": {
        "title": "AnalyticsVoiceAndTextMessageCounts",
        "required": [
          "inbound_voice_count",
          "outbound_voice_count",
          "inbound_non_voice_count"
        ],
        "type": "object",
        "properties": {
          "inbound_voice_count": {
            "title": "Inbound Voice Count",
            "type": "integer",
            "description": "Number of inbound voice calls during the selected time period"
          },
          "outbound_voice_count": {
            "title": "Outbound Voice Count",
            "type": "integer",
            "description": "Number of outbound voice calls during the selected time period"
          },
          "inbound_non_voice_count": {
            "title": "Inbound Non-Voice Count",
            "type": "integer",
            "description": "Number of inbound non-voice messages (e.g., chat messages)"
          }
        },
        "description": "Schema representing voice and text message volume statistics, typically used in daily communication summaries."
      },
      "ConversationHandlingStatus": {
        "title": "ConversationHandlingStatus",
        "enum": ["PENDING", "FOLLOW_UP", "RESOLVED"],
        "type": "string",
        "description": "The handling_status of conversation."
      },
      "HTTPValidationError": {
        "title": "HTTPValidationError",
        "type": "object",
        "properties": {
          "detail": {
            "title": "Detail",
            "type": "array",
            "items": { "$ref": "#/components/schemas/ValidationError" }
          }
        }
      },
      "LabelCount": {
        "title": "LabelCount",
        "required": ["name", "count"],
        "type": "object",
        "properties": {
          "name": { "title": "Name", "type": "string" },
          "count": { "title": "Count", "type": "integer" }
        },
        "description": "Schema for representing label usage."
      },
      "ValidationError": {
        "title": "ValidationError",
        "required": ["loc", "msg", "type"],
        "type": "object",
        "properties": {
          "loc": {
            "title": "Location",
            "type": "array",
            "items": { "anyOf": [{ "type": "string" }, { "type": "integer" }] }
          },
          "msg": { "title": "Message", "type": "string" },
          "type": { "title": "Error Type", "type": "string" }
        }
      }
    },
    "securitySchemes": {
      "APIKeyHeader": { "type": "apiKey", "in": "header", "name": "X-API-KEY" }
    }
  }
}
