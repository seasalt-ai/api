{
  "openapi": "3.0.2",
  "info": {
    "title": "SeaX Bulk SMS",
    "description": "## Overview \nLearn to configure, run, and monitor a Bulk SMS Campaign",
  },
  "paths": {
    "/api/v1/workspace/{workspace_id}/campaigns": {
      "get": {
        "tags": [
          "campaigns"
        ],
        "summary": "List Campaigns",
        "description": "List all campaigns",
        "operationId": "list_campaigns_api_v1_workspace__workspace_id__campaigns_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Workspace Id",
              "type": "string"
            },
            "name": "workspace_id",
            "in": "path"
          },
          {
            "description": "Optional, a filter for one or more campaign types with comma-separated list. Possible enum values: SMS, MMS, AI_AGENT, WHATSAPP_BUSINESS_PLATFORM_MESSAGE.",
            "required": false,
            "schema": {
              "title": "Types",
              "type": "string",
              "description": "Optional, a filter for one or more campaign types with comma-separated list. Possible enum values: SMS, MMS, AI_AGENT, WHATSAPP_BUSINESS_PLATFORM_MESSAGE."
            },
            "name": "types",
            "in": "query"
          },
          {
            "description": "Optional, a filter for one or more phone numbers with comma-separated list.",
            "required": false,
            "schema": {
              "title": "Phone Numbers",
              "type": "string",
              "description": "Optional, a filter for one or more phone numbers with comma-separated list."
            },
            "name": "phone_numbers",
            "in": "query"
          },
          {
            "description": "Optional, a filter for AI agent conversation config ID.",
            "required": false,
            "schema": {
              "title": "Ai Agent Conversation Config Id",
              "type": "string",
              "description": "Optional, a filter for AI agent conversation config ID."
            },
            "name": "ai_agent_conversation_config_id",
            "in": "query"
          },
          {
            "description": "Optional, a filter for one or more status with comma-separated list.",
            "required": false,
            "schema": {
              "title": "Statuses",
              "type": "string",
              "description": "Optional, a filter for one or more status with comma-separated list."
            },
            "name": "statuses",
            "in": "query"
          },
          {
            "description": "Optional, search campaigns by stage.",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CampaignMode"
                }
              ],
              "description": "Optional, search campaigns by stage."
            },
            "name": "mode",
            "in": "query"
          },
          {
            "description": "Optional, search campaigns by stage.",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CampaignStage"
                }
              ],
              "description": "Optional, search campaigns by stage.",
              "default": "INSTANCE"
            },
            "name": "stage",
            "in": "query"
          },
          {
            "description": "Optional, start of datetime range for the campaign start_time field.",
            "required": false,
            "schema": {
              "title": "Start Time From",
              "type": "string",
              "description": "Optional, start of datetime range for the campaign start_time field.",
              "format": "date-time"
            },
            "name": "start_time_from",
            "in": "query"
          },
          {
            "description": "Optional, end of datetime range for the campaign start_time field.",
            "required": false,
            "schema": {
              "title": "Start Time To",
              "type": "string",
              "description": "Optional, end of datetime range for the campaign start_time field.",
              "format": "date-time"
            },
            "name": "start_time_to",
            "in": "query"
          },
          {
            "description": "Optional, start of datetime range for the campaign end_time field.",
            "required": false,
            "schema": {
              "title": "End Time From",
              "type": "string",
              "description": "Optional, start of datetime range for the campaign end_time field.",
              "format": "date-time"
            },
            "name": "end_time_from",
            "in": "query"
          },
          {
            "description": "Optional, end of datetime range for the campaign end_time field.",
            "required": false,
            "schema": {
              "title": "End Time To",
              "type": "string",
              "description": "Optional, end of datetime range for the campaign end_time field.",
              "format": "date-time"
            },
            "name": "end_time_to",
            "in": "query"
          },
          {
            "description": "Optional, determine the number of returned rows after skipped offset, if it is 0, return all items.",
            "required": false,
            "schema": {
              "title": "Limit",
              "minimum": 0.0,
              "type": "integer",
              "description": "Optional, determine the number of returned rows after skipped offset, if it is 0, return all items.",
              "default": 10
            },
            "example": 10,
            "name": "limit",
            "in": "query"
          },
          {
            "description": "Optional, determine the number of rows need be skipped.",
            "required": false,
            "schema": {
              "title": "Offset",
              "minimum": 0.0,
              "type": "integer",
              "description": "Optional, determine the number of rows need be skipped.",
              "default": 0
            },
            "example": 0,
            "name": "offset",
            "in": "query"
          },
          {
            "description": "Optional, order items by asc or desc with comma-separated list of <field>:<direction> pairs, default is created_time:desc.",
            "required": false,
            "schema": {
              "title": "Order By",
              "type": "string",
              "description": "Optional, order items by asc or desc with comma-separated list of <field>:<direction> pairs, default is created_time:desc.",
              "default": "created_time:desc"
            },
            "name": "order_by",
            "in": "query"
          },
          {
            "description": "Authorization with APIKey. Please see https://seax-dev.seasalt.ai/bulk-sms-api/redoc#section/Authorization",
            "required": false,
            "schema": {
              "title": "APIKey",
              "type": "string",
              "description": "Authorization with APIKey. Please see https://seax-dev.seasalt.ai/bulk-sms-api/redoc#section/Authorization"
            },
            "name": "X-API-Key",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponse_Campaign_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "campaigns"
        ],
        "summary": "Create Campaign",
        "description": "Create a new campaign",
        "operationId": "create_campaign_api_v1_workspace__workspace_id__campaigns_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Workspace Id",
              "type": "string"
            },
            "name": "workspace_id",
            "in": "path"
          },
          {
            "description": "Authorization with APIKey. Please see https://seax-dev.seasalt.ai/bulk-sms-api/redoc#section/Authorization",
            "required": false,
            "schema": {
              "title": "APIKey",
              "type": "string",
              "description": "Authorization with APIKey. Please see https://seax-dev.seasalt.ai/bulk-sms-api/redoc#section/Authorization"
            },
            "name": "X-API-Key",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewCampaign"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Campaign"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/workspace/{workspace_id}/send_message": {
      "post": {
        "tags": [
          "messages"
        ],
        "summary": "Send Message",
        "description": "Send a SMS/MMS and create a contact if not exists in your contact list.",
        "operationId": "send_message_api_v1_workspace__workspace_id__send_message_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Workspace Id",
              "type": "string"
            },
            "name": "workspace_id",
            "in": "path"
          },
          {
            "description": "Authorization with APIKey. Please see https://seax-dev.seasalt.ai/bulk-sms-api/redoc#section/Authorization",
            "required": false,
            "schema": {
              "title": "APIKey",
              "type": "string",
              "description": "Authorization with APIKey. Please see https://seax-dev.seasalt.ai/bulk-sms-api/redoc#section/Authorization"
            },
            "name": "X-API-Key",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendMessage"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/workspace/{workspace_id}/import_contacts": {
      "post": {
        "tags": [
          "contact"
        ],
        "summary": "Import Contacts",
        "description": "Import contacts from csv. The csv should have these headers\n    - name\n    - phone\n    - whatsapp (show or hide based on the setting)\n    - labels\n\n    Other header will be consider as custom contact fields.\n\n    # The example of raw csv:\n    # 'new_field' will be custom field.\n    name,phone,whatsapp,labels,new_field\n    new_customer,+12345678900,+12345678900,\"test,test3\",2",
        "operationId": "import_contacts_api_v1_workspace__workspace_id__import_contacts_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Workspace Id",
              "type": "string"
            },
            "name": "workspace_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/DuplicatedStrategy"
                }
              ],
              "default": "mark"
            },
            "name": "duplicate_strategy",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CountryCode"
                }
              ],
              "default": "US"
            },
            "name": "phone_country",
            "in": "query"
          },
          {
            "description": "Authorization with APIKey. Please see https://seax-dev.seasalt.ai/bulk-sms-api/redoc#section/Authorization",
            "required": false,
            "schema": {
              "title": "APIKey",
              "type": "string",
              "description": "Authorization with APIKey. Please see https://seax-dev.seasalt.ai/bulk-sms-api/redoc#section/Authorization"
            },
            "name": "X-API-Key",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_import_contacts_api_v1_workspace__workspace_id__import_contacts_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Job"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/workspace/{workspace_id}/jobs/{job_id}": {
      "get": {
        "tags": [
          "jobs"
        ],
        "summary": "Get Job",
        "description": "Get a job.",
        "operationId": "get_job_api_v1_workspace__workspace_id__jobs__job_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Workspace Id",
              "type": "string"
            },
            "name": "workspace_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Job Id",
              "type": "string"
            },
            "name": "job_id",
            "in": "path"
          },
          {
            "description": "Authorization with APIKey. Please see https://seax-dev.seasalt.ai/bulk-sms-api/redoc#section/Authorization",
            "required": false,
            "schema": {
              "title": "APIKey",
              "type": "string",
              "description": "Authorization with APIKey. Please see https://seax-dev.seasalt.ai/bulk-sms-api/redoc#section/Authorization"
            },
            "name": "X-API-Key",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Job"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/workspace/{workspace_id}/phones": {
      "get": {
        "tags": [
          "phones"
        ],
        "summary": "Get Phones",
        "description": "List all phones.",
        "operationId": "get_phones_api_v1_workspace__workspace_id__phones_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Workspace Id",
              "type": "string"
            },
            "name": "workspace_id",
            "in": "path"
          },
          {
            "description": "Optional, determine the number of rows need be skipped.",
            "required": false,
            "schema": {
              "title": "Offset",
              "minimum": 0.0,
              "type": "integer",
              "description": "Optional, determine the number of rows need be skipped.",
              "default": 0
            },
            "example": 0,
            "name": "offset",
            "in": "query"
          },
          {
            "description": "Optional, determine the number of returned rows after skipped offset, if it is 0, return all items.",
            "required": false,
            "schema": {
              "title": "Limit",
              "minimum": 0.0,
              "type": "integer",
              "description": "Optional, determine the number of returned rows after skipped offset, if it is 0, return all items.",
              "default": 10
            },
            "example": 10,
            "name": "limit",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Is Owned",
              "type": "boolean",
              "default": false
            },
            "name": "is_owned",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Enabled",
              "type": "boolean",
              "default": true
            },
            "name": "enabled",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Voice Available",
              "type": "boolean"
            },
            "name": "voice_available",
            "in": "query"
          },
          {
            "description": "Authorization with APIKey. Please see https://seax-dev.seasalt.ai/bulk-sms-api/redoc#section/Authorization",
            "required": false,
            "schema": {
              "title": "APIKey",
              "type": "string",
              "description": "Authorization with APIKey. Please see https://seax-dev.seasalt.ai/bulk-sms-api/redoc#section/Authorization"
            },
            "name": "X-API-Key",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponse_PhoneDetail_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "phones"
        ],
        "summary": "Create Phone",
        "description": "Create a phone. The send price and receive price of sms is 0.0129 and 0.0105 respectively.The send price and receive price of mms is 0.03 and 0.03 respectively.The highest possible carrier fee and phone type is considered.The detail of fee is here https://www.twilio.com/sms/pricing/us.",
        "operationId": "create_phone_api_v1_workspace__workspace_id__phones_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Workspace Id",
              "type": "string"
            },
            "name": "workspace_id",
            "in": "path"
          },
          {
            "description": "Authorization with APIKey. Please see https://seax-dev.seasalt.ai/bulk-sms-api/redoc#section/Authorization",
            "required": false,
            "schema": {
              "title": "APIKey",
              "type": "string",
              "description": "Authorization with APIKey. Please see https://seax-dev.seasalt.ai/bulk-sms-api/redoc#section/Authorization"
            },
            "name": "X-API-Key",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewPhone"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhoneWithUser"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/workspace/{workspace_id}/api_keys/reset": {
      "post": {
        "tags": [
          "api_keys"
        ],
        "summary": "Reset Api Key",
        "description": "Clear all api keys and create a new one.",
        "operationId": "reset_api_key_api_v1_workspace__workspace_id__api_keys_reset_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Workspace Id",
              "type": "string"
            },
            "name": "workspace_id",
            "in": "path"
          },
          {
            "description": "Authorization with APIKey. Please see https://seax-dev.seasalt.ai/bulk-sms-api/redoc#section/Authorization",
            "required": false,
            "schema": {
              "title": "APIKey",
              "type": "string",
              "description": "Authorization with APIKey. Please see https://seax-dev.seasalt.ai/bulk-sms-api/redoc#section/Authorization"
            },
            "name": "X-API-Key",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponse_APIkey_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "OAuth2PasswordBearer": {
        "type": "oauth2",
        "description": "Authorization with Access Token, Please see https://seax-dev.seasalt.ai/bulk-sms-api/redoc#section/Authorization.",
        "flows": {
          "password": {
            "scopes": {},
            "tokenUrl": "api/v1/users/login"
          }
        }
      }
    }
  }
}