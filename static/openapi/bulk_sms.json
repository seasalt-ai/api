{
  "openapi": "3.0.2",
  "info": {
    "title": "SeaX Bulk SMS",
    "description": "- [Overview](#section/Overview)\n- [Quick Start](#section/Quick-Start)\n- [Authorization](#section/Authorization)\n- [Features](#section/Features)\n\n## Overview\nSeaX Bulk SMS helps you manage communication with customers through SMS/MMS.\n\n### Send\n1. Send Bulk SMS/MMS\n2. Schedule send up to 7 days in advance\n2. Respect \"Do Not Contact\"\n3. View the Delivery Report\n4. Send from multiple numbers\n\n### Receive\n1. Capture auto opt-in and opt-out\n2. Receive customer replies and text back\n\n### Contact Management\n1. Import/export contact list\n2. Assign multiple labels to contact\n3. Group contacts by the label to Bulk Send\n\n## Quick Start\n### Sending a campaign\n#### 1. Follow the steps in [Authorization](#section/Authorization) to generate APIKey to authorize your request\n\n#### 2. Import contacts\n1. [Import contacts](#tag/contact/operation/import_contacts_api_v1_workspace__workspace_id__import_contacts_post).\n2. [Get job status](#tag/jobs/operation/get_job_api_v1_workspace__workspace_id__jobs__job_id__get) by job_id from previous step. If the status of the `job` is `finished` or `failed`, it means the progress of importing contacts is over.\n\n#### 3. Launch campaign\n1. [Send a campaign](#tag/campaigns/operation/create_campaign_api_v1_workspace__workspace_id__campaigns_post).\n2. [Get job status](#tag/jobs/operation/get_job_api_v1_workspace__workspace_id__jobs__job_id__get) by job_id from previous step.\nIf the status of the `job` is `finished` or `failed`, it means the progress of the campaign is over.\n3. [Check the result of campaign](#tag/campaigns/operation/list_campaign_logs_api_v1_workspace__workspace_id__campaigns__campaign_id__logs_get).\n\n### Sending an SMS/MMS\n#### 1. [Get the id of the sender phone.](#tag/phones/operation/get_phones_api_v1_workspace__workspace_id__phones_get)\n#### 2. [Send an SMS/MMS from the sender's phone with its id to the contact phone.](#tag/messages/operation/send_message_api_v1_workspace__workspace_id__send_message_post)\n\n### Contact Management\n#### 1. Create contacts with RESTful APIs\n1. [Create contact labels.](#tag/contact_label/operation/create_contact_label_api_v1_workspace__workspace_id__contact_labels_post)\n2. [Create contacts with contact labels.](#tag/contact/operation/create_contact_api_v1_workspace__workspace_id__contacts_post)\n\n#### 2. Create contacts by importing CSV\n1. [Import contacts](#tag/contact/operation/import_contacts_api_v1_workspace__workspace_id__import_contacts_post).\n2. [Get job status](#tag/jobs/operation/get_job_api_v1_workspace__workspace_id__jobs__job_id__get) by job_id from previous step. If the status of the `job` is `finished` or `failed`, it means the progress of importing contacts is over.\n\n\n## Authorization\n### Access token and refresh token\nThe `access token` is for authorization and the `refresh token` is to get a new `access token` when the old one is expired. The detailed description is here https://seaauth.seasalt.ai/redoc.\n1. [Login into SeaAuth](https://seaauth.seasalt.ai/redoc#tag/users/operation/login_api_v1_users_login_post) with scope `seax-bulk-sms`. The scope value would authorize the access token to use the endpoint of SeaX Bulk SMS.\n2. Add `access token` to the header `Authorization` with the `Bearer` prefix, for example, `Authorization`:`Bearer eyJ0eXAiOiJKV1...`.\n\n### API Key\nBecause the `access token` has a limit lifetime, it is inconvenient for backend integration to refresh after expiration. There is an `API Key` that would not expire until you refresh it. Here is how you can get a\n`API Key`.\n1. [Create API Key](#tag/api_keys/operation/reset_api_key_api_v1_workspace__workspace_id__api_keys_reset_post).\n2. Add APIKey to the header `X-API-Key`.\n\n<!-- ## Features\n### Auto reply with Keyword\n#### What is the keyword?\nWhen an inbound message from the contact is sent to your phone, the keyword would try to match the message and do the following two things:\n1. Automatically respond to the contact of an inbound message with a defined reply message.\n2. Add the defined labels to the contact of the inbound message.\n\n#### How do keywords work?\nThe matching process works as below:\n1. Match the message with system DNC words `stop`, `unsubscribe`, `remove me`, `stop sending me messages`, `wrong person`, and `wrong number`. If it matched, Add the system\nlabel `DNC` to the contact and reply to the contact with `dnc_reply_message` if the `enabled_dnc_reply` of your phone is `True`.\n2. If no match in Step 1. Match the message with the keywords associated with your phone in order of priority. When it matches, there is fine-grained control of automatic reply and adding a label with `enabled_auto_reply` and `enabled_contact_label`.\n3. If no match in Step 2. Reply to the contact with `generic_reply_message` if the `enabled_generic_reply` of your phone is `True`. -->",
    "version": "Beta"
  },
  "paths": {
    "/api/v1/workspace/{workspace_id}/campaigns": {
      "get": {
        "tags": [
          "campaigns"
        ],
        "summary": "List Campaigns",
        "description": "List all campaigns",
        "operationId": "list_campaigns_api_v1_workspace__workspace_id__campaigns_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Workspace Id",
              "type": "string"
            },
            "name": "workspace_id",
            "in": "path"
          },
          {
            "description": "Optional, a filter for one or more campaign types with comma-separated list. Possible enum values: SMS, MMS, AI_AGENT, WHATSAPP_BUSINESS_PLATFORM_MESSAGE.",
            "required": false,
            "schema": {
              "title": "Types",
              "type": "string",
              "description": "Optional, a filter for one or more campaign types with comma-separated list. Possible enum values: SMS, MMS, AI_AGENT, WHATSAPP_BUSINESS_PLATFORM_MESSAGE."
            },
            "name": "types",
            "in": "query"
          },
          {
            "description": "Optional, a filter for one or more phone numbers with comma-separated list.",
            "required": false,
            "schema": {
              "title": "Phone Numbers",
              "type": "string",
              "description": "Optional, a filter for one or more phone numbers with comma-separated list."
            },
            "name": "phone_numbers",
            "in": "query"
          },
          {
            "description": "Optional, a filter for AI agent conversation config ID.",
            "required": false,
            "schema": {
              "title": "Ai Agent Conversation Config Id",
              "type": "string",
              "description": "Optional, a filter for AI agent conversation config ID."
            },
            "name": "ai_agent_conversation_config_id",
            "in": "query"
          },
          {
            "description": "Optional, a filter for one or more status with comma-separated list.",
            "required": false,
            "schema": {
              "title": "Statuses",
              "type": "string",
              "description": "Optional, a filter for one or more status with comma-separated list."
            },
            "name": "statuses",
            "in": "query"
          },
          {
            "description": "Optional, search campaigns by stage.",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CampaignMode"
                }
              ],
              "description": "Optional, search campaigns by stage."
            },
            "name": "mode",
            "in": "query"
          },
          {
            "description": "Optional, search campaigns by stage.",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CampaignStage"
                }
              ],
              "description": "Optional, search campaigns by stage.",
              "default": "INSTANCE"
            },
            "name": "stage",
            "in": "query"
          },
          {
            "description": "Optional, start of datetime range for the campaign start_time field.",
            "required": false,
            "schema": {
              "title": "Start Time From",
              "type": "string",
              "description": "Optional, start of datetime range for the campaign start_time field.",
              "format": "date-time"
            },
            "name": "start_time_from",
            "in": "query"
          },
          {
            "description": "Optional, end of datetime range for the campaign start_time field.",
            "required": false,
            "schema": {
              "title": "Start Time To",
              "type": "string",
              "description": "Optional, end of datetime range for the campaign start_time field.",
              "format": "date-time"
            },
            "name": "start_time_to",
            "in": "query"
          },
          {
            "description": "Optional, start of datetime range for the campaign end_time field.",
            "required": false,
            "schema": {
              "title": "End Time From",
              "type": "string",
              "description": "Optional, start of datetime range for the campaign end_time field.",
              "format": "date-time"
            },
            "name": "end_time_from",
            "in": "query"
          },
          {
            "description": "Optional, end of datetime range for the campaign end_time field.",
            "required": false,
            "schema": {
              "title": "End Time To",
              "type": "string",
              "description": "Optional, end of datetime range for the campaign end_time field.",
              "format": "date-time"
            },
            "name": "end_time_to",
            "in": "query"
          },
          {
            "description": "Optional, determine the number of returned rows after skipped offset, if it is 0, return all items.",
            "required": false,
            "schema": {
              "title": "Limit",
              "minimum": 0.0,
              "type": "integer",
              "description": "Optional, determine the number of returned rows after skipped offset, if it is 0, return all items.",
              "default": 10
            },
            "example": 10,
            "name": "limit",
            "in": "query"
          },
          {
            "description": "Optional, determine the number of rows need be skipped.",
            "required": false,
            "schema": {
              "title": "Offset",
              "minimum": 0.0,
              "type": "integer",
              "description": "Optional, determine the number of rows need be skipped.",
              "default": 0
            },
            "example": 0,
            "name": "offset",
            "in": "query"
          },
          {
            "description": "Optional, order items by asc or desc with comma-separated list of <field>:<direction> pairs, default is created_time:desc.",
            "required": false,
            "schema": {
              "title": "Order By",
              "type": "string",
              "description": "Optional, order items by asc or desc with comma-separated list of <field>:<direction> pairs, default is created_time:desc.",
              "default": "created_time:desc"
            },
            "name": "order_by",
            "in": "query"
          },
          {
            "description": "Authorization with APIKey. Please see https://seax-dev.seasalt.ai/bulk-sms-api/redoc#section/Authorization",
            "required": false,
            "schema": {
              "title": "APIKey",
              "type": "string",
              "description": "Authorization with APIKey. Please see https://seax-dev.seasalt.ai/bulk-sms-api/redoc#section/Authorization"
            },
            "name": "X-API-Key",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponse_Campaign_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "campaigns"
        ],
        "summary": "Create Campaign",
        "description": "Create a new campaign",
        "operationId": "create_campaign_api_v1_workspace__workspace_id__campaigns_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Workspace Id",
              "type": "string"
            },
            "name": "workspace_id",
            "in": "path"
          },
          {
            "description": "Authorization with APIKey. Please see https://seax-dev.seasalt.ai/bulk-sms-api/redoc#section/Authorization",
            "required": false,
            "schema": {
              "title": "APIKey",
              "type": "string",
              "description": "Authorization with APIKey. Please see https://seax-dev.seasalt.ai/bulk-sms-api/redoc#section/Authorization"
            },
            "name": "X-API-Key",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewCampaign"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Campaign"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/workspace/{workspace_id}/send_message": {
      "post": {
        "tags": [
          "messages"
        ],
        "summary": "Send Message",
        "description": "Send a SMS/MMS and create a contact if not exists in your contact list.",
        "operationId": "send_message_api_v1_workspace__workspace_id__send_message_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Workspace Id",
              "type": "string"
            },
            "name": "workspace_id",
            "in": "path"
          },
          {
            "description": "Authorization with APIKey. Please see https://seax-dev.seasalt.ai/bulk-sms-api/redoc#section/Authorization",
            "required": false,
            "schema": {
              "title": "APIKey",
              "type": "string",
              "description": "Authorization with APIKey. Please see https://seax-dev.seasalt.ai/bulk-sms-api/redoc#section/Authorization"
            },
            "name": "X-API-Key",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendMessage"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/workspace/{workspace_id}/import_contacts": {
      "post": {
        "tags": [
          "contact"
        ],
        "summary": "Import Contacts",
        "description": "Import contacts from csv. The csv should have these headers\n    - name\n    - phone\n    - whatsapp (show or hide based on the setting)\n    - labels\n\n    Other header will be consider as custom contact fields.\n\n    # The example of raw csv:\n    # 'new_field' will be custom field.\n    name,phone,whatsapp,labels,new_field\n    new_customer,+12345678900,+12345678900,\"test,test3\",2",
        "operationId": "import_contacts_api_v1_workspace__workspace_id__import_contacts_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Workspace Id",
              "type": "string"
            },
            "name": "workspace_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/DuplicatedStrategy"
                }
              ],
              "default": "mark"
            },
            "name": "duplicate_strategy",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CountryCode"
                }
              ],
              "default": "US"
            },
            "name": "phone_country",
            "in": "query"
          },
          {
            "description": "Authorization with APIKey. Please see https://seax-dev.seasalt.ai/bulk-sms-api/redoc#section/Authorization",
            "required": false,
            "schema": {
              "title": "APIKey",
              "type": "string",
              "description": "Authorization with APIKey. Please see https://seax-dev.seasalt.ai/bulk-sms-api/redoc#section/Authorization"
            },
            "name": "X-API-Key",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_import_contacts_api_v1_workspace__workspace_id__import_contacts_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Job"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/workspace/{workspace_id}/jobs/{job_id}": {
      "get": {
        "tags": [
          "jobs"
        ],
        "summary": "Get Job",
        "description": "Get a job.",
        "operationId": "get_job_api_v1_workspace__workspace_id__jobs__job_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Workspace Id",
              "type": "string"
            },
            "name": "workspace_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Job Id",
              "type": "string"
            },
            "name": "job_id",
            "in": "path"
          },
          {
            "description": "Authorization with APIKey. Please see https://seax-dev.seasalt.ai/bulk-sms-api/redoc#section/Authorization",
            "required": false,
            "schema": {
              "title": "APIKey",
              "type": "string",
              "description": "Authorization with APIKey. Please see https://seax-dev.seasalt.ai/bulk-sms-api/redoc#section/Authorization"
            },
            "name": "X-API-Key",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Job"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/workspace/{workspace_id}/phones": {
      "get": {
        "tags": [
          "phones"
        ],
        "summary": "Get Phones",
        "description": "List all phones.",
        "operationId": "get_phones_api_v1_workspace__workspace_id__phones_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Workspace Id",
              "type": "string"
            },
            "name": "workspace_id",
            "in": "path"
          },
          {
            "description": "Optional, determine the number of rows need be skipped.",
            "required": false,
            "schema": {
              "title": "Offset",
              "minimum": 0.0,
              "type": "integer",
              "description": "Optional, determine the number of rows need be skipped.",
              "default": 0
            },
            "example": 0,
            "name": "offset",
            "in": "query"
          },
          {
            "description": "Optional, determine the number of returned rows after skipped offset, if it is 0, return all items.",
            "required": false,
            "schema": {
              "title": "Limit",
              "minimum": 0.0,
              "type": "integer",
              "description": "Optional, determine the number of returned rows after skipped offset, if it is 0, return all items.",
              "default": 10
            },
            "example": 10,
            "name": "limit",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Is Owned",
              "type": "boolean",
              "default": false
            },
            "name": "is_owned",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Enabled",
              "type": "boolean",
              "default": true
            },
            "name": "enabled",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Voice Available",
              "type": "boolean"
            },
            "name": "voice_available",
            "in": "query"
          },
          {
            "description": "Authorization with APIKey. Please see https://seax-dev.seasalt.ai/bulk-sms-api/redoc#section/Authorization",
            "required": false,
            "schema": {
              "title": "APIKey",
              "type": "string",
              "description": "Authorization with APIKey. Please see https://seax-dev.seasalt.ai/bulk-sms-api/redoc#section/Authorization"
            },
            "name": "X-API-Key",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponse_PhoneDetail_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "phones"
        ],
        "summary": "Create Phone",
        "description": "Create a phone. The send price and receive price of sms is 0.0129 and 0.0105 respectively.The send price and receive price of mms is 0.03 and 0.03 respectively.The highest possible carrier fee and phone type is considered.The detail of fee is here https://www.twilio.com/sms/pricing/us.",
        "operationId": "create_phone_api_v1_workspace__workspace_id__phones_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Workspace Id",
              "type": "string"
            },
            "name": "workspace_id",
            "in": "path"
          },
          {
            "description": "Authorization with APIKey. Please see https://seax-dev.seasalt.ai/bulk-sms-api/redoc#section/Authorization",
            "required": false,
            "schema": {
              "title": "APIKey",
              "type": "string",
              "description": "Authorization with APIKey. Please see https://seax-dev.seasalt.ai/bulk-sms-api/redoc#section/Authorization"
            },
            "name": "X-API-Key",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewPhone"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhoneWithUser"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/workspace/{workspace_id}/api_keys/reset": {
      "post": {
        "tags": [
          "api_keys"
        ],
        "summary": "Reset Api Key",
        "description": "Clear all api keys and create a new one.",
        "operationId": "reset_api_key_api_v1_workspace__workspace_id__api_keys_reset_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Workspace Id",
              "type": "string"
            },
            "name": "workspace_id",
            "in": "path"
          },
          {
            "description": "Authorization with APIKey. Please see https://seax-dev.seasalt.ai/bulk-sms-api/redoc#section/Authorization",
            "required": false,
            "schema": {
              "title": "APIKey",
              "type": "string",
              "description": "Authorization with APIKey. Please see https://seax-dev.seasalt.ai/bulk-sms-api/redoc#section/Authorization"
            },
            "name": "X-API-Key",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResponse_APIkey_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "ACLIPAddress": {
        "title": "ACLIPAddress",
        "required": [
          "ip_address",
          "id"
        ],
        "type": "object",
        "properties": {
          "ip_address": {
            "title": "ip_address",
            "type": "string",
            "description": "IP address for IP ACL will be used to authenticate the INVITE for inbound SIP calls."
          },
          "port": {
            "title": "port",
            "type": "integer",
            "description": "Port for IP ACL will be used to authenticate the INVITE for inbound SIP calls."
          },
          "id": {
            "title": "Id",
            "type": "string",
            "description": "The entry UUID.",
            "example": "0354fb10-9e18-4923-a213-6253800f8d01"
          }
        },
        "description": "ACLIPAddress schema."
      },
      "AIAgent": {
        "title": "AIAgent",
        "required": [
          "id",
          "name",
          "conversation_config_id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "description": "The entry UUID.",
            "example": "0354fb10-9e18-4923-a213-6253800f8d01"
          },
          "name": {
            "title": "name",
            "type": "string",
            "description": "AI agent name.",
            "example": ""
          },
          "conversation_config_id": {
            "title": "conversation_config_id",
            "type": "string",
            "description": "AI agent associated conversation config ID.",
            "example": "0354fb10-9e18-4923-a213-6253800f8d01"
          },
          "integrations": {
            "title": "integrations",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConversationIntegration"
            },
            "description": "AI agent integrations."
          }
        },
        "description": "AI agent schema."
      },
      "APIkey": {
        "title": "APIkey",
        "required": [
          "id",
          "api_key",
          "name",
          "created_time",
          "updated_time"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "id",
            "type": "string",
            "description": "The uuid of APIkey",
            "example": "11111111-2222-4444-3333-555555555555"
          },
          "api_key": {
            "title": "api_key",
            "type": "string",
            "description": "The true value of APIkey",
            "example": "0000111122223333444455556666777788889999aaaabbbbccccddddeeeeffff"
          },
          "name": {
            "title": "name",
            "type": "string",
            "description": "The name of APIkey",
            "example": "Testing"
          },
          "created_time": {
            "title": "created_time",
            "type": "string",
            "description": "The time of this APIkey created.",
            "format": "date-time",
            "example": "2025-07-10T02:40:45.129099"
          },
          "updated_time": {
            "title": "updated_time",
            "type": "string",
            "description": "The time of this APIkey updated.",
            "format": "date-time",
            "example": "2025-07-10T02:40:45.129114"
          }
        },
        "description": "APIkey schema"
      },
      "AdminEndpointSchema": {
        "title": "AdminEndpointSchema",
        "required": [
          "workspace_id"
        ],
        "type": "object",
        "properties": {
          "workspace_id": {
            "title": "workspace_id",
            "type": "string",
            "description": "The id of workspace."
          },
          "resource_limit": {
            "title": "resource_limit",
            "type": "integer",
            "description": "The sync limit of resources, default 0 (means no limit).",
            "default": 0
          },
          "resource_offset": {
            "title": "resource_offset",
            "type": "integer",
            "description": "The sync offset of resources, default 0 (means no offset).",
            "default": 0
          },
          "sleep_second_pre_resource": {
            "title": "sleep_second_pre_resource",
            "type": "number",
            "description": "The sync offset of resources, default 0.3s.",
            "default": 0.3
          }
        },
        "description": "Admin endpoint schema."
      },
      "AgentSkill": {
        "title": "AgentSkill",
        "required": [
          "name",
          "description",
          "id",
          "created_time",
          "updated_time"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "name",
            "type": "string",
            "description": "The name of agent skill.",
            "example": "VIP"
          },
          "description": {
            "title": "description",
            "type": "string",
            "description": "The description of agent skill.",
            "example": "This skill is for vip customer"
          },
          "id": {
            "title": "Id",
            "type": "string",
            "description": "The entry UUID.",
            "example": "0354fb10-9e18-4923-a213-6253800f8d01"
          },
          "created_time": {
            "title": "Created Time",
            "type": "string",
            "description": "The time of this item created.",
            "format": "date-time",
            "example": "2025-07-10T02:40:38.825204"
          },
          "updated_time": {
            "title": "Updated Time",
            "type": "string",
            "description": "The time of this item updated.",
            "format": "date-time",
            "example": "2025-07-10T02:40:38.825222"
          }
        },
        "description": "AgentSkill schema"
      },
      "AgentSkillWithAgentCount": {
        "title": "AgentSkillWithAgentCount",
        "required": [
          "name",
          "description",
          "id",
          "created_time",
          "updated_time"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "name",
            "type": "string",
            "description": "The name of agent skill.",
            "example": "VIP"
          },
          "description": {
            "title": "description",
            "type": "string",
            "description": "The description of agent skill.",
            "example": "This skill is for vip customer"
          },
          "id": {
            "title": "Id",
            "type": "string",
            "description": "The entry UUID.",
            "example": "0354fb10-9e18-4923-a213-6253800f8d01"
          },
          "created_time": {
            "title": "Created Time",
            "type": "string",
            "description": "The time of this item created.",
            "format": "date-time",
            "example": "2025-07-10T02:40:38.825204"
          },
          "updated_time": {
            "title": "Updated Time",
            "type": "string",
            "description": "The time of this item updated.",
            "format": "date-time",
            "example": "2025-07-10T02:40:38.825222"
          },
          "user_count": {
            "title": "user_count",
            "type": "integer",
            "description": "The user count of agent skill.",
            "default": 0
          }
        },
        "description": "AgentSkillWithAgentCount schema"
      },
      "AgentSkillWithAgents": {
        "title": "AgentSkillWithAgents",
        "required": [
          "name",
          "description",
          "id",
          "created_time",
          "updated_time"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "name",
            "type": "string",
            "description": "The name of agent skill.",
            "example": "VIP"
          },
          "description": {
            "title": "description",
            "type": "string",
            "description": "The description of agent skill.",
            "example": "This skill is for vip customer"
          },
          "id": {
            "title": "Id",
            "type": "string",
            "description": "The entry UUID.",
            "example": "0354fb10-9e18-4923-a213-6253800f8d01"
          },
          "created_time": {
            "title": "Created Time",
            "type": "string",
            "description": "The time of this item created.",
            "format": "date-time",
            "example": "2025-07-10T02:40:38.825204"
          },
          "updated_time": {
            "title": "Updated Time",
            "type": "string",
            "description": "The time of this item updated.",
            "format": "date-time",
            "example": "2025-07-10T02:40:38.825222"
          },
          "users": {
            "title": "users",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SimpleUser"
            },
            "description": "The users of agent skill."
          }
        },
        "description": "AgentSkillWithAgents schema"
      },
      "AttRateLimits": {
        "title": "AttRateLimits",
        "required": [
          "mps",
          "msg_class"
        ],
        "type": "object",
        "properties": {
          "mps": {
            "title": "Mps",
            "type": "integer"
          },
          "msg_class": {
            "title": "Msg Class",
            "type": "string"
          }
        },
        "description": "Att schema"
      },
      "Audio": {
        "title": "Audio",
        "required": [
          "created_time",
          "updated_time",
          "id",
          "url",
          "size",
          "duration",
          "type"
        ],
        "type": "object",
        "properties": {
          "created_time": {
            "title": "Created Time",
            "type": "string",
            "description": "The time of this item created.",
            "format": "date-time",
            "example": "2025-07-10T02:40:38.825204"
          },
          "updated_time": {
            "title": "Updated Time",
            "type": "string",
            "description": "The time of this item updated.",
            "format": "date-time",
            "example": "2025-07-10T02:40:38.825222"
          },
          "id": {
            "title": "Id",
            "type": "string",
            "description": "The entry UUID.",
            "example": "0354fb10-9e18-4923-a213-6253800f8d01"
          },
          "url": {
            "title": "Url",
            "type": "string",
            "description": "Audio URL.",
            "example": "https://seax-bulksms.s3.amazonaws.com/audio/xxx.wav"
          },
          "size": {
            "title": "Size",
            "minimum": 0.0,
            "type": "integer",
            "description": "Audio size in bytes."
          },
          "duration": {
            "title": "Duration",
            "minimum": 0.0,
            "type": "number",
            "description": "Audio duration in seconds."
          },
          "type": {
            "title": "Type",
            "type": "string",
            "description": "Audio type.",
            "example": "wav"
          }
        },
        "description": "Audio schema"
      },
      "AutoDialerCampaign": {
        "title": "AutoDialerCampaign",
        "required": [
          "name",
          "type",
          "max_attempts",
          "max_dialers",
          "capture_keypress",
          "capture_stt",
          "is_timezone_aware",
          "is_schedule",
          "created_time",
          "updated_time",
          "id",
          "mode",
          "stage"
        ],
        "type": "object",
        "properties": {
          "start_time": {
            "title": "Start Time",
            "type": "string",
            "description": "The timestamp when this campaign started.",
            "format": "date-time",
            "example": "2025-07-10T02:40:47.415375"
          },
          "end_time": {
            "title": "End Time",
            "type": "string",
            "description": "The timestamp when this campaign ended.",
            "format": "date-time",
            "example": "2025-07-10T02:40:47.415396"
          },
          "name": {
            "title": "Name",
            "type": "string",
            "description": "Auto dialer campaign name",
            "example": "My auto dialer campaign"
          },
          "draft_name": {
            "title": "draft_name",
            "type": "string",
            "description": "The draft name of this auto dialer campaign.",
            "example": "My draft auto dialer campaign"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AutoDialerCampaignType"
              }
            ],
            "description": "Auto dialer campaign type",
            "example": "VOICE_DROP"
          },
          "message": {
            "title": "Message",
            "type": "string",
            "description": "Message for text-to-speech.",
            "example": "Hello my friend."
          },
          "tts_language": {
            "title": "Tts Language",
            "type": "string",
            "description": "Language code for text-to-speech.",
            "example": "en-US."
          },
          "tts_voice": {
            "title": "Tts Voice",
            "type": "string",
            "description": "Voice model for text-to-speech.",
            "default": "default",
            "example": "default"
          },
          "ai_agent_id": {
            "title": "Ai Agent Id",
            "type": "string",
            "description": "AI agent ID.",
            "example": "0354fb10-9e18-4923-a213-6253800f8d01"
          },
          "ai_agent_conversation_config_id": {
            "title": "Ai Agent Conversation Config Id",
            "type": "string",
            "description": "AI agent associated conversation config ID.",
            "example": "0354fb10-9e18-4923-a213-6253800f8d01"
          },
          "max_attempts": {
            "title": "Max Attempts",
            "exclusiveMinimum": 0.0,
            "type": "integer",
            "description": "Dial to a contact up to the number of attempts."
          },
          "max_dialers": {
            "title": "Max Dialers",
            "exclusiveMinimum": 0.0,
            "type": "integer",
            "description": "Maximum number of concurrent dialers."
          },
          "capture_keypress": {
            "title": "Capture Keypress",
            "type": "boolean",
            "description": "Has true to capture keypress in IVR."
          },
          "capture_stt": {
            "title": "Capture Stt",
            "type": "boolean",
            "description": "Has true to capture speech-to-text in IVR."
          },
          "is_timezone_aware": {
            "title": "Is Timezone Aware",
            "type": "boolean",
            "description": "Has true if this auto dialer campaign is timezone aware."
          },
          "is_schedule": {
            "title": "Is Schedule",
            "type": "boolean",
            "description": "Has true if this auto dialer campaign is schedule."
          },
          "contact_file_url": {
            "title": "contact_file_url",
            "maxLength": 2083,
            "minLength": 1,
            "type": "string",
            "description": "The URL of the contact file contains contacts for this campaign.",
            "format": "uri"
          },
          "timezone": {
            "title": "timezone",
            "type": "string",
            "description": "The timezone of this auto dialer campaign.",
            "example": "UTC"
          },
          "campaign_metadata": {
            "title": "campaign_metadata",
            "allOf": [
              {
                "$ref": "#/components/schemas/CampaignMetadata"
              }
            ],
            "description": "The metadata of this campaign."
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CampaignJobStatus"
              }
            ],
            "description": "Campaign status.",
            "example": "PENDING"
          },
          "created_time": {
            "title": "Created Time",
            "type": "string",
            "description": "The time of this item created.",
            "format": "date-time",
            "example": "2025-07-10T02:40:38.825204"
          },
          "updated_time": {
            "title": "Updated Time",
            "type": "string",
            "description": "The time of this item updated.",
            "format": "date-time",
            "example": "2025-07-10T02:40:38.825222"
          },
          "id": {
            "title": "Id",
            "type": "string",
            "description": "The entry UUID.",
            "example": "0354fb10-9e18-4923-a213-6253800f8d01"
          },
          "mode": {
            "title": "mode",
            "allOf": [
              {
                "$ref": "#/components/schemas/CampaignMode"
              }
            ],
            "description": "The mode of this auto dialer campaign.",
            "example": "WEB"
          },
          "stage": {
            "title": "stage",
            "allOf": [
              {
                "$ref": "#/components/schemas/CampaignStage"
              }
            ],
            "description": "The stage of this auto dialer campaign.",
            "example": "INSTANCE"
          },
          "audio": {
            "title": "Audio",
            "allOf": [
              {
                "$ref": "#/components/schemas/Audio"
              }
            ],
            "description": "The associated audio for this auto dialer campaign."
          },
          "phones": {
            "title": "Phones",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/app__api__v1__schema__phone__Phone"
            },
            "description": "The phones are used for this auto dialer campaign."
          },
          "statistics": {
            "title": "Statistics",
            "allOf": [
              {
                "$ref": "#/components/schemas/AutoDialerCampaignStatistics"
              }
            ],
            "description": "The statistic for the result of answering machine detection(AMD) for this auto dialer campaign."
          },
          "contact_fields": {
            "title": "contact_fields",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactFieldsResponse"
            },
            "description": "Contact fields associated with this auto dialer campaign"
          },
          "relative_time_config": {
            "title": "relative_time_config",
            "allOf": [
              {
                "$ref": "#/components/schemas/RelativeTimeConfig"
              }
            ],
            "description": "The relative time config of this auto dialer campaign."
          }
        },
        "description": "Auto dialer campaign schema."
      },
      "AutoDialerCampaignContact": {
        "title": "AutoDialerCampaignContact",
        "required": [
          "name",
          "phone",
          "contact_field_data",
          "id"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "name",
            "type": "string",
            "description": "The name of this contact",
            "example": "TomHanks"
          },
          "phone": {
            "title": "phone",
            "type": "string",
            "description": "The phone of this contact",
            "example": "+12345678900"
          },
          "note": {
            "title": "note",
            "type": "string",
            "description": "The note of this contact",
            "default": "",
            "example": "New contact"
          },
          "whatsapp_phone": {
            "title": "whatsapp_phone",
            "type": "string",
            "description": "The whatsapp phone of this contact",
            "example": "+12345678900"
          },
          "contact_field_data": {
            "title": "contact_field_data",
            "type": "object",
            "description": "The contact field data",
            "example": {
              "field1": 1
            }
          },
          "id": {
            "title": "Id",
            "type": "string",
            "description": "The entry UUID.",
            "example": "0354fb10-9e18-4923-a213-6253800f8d01"
          }
        },
        "description": "AutoDialerCampaignContact."
      },
      "AutoDialerCampaignDryRunPayload": {
        "title": "AutoDialerCampaignDryRunPayload",
        "required": [
          "phone_ids",
          "type",
          "capture_keypress",
          "capture_stt",
          "dial_to"
        ],
        "type": "object",
        "properties": {
          "audio_url": {
            "title": "Audio Url",
            "type": "string",
            "description": "The associated audio URL for this auto dialer campaign.",
            "example": "https://seax-bulksms.s3.amazonaws.com/audio/xxx.wav"
          },
          "phone_ids": {
            "title": "Phone Ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The phone IDs are used for this auto dialer campaign.",
            "example": [
              "0354fb10-9e18-4923-a213-6253800f8d01"
            ]
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AutoDialerCampaignType"
              }
            ],
            "description": "Auto dialer campaign type.",
            "example": "VOICE_DROP"
          },
          "message": {
            "title": "Message",
            "type": "string",
            "description": "Message for text-to-speech.",
            "example": "Hello my friend."
          },
          "tts_language": {
            "title": "Tts Language",
            "type": "string",
            "description": "Language code for text-to-speech.",
            "example": "en-US."
          },
          "tts_voice": {
            "title": "Tts Voice",
            "type": "string",
            "description": "Voice model for text-to-speech.",
            "default": "default",
            "example": "default"
          },
          "ai_agent_conversation_config_id": {
            "title": "Ai Agent Conversation Config Id",
            "type": "string",
            "description": "AI agent associated conversation config ID.",
            "example": "0354fb10-9e18-4923-a213-6253800f8d01"
          },
          "ai_agent_starting_message": {
            "title": "Ai Agent Starting Message",
            "type": "string",
            "description": "Starting message for AI agent.",
            "example": "Hello, how can I help you?"
          },
          "capture_keypress": {
            "title": "Capture Keypress",
            "type": "boolean",
            "description": "Has true to capture keypress in IVR."
          },
          "capture_stt": {
            "title": "Capture Stt",
            "type": "boolean",
            "description": "Has true to capture speech-to-text in IVR."
          },
          "dial_to": {
            "title": "Dial To",
            "type": "string",
            "description": "Try to dial this phone number.",
            "example": "+19361111111"
          }
        },
        "description": "Auto dialer campaign dry run payload schema."
      },
      "AutoDialerCampaignExecutionCallbackEvent": {
        "title": "AutoDialerCampaignExecutionCallbackEvent",
        "required": [
          "auto_dialer_campaign_job_id"
        ],
        "type": "object",
        "properties": {
          "logs": {
            "title": "Logs",
            "type": "string",
            "description": "Job logs."
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CampaignJobStatus"
              }
            ],
            "description": "Campaign status.",
            "example": "PENDING"
          },
          "auto_dialer_campaign_job_id": {
            "title": "Auto Dialer Campaign Job Id",
            "type": "string",
            "description": "Auto dialer campaign job UUID."
          },
          "answered_by": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MachineDetectionMode"
              }
            ],
            "description": "The result of answering machine detection(AMD), which determine if a human, answering machine or fax machine has picked up.",
            "example": "human"
          },
          "call_external_id": {
            "title": "Call External Id",
            "type": "string",
            "description": "External ID of this call.",
            "example": "CAxxx"
          },
          "ivr_captures": {
            "title": "Ivr Captures",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateOrUpdateCallIVRCapture"
            },
            "description": "The IVR captures for this call"
          },
          "is_dry_run": {
            "title": "Is Dry Run",
            "type": "boolean",
            "description": "Has true if this is an auto dialer campaign dry run callback.",
            "default": false
          },
          "is_ai_agent_call": {
            "title": "Is Ai Agent Call",
            "type": "boolean",
            "description": "Indicates whether the call was handled by an AI agent and if request source is voicebot manager",
            "default": false
          }
        },
        "description": "Auto dialer campaign execution callback event schema."
      },
      "AutoDialerCampaignJob": {
        "title": "AutoDialerCampaignJob",
        "required": [
          "attempt",
          "sequence",
          "status",
          "created_time",
          "updated_time",
          "id"
        ],
        "type": "object",
        "properties": {
          "attempt": {
            "title": "Attempt",
            "exclusiveMinimum": 0.0,
            "type": "integer",
            "description": "Number of attempt dial to the specific contact."
          },
          "sequence": {
            "title": "Sequence",
            "exclusiveMinimum": 0.0,
            "type": "integer",
            "description": "Dial sequence."
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CampaignJobStatus"
              }
            ],
            "description": "Campaign job status.",
            "example": "PENDING"
          },
          "answered_by": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MachineDetectionMode"
              }
            ],
            "description": "The result of answering machine detection(AMD), which determine if a human, answering machine or fax machine has picked up.",
            "example": "human"
          },
          "start_time": {
            "title": "Start Time",
            "type": "string",
            "description": "The timestamp when this campaign job started.",
            "format": "date-time",
            "example": "2025-07-10T02:40:47.728090"
          },
          "end_time": {
            "title": "End Time",
            "type": "string",
            "description": "The timestamp when this campaign job ended.",
            "format": "date-time",
            "example": "2025-07-10T02:40:47.728107"
          },
          "user_account": {
            "title": "User Account",
            "type": "string",
            "description": "The user account who this auto dialer campaign job belongs to.",
            "example": "myaccount@seasalt.ai"
          },
          "logs": {
            "title": "Logs",
            "type": "string",
            "description": "Job logs."
          },
          "created_time": {
            "title": "Created Time",
            "type": "string",
            "description": "The time of this item created.",
            "format": "date-time",
            "example": "2025-07-10T02:40:38.825204"
          },
          "updated_time": {
            "title": "Updated Time",
            "type": "string",
            "description": "The time of this item updated.",
            "format": "date-time",
            "example": "2025-07-10T02:40:38.825222"
          },
          "id": {
            "title": "Id",
            "type": "string",
            "description": "The entry UUID.",
            "example": "0354fb10-9e18-4923-a213-6253800f8d01"
          }
        },
        "description": "Auto dialer campaign job schema."
      },
      "AutoDialerCampaignJobDetail": {
        "title": "AutoDialerCampaignJobDetail",
        "required": [
          "attempt",
          "sequence",
          "status",
          "created_time",
          "updated_time",
          "id"
        ],
        "type": "object",
        "properties": {
          "attempt": {
            "title": "Attempt",
            "exclusiveMinimum": 0.0,
            "type": "integer",
            "description": "Number of attempt dial to the specific contact."
          },
          "sequence": {
            "title": "Sequence",
            "exclusiveMinimum": 0.0,
            "type": "integer",
            "description": "Dial sequence."
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CampaignJobStatus"
              }
            ],
            "description": "Campaign job status.",
            "example": "PENDING"
          },
          "answered_by": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MachineDetectionMode"
              }
            ],
            "description": "The result of answering machine detection(AMD), which determine if a human, answering machine or fax machine has picked up.",
            "example": "human"
          },
          "start_time": {
            "title": "Start Time",
            "type": "string",
            "description": "The timestamp when this campaign job started.",
            "format": "date-time",
            "example": "2025-07-10T02:40:47.728090"
          },
          "end_time": {
            "title": "End Time",
            "type": "string",
            "description": "The timestamp when this campaign job ended.",
            "format": "date-time",
            "example": "2025-07-10T02:40:47.728107"
          },
          "user_account": {
            "title": "User Account",
            "type": "string",
            "description": "The user account who this auto dialer campaign job belongs to.",
            "example": "myaccount@seasalt.ai"
          },
          "logs": {
            "title": "Logs",
            "type": "string",
            "description": "Job logs."
          },
          "created_time": {
            "title": "Created Time",
            "type": "string",
            "description": "The time of this item created.",
            "format": "date-time",
            "example": "2025-07-10T02:40:38.825204"
          },
          "updated_time": {
            "title": "Updated Time",
            "type": "string",
            "description": "The time of this item updated.",
            "format": "date-time",
            "example": "2025-07-10T02:40:38.825222"
          },
          "id": {
            "title": "Id",
            "type": "string",
            "description": "The entry UUID.",
            "example": "0354fb10-9e18-4923-a213-6253800f8d01"
          },
          "contact": {
            "title": "Contact",
            "allOf": [
              {
                "$ref": "#/components/schemas/AutoDialerCampaignContact"
              }
            ],
            "description": "The associated contact for this campaign job."
          },
          "call": {
            "title": "Call",
            "allOf": [
              {
                "$ref": "#/components/schemas/Call"
              }
            ],
            "description": "The associated call for this campaign job."
          }
        },
        "description": "Auto dialer campaign job detail schema."
      },
      "AutoDialerCampaignLog": {
        "title": "AutoDialerCampaignLog",
        "required": [
          "attempt",
          "sequence",
          "status",
          "created_time",
          "updated_time",
          "id",
          "contact",
          "campaign"
        ],
        "type": "object",
        "properties": {
          "attempt": {
            "title": "Attempt",
            "exclusiveMinimum": 0.0,
            "type": "integer",
            "description": "Number of attempt dial to the specific contact."
          },
          "sequence": {
            "title": "Sequence",
            "exclusiveMinimum": 0.0,
            "type": "integer",
            "description": "Dial sequence."
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CampaignJobStatus"
              }
            ],
            "description": "Campaign job status.",
            "example": "PENDING"
          },
          "answered_by": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MachineDetectionMode"
              }
            ],
            "description": "The result of answering machine detection(AMD), which determine if a human, answering machine or fax machine has picked up.",
            "example": "human"
          },
          "start_time": {
            "title": "Start Time",
            "type": "string",
            "description": "The timestamp when this campaign job started.",
            "format": "date-time",
            "example": "2025-07-10T02:40:47.728090"
          },
          "end_time": {
            "title": "End Time",
            "type": "string",
            "description": "The timestamp when this campaign job ended.",
            "format": "date-time",
            "example": "2025-07-10T02:40:47.728107"
          },
          "user_account": {
            "title": "User Account",
            "type": "string",
            "description": "The user account who this auto dialer campaign job belongs to.",
            "example": "myaccount@seasalt.ai"
          },
          "created_time": {
            "title": "Created Time",
            "type": "string",
            "description": "The time of this item created.",
            "format": "date-time",
            "example": "2025-07-10T02:40:38.825204"
          },
          "updated_time": {
            "title": "Updated Time",
            "type": "string",
            "description": "The time of this item updated.",
            "format": "date-time",
            "example": "2025-07-10T02:40:38.825222"
          },
          "id": {
            "title": "Id",
            "type": "string",
            "description": "The entry UUID.",
            "example": "0354fb10-9e18-4923-a213-6253800f8d01"
          },
          "contact": {
            "title": "Contact",
            "allOf": [
              {
                "$ref": "#/components/schemas/AutoDialerCampaignContact"
              }
            ],
            "description": "The associated contact for this campaign job."
          },
          "call": {
            "title": "Call",
            "allOf": [
              {
                "$ref": "#/components/schemas/Call"
              }
            ],
            "description": "The associated call for this campaign job."
          },
          "campaign": {
            "title": "Campaign",
            "allOf": [
              {
                "$ref": "#/components/schemas/AutoDialerCampaign"
              }
            ],
            "description": "The auto dialer campaign which this job associated with."
          },
          "conversation": {
            "title": "Conversation",
            "allOf": [
              {
                "$ref": "#/components/schemas/CampaignLogConversation"
              }
            ],
            "description": "The associated conversation for this auto dialer campaign job."
          }
        },
        "description": "Auto dialer campaign log schema."
      },
      "AutoDialerCampaignStatistics": {
        "title": "AutoDialerCampaignStatistics",
        "type": "object",
        "properties": {
          "human": {
            "title": "Human",
            "minimum": 0.0,
            "type": "integer",
            "description": "The number of the calls were answered by human for this auto dialer campaign"
          },
          "machine": {
            "title": "Machine",
            "minimum": 0.0,
            "type": "integer",
            "description": "The number of the calls were answered by machine for this auto dialer campaign"
          },
          "unknown": {
            "title": "Unknown",
            "minimum": 0.0,
            "type": "integer",
            "description": "The number of the calls were answered by unknown for this auto dialer campaign"
          },
          "no_answer": {
            "title": "No Answer",
            "minimum": 0.0,
            "type": "integer",
            "description": "The number of the calls were not answered."
          },
          "total": {
            "title": "Total",
            "minimum": 0.0,
            "type": "integer",
            "description": "The number of the calls were answered for this auto dialer campaign"
          }
        },
        "description": "Statistic for the result of answering machine detection(AMD)."
      },
      "AutoDialerCampaignType": {
        "title": "AutoDialerCampaignType",
        "enum": [
          "VOICE_DROP",
          "PROGRESSIVE_DIALER",
          "AI_AGENT"
        ],
        "type": "string",
        "description": "Auto dialer campaign type."
      },
      "AutoDialerCampaignValidation": {
        "title": "AutoDialerCampaignValidation",
        "required": [
          "option",
          "start_time",
          "end_time"
        ],
        "type": "object",
        "properties": {
          "option": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ValidationOption"
              }
            ],
            "description": "Validation option for this auto dialer campaign."
          },
          "start_time": {
            "title": "Start Time",
            "type": "string",
            "description": "The started timestamp for validating.",
            "format": "date-time",
            "example": "2025-07-10T02:40:48.012144"
          },
          "end_time": {
            "title": "End Time",
            "type": "string",
            "description": "The ended timestamp for validating.",
            "format": "date-time",
            "example": "2025-07-10T03:40:48.012158"
          }
        },
        "description": "Auto dialer campaign validation schema."
      },
      "AvailableTwilioPhone": {
        "title": "AvailableTwilioPhone",
        "required": [
          "monthly_fee"
        ],
        "type": "object",
        "properties": {
          "friendly_name": {
            "title": "Friendly Name",
            "type": "string",
            "description": "A formatted version of the phone number.",
            "example": "My Toll-Free Number"
          },
          "phone_number": {
            "title": "Phone Number",
            "type": "string",
            "description": "The phone number in E.164 format.",
            "example": "+1234567890"
          },
          "lata": {
            "title": "Lata",
            "type": "string",
            "description": "The LATA of this phone number. Available for only phone numbers from the US and Canada.",
            "example": "123"
          },
          "locality": {
            "title": "Locality",
            "type": "string",
            "description": "The locality or city of this phone number's location.",
            "example": "New York"
          },
          "rate_center": {
            "title": "Rate Center",
            "type": "string",
            "description": "The rate center of this phone number. Available for only phone numbers from the US and Canada.",
            "example": "NYC"
          },
          "latitude": {
            "title": "Latitude",
            "type": "number",
            "description": "The latitude of this phone number's location. Available for only phone numbers from the US and Canada.",
            "example": 40.7128
          },
          "longitude": {
            "title": "Longitude",
            "type": "number",
            "description": "The longitude of this phone number's location. Available for only phone numbers from the US and Canada.",
            "example": -74.006
          },
          "region": {
            "title": "Region",
            "type": "string",
            "description": "The two-letter state or province abbreviation of this phone number's location. Available for only phone numbers from the US and Canada.",
            "example": "NY"
          },
          "postal_code": {
            "title": "Postal Code",
            "type": "string",
            "description": "The postal or ZIP code of this phone number's location. Available for only phone numbers from the US and Canada.",
            "example": "10001"
          },
          "iso_country": {
            "title": "Iso Country",
            "type": "string",
            "description": "The ISO country code of this phone number.",
            "example": "US"
          },
          "address_requirements": {
            "title": "Address Requirements",
            "type": "string",
            "description": "The type of Address resource the phone number requires. Can be: `none`, `any`, `local`, or `foreign`.",
            "example": "local"
          },
          "beta": {
            "title": "Beta",
            "type": "boolean",
            "description": "Whether the phone number is new to the Twilio platform. Can be: `true` or `false`.",
            "example": false
          },
          "capabilities": {
            "title": "Capabilities",
            "allOf": [
              {
                "$ref": "#/components/schemas/PhoneCapability"
              }
            ],
            "description": "Capabilities of the phone number."
          },
          "monthly_fee": {
            "title": "Monthly Fee",
            "type": "string",
            "description": "The monthly fee of the phone number.",
            "example": "3.00"
          }
        },
        "description": "AvailableTwilioPhone schema."
      },
      "AvailableTwilioPhoneCountry": {
        "title": "AvailableTwilioPhoneCountry",
        "enum": [
          "US",
          "CA"
        ],
        "type": "string",
        "description": "AvailableTwilioPhoneCountry."
      },
      "AvailableTwilioPhoneType": {
        "title": "AvailableTwilioPhoneType",
        "enum": [
          "LOCAL",
          "TOLL_FREE"
        ],
        "type": "string",
        "description": "AvailableTwilioPhoneType."
      },
      "AwsS3KeyPrefix": {
        "title": "AwsS3KeyPrefix",
        "enum": [
          "media",
          "workspaces/logos",
          "contacts",
          "campaign_attach_file"
        ],
        "type": "string",
        "description": "AwsS3KeyPrefix"
      },
      "BYOCTrunk": {
        "title": "BYOCTrunk",
        "required": [
          "created_time",
          "updated_time",
          "id",
          "sip_domain",
          "acl_ip_addresses"
        ],
        "type": "object",
        "properties": {
          "created_time": {
            "title": "Created Time",
            "type": "string",
            "description": "The time of this item created.",
            "format": "date-time",
            "example": "2025-07-10T02:40:38.825204"
          },
          "updated_time": {
            "title": "Updated Time",
            "type": "string",
            "description": "The time of this item updated.",
            "format": "date-time",
            "example": "2025-07-10T02:40:38.825222"
          },
          "id": {
            "title": "Id",
            "type": "string",
            "description": "The entry UUID.",
            "example": "0354fb10-9e18-4923-a213-6253800f8d01"
          },
          "sip_domain": {
            "title": "Sip Domain",
            "type": "string",
            "description": "SIP Domain of this BYOC trunks configuration."
          },
          "acl_ip_addresses": {
            "title": "Acl Ip Addresses",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ACLIPAddress"
            },
            "description": "ACL IP addresses."
          },
          "sip_auth_username": {
            "title": "Sip Auth Username",
            "type": "string",
            "description": "Authentication username is applied to make SIP call."
          },
          "sip_auth_password": {
            "title": "Sip Auth Password",
            "type": "string",
            "description": "Authentication password is applied to make SIP call."
          }
        },
        "description": "BYOCTrunk schema."
      },
      "BaseACLIPAddress": {
        "title": "BaseACLIPAddress",
        "required": [
          "ip_address"
        ],
        "type": "object",
        "properties": {
          "ip_address": {
            "title": "ip_address",
            "type": "string",
            "description": "IP address for IP ACL will be used to authenticate the INVITE for inbound SIP calls."
          },
          "port": {
            "title": "port",
            "type": "integer",
            "description": "Port for IP ACL will be used to authenticate the INVITE for inbound SIP calls."
          }
        },
        "description": "BaseACLIPAddress schema."
      },
      "BaseListResponse_User_": {
        "title": "BaseListResponse[User]",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "title": "data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            },
            "description": "The entry list."
          }
        },
        "description": "BaseListResponse schema"
      },
      "Body_callback_auto_dialer_campaign_gather_api_v1_workspace__workspace_id__auto_dialer_campaigns__auto_dialer_campaign_id__gather_callback_post": {
        "title": "Body_callback_auto_dialer_campaign_gather_api_v1_workspace__workspace_id__auto_dialer_campaigns__auto_dialer_campaign_id__gather_callback_post",
        "type": "object",
        "properties": {
          "AccountSid": {
            "title": "Accountsid",
            "type": "string"
          },
          "AnsweredBy": {
            "title": "Answeredby",
            "type": "string"
          },
          "ApiVersion": {
            "title": "Apiversion",
            "type": "string"
          },
          "CallSid": {
            "title": "Callsid",
            "type": "string"
          },
          "CallStatus": {
            "$ref": "#/components/schemas/CallStatus"
          },
          "Called": {
            "title": "Called",
            "type": "string"
          },
          "CalledCity": {
            "title": "Calledcity",
            "type": "string"
          },
          "CalledCountry": {
            "title": "Calledcountry",
            "type": "string"
          },
          "CalledState": {
            "title": "Calledstate",
            "type": "string"
          },
          "CalledZip": {
            "title": "Calledzip",
            "type": "string"
          },
          "Caller": {
            "title": "Caller",
            "type": "string"
          },
          "CallerCity": {
            "title": "Callercity",
            "type": "string"
          },
          "CallerCountry": {
            "title": "Callercountry",
            "type": "string"
          },
          "CallerState": {
            "title": "Callerstate",
            "type": "string"
          },
          "CallerZip": {
            "title": "Callerzip",
            "type": "string"
          },
          "Confidence": {
            "title": "Confidence",
            "type": "string"
          },
          "Direction": {
            "title": "Direction",
            "type": "string"
          },
          "From": {
            "title": "From",
            "type": "string"
          },
          "FromCity": {
            "title": "Fromcity",
            "type": "string"
          },
          "FromCountry": {
            "title": "Fromcountry",
            "type": "string"
          },
          "FromState": {
            "title": "Fromstate",
            "type": "string"
          },
          "FromZip": {
            "title": "Fromzip",
            "type": "string"
          },
          "Language": {
            "title": "Language",
            "type": "string"
          },
          "MachineDetectionDuration": {
            "title": "Machinedetectionduration",
            "type": "string"
          },
          "SpeechResult": {
            "title": "Speechresult",
            "type": "string"
          },
          "Digits": {
            "title": "Digits",
            "type": "string"
          },
          "To": {
            "title": "To",
            "type": "string"
          },
          "ToCity": {
            "title": "Tocity",
            "type": "string"
          },
          "ToCountry": {
            "title": "Tocountry",
            "type": "string"
          },
          "ToState": {
            "title": "Tostate",
            "type": "string"
          },
          "ToZip": {
            "title": "Tozip",
            "type": "string"
          },
          "is_ai_agent_call": {
            "title": "Is Ai Agent Call",
            "type": "boolean",
            "default": false
          }
        }
      },
      "Body_create_mega_send_campaign_api_v1_workspace__workspace_id__mega_send_campaigns_post": {
        "title": "Body_create_mega_send_campaign_api_v1_workspace__workspace_id__mega_send_campaigns_post",
        "required": [
          "contact_file",
          "name",
          "message",
          "sender_id"
        ],
        "type": "object",
        "properties": {
          "contact_file": {
            "title": "Contact File",
            "type": "string",
            "format": "binary"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "message": {
            "title": "Message",
            "type": "string"
          },
          "is_schedule": {
            "title": "Is Schedule",
            "type": "boolean"
          },
          "sender_id": {
            "title": "Sender Id",
            "type": "string"
          },
          "scheduled_start_time": {
            "title": "Scheduled Start Time",
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Body_delivery_status_api_v1_twilio_webhook_delivery_status_post": {
        "title": "Body_delivery_status_api_v1_twilio_webhook_delivery_status_post",
        "required": [
          "SmsSid",
          "SmsStatus",
          "MessageStatus",
          "To",
          "MessageSid",
          "AccountSid",
          "From"
        ],
        "type": "object",
        "properties": {
          "SmsSid": {
            "title": "Smssid",
            "type": "string"
          },
          "SmsStatus": {
            "$ref": "#/components/schemas/MessageStatus"
          },
          "MessageStatus": {
            "$ref": "#/components/schemas/MessageStatus"
          },
          "To": {
            "title": "To",
            "type": "string"
          },
          "MessageSid": {
            "title": "Messagesid",
            "type": "string"
          },
          "AccountSid": {
            "title": "Accountsid",
            "type": "string"
          },
          "From": {
            "title": "From",
            "type": "string"
          },
          "ApiVersion": {
            "title": "Apiversion",
            "type": "string"
          },
          "ErrorCode": {
            "title": "Errorcode",
            "type": "integer"
          },
          "RawDlrDoneDate": {
            "title": "Rawdlrdonedate",
            "type": "string"
          },
          "accepted_time": {
            "title": "Accepted Time",
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Body_generate_message_previews_api_v1_workspace__workspace_id__mega_send_generate_message_previews_post": {
        "title": "Body_generate_message_previews_api_v1_workspace__workspace_id__mega_send_generate_message_previews_post",
        "required": [
          "contact_file",
          "message_template"
        ],
        "type": "object",
        "properties": {
          "contact_file": {
            "title": "Contact File",
            "type": "string",
            "format": "binary"
          },
          "max_len": {
            "title": "Max Len",
            "type": "integer",
            "default": 1
          },
          "message_template": {
            "title": "Message Template",
            "type": "string"
          }
        }
      },
      "Body_handle_caller_verification_event_api_v1_twilio_webhook_caller_verification_post": {
        "title": "Body_handle_caller_verification_event_api_v1_twilio_webhook_caller_verification_post",
        "type": "object",
        "properties": {
          "VerificationStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CallerVerificationStatus"
              }
            ],
            "default": ""
          },
          "Called": {
            "title": "Called",
            "type": "string",
            "default": ""
          },
          "ToState": {
            "title": "Tostate",
            "type": "string",
            "default": ""
          },
          "CallerCountry": {
            "title": "Callercountry",
            "type": "string",
            "default": ""
          },
          "Direction": {
            "title": "Direction",
            "type": "string",
            "default": ""
          },
          "Timestamp": {
            "title": "Timestamp",
            "type": "string",
            "default": ""
          },
          "CallbackSource": {
            "title": "Callbacksource",
            "type": "string",
            "default": ""
          },
          "SipResponseCode": {
            "title": "Sipresponsecode",
            "type": "string",
            "default": ""
          },
          "CallerState": {
            "title": "Callerstate",
            "type": "string",
            "default": ""
          },
          "SequenceNumber": {
            "title": "Sequencenumber",
            "type": "string",
            "default": ""
          },
          "CallSid": {
            "title": "Callsid",
            "type": "string",
            "default": ""
          },
          "To": {
            "title": "To",
            "type": "string",
            "default": ""
          },
          "CallerZip": {
            "title": "Callerzip",
            "type": "string",
            "default": ""
          },
          "ToCountry": {
            "title": "Tocountry",
            "type": "string",
            "default": ""
          },
          "ApiVersion": {
            "title": "Apiversion",
            "type": "string",
            "default": ""
          },
          "CallStatus": {
            "title": "Callstatus",
            "type": "string",
            "default": ""
          },
          "Duration": {
            "title": "Duration",
            "type": "string",
            "default": ""
          },
          "From": {
            "title": "From",
            "type": "string",
            "default": ""
          },
          "CallDuration": {
            "title": "Callduration",
            "type": "string",
            "default": ""
          },
          "AccountSid": {
            "title": "Accountsid",
            "type": "string",
            "default": ""
          },
          "CalledCountry": {
            "title": "Calledcountry",
            "type": "string",
            "default": ""
          },
          "CallerCity": {
            "title": "Callercity",
            "type": "string",
            "default": ""
          },
          "FromCountry": {
            "title": "Fromcountry",
            "type": "string",
            "default": ""
          },
          "Caller": {
            "title": "Caller",
            "type": "string",
            "default": ""
          },
          "FromCity": {
            "title": "Fromcity",
            "type": "string",
            "default": ""
          },
          "CalledState": {
            "title": "Calledstate",
            "type": "string",
            "default": ""
          },
          "FromZip": {
            "title": "Fromzip",
            "type": "string",
            "default": ""
          },
          "FromState": {
            "title": "Fromstate",
            "type": "string",
            "default": ""
          }
        }
      },
      "Body_import_contacts_api_v1_workspace__workspace_id__import_contacts_post": {
        "title": "Body_import_contacts_api_v1_workspace__workspace_id__import_contacts_post",
        "required": [
          "file"
        ],
        "type": "object",
        "properties": {
          "file": {
            "title": "File",
            "type": "string",
            "format": "binary"
          }
        }
      },
      "Body_receive_message_api_v1_twilio_webhook_receive_message_post": {
        "title": "Body_receive_message_api_v1_twilio_webhook_receive_message_post",
        "type": "object",
        "properties": {
          "ToCountry": {
            "title": "Tocountry",
            "type": "string",
            "default": ""
          },
          "ToState": {
            "title": "Tostate",
            "type": "string",
            "default": ""
          },
          "SmsMessageSid": {
            "title": "Smsmessagesid",
            "type": "string",
            "default": ""
          },
          "NumMedia": {
            "title": "Nummedia",
            "type": "string",
            "default": ""
          },
          "ToCity": {
            "title": "Tocity",
            "type": "string",
            "default": ""
          },
          "FromZip": {
            "title": "Fromzip",
            "type": "string",
            "default": ""
          },
          "SmsSid": {
            "title": "Smssid",
            "type": "string",
            "default": ""
          },
          "FromState": {
            "title": "Fromstate",
            "type": "string",
            "default": ""
          },
          "SmsStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MessageStatus"
              }
            ],
            "default": "received"
          },
          "FromCity": {
            "title": "Fromcity",
            "type": "string",
            "default": ""
          },
          "Body": {
            "title": "Body",
            "type": "string",
            "default": ""
          },
          "FromCountry": {
            "title": "Fromcountry",
            "type": "string",
            "default": ""
          },
          "To": {
            "title": "To",
            "type": "string",
            "default": ""
          },
          "MessagingServiceSid": {
            "title": "Messagingservicesid",
            "type": "string",
            "default": ""
          },
          "ToZip": {
            "title": "Tozip",
            "type": "string",
            "default": ""
          },
          "AddOns": {
            "title": "Addons",
            "type": "string",
            "default": ""
          },
          "NumSegments": {
            "title": "Numsegments",
            "type": "string",
            "default": ""
          },
          "ReferralNumMedia": {
            "title": "Referralnummedia",
            "type": "string",
            "default": ""
          },
          "MessageSid": {
            "title": "Messagesid",
            "type": "string",
            "default": ""
          },
          "AccountSid": {
            "title": "Accountsid",
            "type": "string",
            "default": ""
          },
          "From": {
            "title": "From",
            "type": "string",
            "default": ""
          },
          "ApiVersion": {
            "title": "Apiversion",
            "type": "string",
            "default": ""
          },
          "MediaUrl0": {
            "title": "Mediaurl0",
            "type": "string",
            "default": ""
          },
          "MediaUrl1": {
            "title": "Mediaurl1",
            "type": "string",
            "default": ""
          },
          "MediaUrl2": {
            "title": "Mediaurl2",
            "type": "string",
            "default": ""
          },
          "MediaUrl3": {
            "title": "Mediaurl3",
            "type": "string",
            "default": ""
          },
          "MediaUrl4": {
            "title": "Mediaurl4",
            "type": "string",
            "default": ""
          },
          "MediaUrl5": {
            "title": "Mediaurl5",
            "type": "string",
            "default": ""
          },
          "MediaUrl6": {
            "title": "Mediaurl6",
            "type": "string",
            "default": ""
          },
          "MediaUrl7": {
            "title": "Mediaurl7",
            "type": "string",
            "default": ""
          },
          "MediaUrl8": {
            "title": "Mediaurl8",
            "type": "string",
            "default": ""
          },
          "MediaUrl9": {
            "title": "Mediaurl9",
            "type": "string",
            "default": ""
          }
        }
      },
      "Body_user_login_api_v1_users_login_post": {
        "title": "Body_user_login_api_v1_users_login_post",
        "required": [
          "username",
          "password"
        ],
        "type": "object",
        "properties": {
          "grant_type": {
            "title": "Grant Type",
            "pattern": "password",
            "type": "string"
          },
          "username": {
            "title": "Username",
            "type": "string"
          },
          "password": {
            "title": "Password",
            "type": "string"
          },
          "scope": {
            "title": "Scope",
            "type": "string",
            "default": ""
          },
          "client_id": {
            "title": "Client Id",
            "type": "string"
          },
          "client_secret": {
            "title": "Client Secret",
            "type": "string"
          }
        }
      },
      "BulkDeleteAgentSkills": {
        "title": "BulkDeleteAgentSkills",
        "required": [
          "agent_skill_ids"
        ],
        "type": "object",
        "properties": {
          "agent_skill_ids": {
            "title": "agent_skill_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of agent skill ids.",
            "example": [
              "uuid-v4-xxx",
              "uuid-v4-ooo"
            ]
          }
        },
        "description": "BulkDeleteAgentSkills schema"
      },
      "Call": {
        "title": "Call",
        "required": [
          "external_id",
          "created_time",
          "direction",
          "type",
          "status",
          "duration",
          "from_number",
          "to_number",
          "id",
          "start_time"
        ],
        "type": "object",
        "properties": {
          "external_id": {
            "title": "External Id",
            "type": "string",
            "description": "External ID of this object.",
            "example": "CAxxx"
          },
          "created_time": {
            "title": "Created Time",
            "type": "string",
            "description": "External timestamp when this object was created.",
            "format": "date-time",
            "example": "2025-07-10T02:40:46.730143"
          },
          "updated_time": {
            "title": "Updated Time",
            "type": "string",
            "description": "External timestamp when this object was updated.",
            "format": "date-time",
            "example": "2025-07-10T02:40:46.730159"
          },
          "direction": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CallDirection"
              }
            ],
            "description": "Call direction.",
            "example": "inbound"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CallType"
              }
            ],
            "description": "Call type.",
            "example": "VOICE"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CallStatus"
              }
            ],
            "description": "Call status.",
            "example": "completed"
          },
          "duration": {
            "title": "Duration",
            "minimum": 0.0,
            "type": "number",
            "description": "Call duration in seconds."
          },
          "from_number": {
            "title": "From Number",
            "type": "string",
            "description": "The phone number that made this call."
          },
          "to_number": {
            "title": "To Number",
            "type": "string",
            "description": "The phone number that received this call."
          },
          "id": {
            "title": "Id",
            "type": "string",
            "description": "The entry UUID.",
            "example": "0354fb10-9e18-4923-a213-6253800f8d01"
          },
          "recordings": {
            "title": "Recordings",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CallRecording"
            },
            "description": "The recordings of this call sid"
          },
          "ivr_captures": {
            "title": "Ivr Captures",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CallIVRCapture"
            },
            "description": "The IVR captures of this call sid"
          },
          "start_time": {
            "title": "Start Time",
            "type": "string",
            "description": "The timestamp when this call started.",
            "format": "date-time",
            "example": "2025-07-10T02:40:46.813339"
          },
          "end_time": {
            "title": "End Time",
            "type": "string",
            "description": "The timestamp when this call ended.",
            "format": "date-time",
            "example": "2025-07-10T02:40:46.813357"
          }
        },
        "description": "Call schema."
      },
      "CallDirection": {
        "title": "CallDirection",
        "enum": [
          "inbound",
          "outbound-api",
          "outbound-dial",
          "trunking-terminating",
          "trunking-originating"
        ],
        "type": "string",
        "description": "Call direction.\n\nReference: https://www.twilio.com/docs/voice/api/call-resource"
      },
      "CallIVRCapture": {
        "title": "CallIVRCapture",
        "required": [
          "created_time",
          "updated_time",
          "id"
        ],
        "type": "object",
        "properties": {
          "created_time": {
            "title": "Created Time",
            "type": "string",
            "description": "The time of this item created.",
            "format": "date-time",
            "example": "2025-07-10T02:40:38.825204"
          },
          "updated_time": {
            "title": "Updated Time",
            "type": "string",
            "description": "The time of this item updated.",
            "format": "date-time",
            "example": "2025-07-10T02:40:38.825222"
          },
          "id": {
            "title": "Id",
            "type": "string",
            "description": "The entry UUID.",
            "example": "0354fb10-9e18-4923-a213-6253800f8d01"
          },
          "keypress": {
            "title": "Keypress",
            "type": "string",
            "description": "The captured keypress.",
            "example": "9"
          },
          "stt": {
            "title": "Stt",
            "type": "string",
            "description": "The captured speech-to-text of voice response.",
            "example": "I need refund"
          }
        },
        "description": "CallIVRCapture schema."
      },
      "CallRecording": {
        "title": "CallRecording",
        "required": [
          "external_id",
          "created_time",
          "id",
          "name",
          "url"
        ],
        "type": "object",
        "properties": {
          "external_id": {
            "title": "External Id",
            "type": "string",
            "description": "External ID of this object.",
            "example": "CAxxx"
          },
          "created_time": {
            "title": "Created Time",
            "type": "string",
            "description": "External timestamp when this object was created.",
            "format": "date-time",
            "example": "2025-07-10T02:40:46.730143"
          },
          "updated_time": {
            "title": "Updated Time",
            "type": "string",
            "description": "External timestamp when this object was updated.",
            "format": "date-time",
            "example": "2025-07-10T02:40:46.730159"
          },
          "id": {
            "title": "Id",
            "type": "string",
            "description": "The entry UUID.",
            "example": "0354fb10-9e18-4923-a213-6253800f8d01"
          },
          "name": {
            "title": "Name",
            "type": "string",
            "description": "Call recording name.",
            "example": "2022-06-24T00:00:00.wav"
          },
          "url": {
            "title": "Url",
            "type": "string",
            "description": "Call recording URL.",
            "example": "https://api.twilio.com/2010-04-01/Accounts/ACaxxx/Recordings/RExxx.wav"
          }
        },
        "description": "CallRecording schema."
      },
      "CallStatus": {
        "title": "CallStatus",
        "enum": [
          "queued",
          "initiated",
          "ringing",
          "in-progress",
          "canceled",
          "completed",
          "failed",
          "busy",
          "no-answer"
        ],
        "type": "string",
        "description": "Call status.\n\nReference: Twilio Call Status Values: https://www.twilio.com/docs/voice/api/call-resource#call-status-values"
      },
      "CallToPhone": {
        "title": "CallToPhone",
        "required": [
          "to_number"
        ],
        "type": "object",
        "properties": {
          "to_number": {
            "title": "to_number",
            "type": "string",
            "description": "The phone number that received this call",
            "example": "+1234567890"
          }
        },
        "description": "Call schema"
      },
      "CallType": {
        "title": "CallType",
        "enum": [
          "VOICE",
          "SMS"
        ],
        "type": "string",
        "description": "Call type."
      },
      "CallerVerificationStatus": {
        "title": "CallerVerificationStatus",
        "enum": [
          "success",
          "failed",
          "start"
        ],
        "type": "string",
        "description": "CallerVerificationStatus."
      },
      "Campaign": {
        "title": "Campaign",
        "required": [
          "name",
          "message",
          "type",
          "is_timezone_aware",
          "is_schedule",
          "created_time",
          "updated_time",
          "id",
          "mode",
          "stage"
        ],
        "type": "object",
        "properties": {
          "media_urls": {
            "title": "media_urls",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The media urls of campaign, if it is not a mms campaign, the media urls is empty list."
          },
          "start_time": {
            "title": "Start Time",
            "type": "string",
            "description": "The timestamp when this campaign started.",
            "format": "date-time",
            "example": "2025-07-10T02:40:47.415375"
          },
          "end_time": {
            "title": "End Time",
            "type": "string",
            "description": "The timestamp when this campaign ended.",
            "format": "date-time",
            "example": "2025-07-10T02:40:47.415396"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CampaignJobStatus"
              }
            ],
            "description": "Campaign status.",
            "example": "PENDING"
          },
          "name": {
            "title": "name",
            "type": "string",
            "description": "The name of this campaign.",
            "example": "festival campaign"
          },
          "draft_name": {
            "title": "draft_name",
            "type": "string",
            "description": "The draft name of this campaign.",
            "example": "festival campaign draft"
          },
          "header_message": {
            "title": "header_message",
            "type": "string",
            "description": "The header_message of this campaign.",
            "example": "Hi, {name}, xxx..."
          },
          "message": {
            "title": "message",
            "type": "string",
            "description": "The message of this campaign.",
            "example": "Hi, {name}, xxx..."
          },
          "ai_agent_conversation_config_id": {
            "title": "Ai Agent Conversation Config Id",
            "type": "string",
            "description": "AI agent associated conversation config ID.",
            "example": "0354fb10-9e18-4923-a213-6253800f8d01"
          },
          "type": {
            "title": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/CampaignType"
              }
            ],
            "description": "The type of this campaign.",
            "example": "SMS"
          },
          "is_timezone_aware": {
            "title": "is_timezone_aware",
            "type": "boolean",
            "description": "Has true if this campaign is timezone aware."
          },
          "is_schedule": {
            "title": "Is Schedule",
            "type": "boolean",
            "description": "Has true if this campaign is schedule."
          },
          "contact_file_url": {
            "title": "contact_file_url",
            "maxLength": 2083,
            "minLength": 1,
            "type": "string",
            "description": "The URL of the contact file contains contacts for this campaign.",
            "format": "uri"
          },
          "timezone": {
            "title": "timezone",
            "type": "string",
            "description": "The timezone of this campaign.",
            "example": "UTC"
          },
          "attach_files": {
            "title": "attach_files",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CampaignAttachFile"
            },
            "description": "The attach files."
          },
          "campaign_metadata": {
            "title": "campaign_metadata",
            "allOf": [
              {
                "$ref": "#/components/schemas/CampaignMetadata"
              }
            ],
            "description": "The metadata of this campaign."
          },
          "created_time": {
            "title": "Created Time",
            "type": "string",
            "description": "The time of this item created.",
            "format": "date-time",
            "example": "2025-07-10T02:40:38.825204"
          },
          "updated_time": {
            "title": "Updated Time",
            "type": "string",
            "description": "The time of this item updated.",
            "format": "date-time",
            "example": "2025-07-10T02:40:38.825222"
          },
          "id": {
            "title": "Id",
            "type": "string",
            "description": "The entry UUID.",
            "example": "0354fb10-9e18-4923-a213-6253800f8d01"
          },
          "messaging_service_id": {
            "title": "The messaging_service_id of this campaign",
            "type": "string",
            "description": "The messaging_service_id of this campaign"
          },
          "enable_link_shortening": {
            "title": "enable_link_shortening",
            "type": "boolean",
            "description": "Whether the scheduled campaign enable link shortening.",
            "default": false,
            "example": true
          },
          "phones": {
            "title": "phones",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/app__api__v1__schema__phone__Phone"
            },
            "description": "The associated phones for this campaign."
          },
          "contact_fields": {
            "title": "contact_fields",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactFieldsResponse"
            },
            "description": "Contact fields associated with this campaign"
          },
          "mode": {
            "title": "mode",
            "allOf": [
              {
                "$ref": "#/components/schemas/CampaignMode"
              }
            ],
            "description": "The mode of this campaign.",
            "example": "WEB"
          },
          "stage": {
            "title": "stage",
            "allOf": [
              {
                "$ref": "#/components/schemas/CampaignStage"
              }
            ],
            "description": "The stage of this campaign.",
            "example": "INSTANCE"
          },
          "statistics": {
            "title": "Statistics",
            "allOf": [
              {
                "$ref": "#/components/schemas/CampaignMessageStatusStatistics"
              }
            ],
            "description": "Statistics for the statuses of campaign messages."
          },
          "relative_time_config": {
            "title": "relative_time_config",
            "allOf": [
              {
                "$ref": "#/components/schemas/RelativeTimeConfig"
              }
            ],
            "description": "The relative time config of this campaign."
          }
        },
        "description": "Campaign schema with fields that need to return to client."
      },
      "CampaignAttachFile": {
        "title": "CampaignAttachFile",
        "required": [
          "url",
          "mime_type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "id",
            "type": "string",
            "description": "The id of this file.",
            "example": "uuid-v4-xxx"
          },
          "url": {
            "title": "url",
            "type": "string",
            "description": "The URL of this file.",
            "example": "https://seax-bulksms.s3.amazonaws.com/media/myimage.jpg"
          },
          "mime_type": {
            "title": "mime_type",
            "type": "string",
            "description": "The MIME type of this file.",
            "example": "image/jpeg"
          },
          "original_name": {
            "title": "original_name",
            "type": "string",
            "description": "The original name of this file.",
            "example": "image.jpg"
          }
        },
        "description": "CampaignAttachFile."
      },
      "CampaignHSMType": {
        "title": "CampaignHSMType",
        "enum": [
          "whatsapp"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "CampaignHSMWhatsAppDestinationInterface": {
        "title": "CampaignHSMWhatsAppDestinationInterface",
        "required": [
          "destination"
        ],
        "type": "object",
        "properties": {
          "destination": {
            "title": "destination",
            "type": "string",
            "description": "The destination."
          },
          "parameters": {
            "title": "parameters",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The customer dynamic parameters that overrides the static parameters if specified."
          },
          "buttons_parameters": {
            "title": "buttons_parameters",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The customer dynamic buttons_parameters that overrides the static buttons_parameters if specified."
          },
          "header_parameters": {
            "title": "header_parameters",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The customer dynamic header_parameters that overrides the static header_parameters if specified."
          }
        }
      },
      "CampaignHSMWhatsAppInterface": {
        "title": "CampaignHSMWhatsAppInterface",
        "required": [
          "template"
        ],
        "type": "object",
        "properties": {
          "template": {
            "title": "template",
            "type": "string",
            "description": "The WhatsApp Business Platform template name."
          },
          "language_code": {
            "title": "language_code",
            "allOf": [
              {
                "$ref": "#/components/schemas/WhatsAppBusinessPlatformTemplateLanguage"
              }
            ],
            "description": "The language code.",
            "default": "en"
          },
          "destinations": {
            "title": "destinations",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CampaignHSMWhatsAppDestinationInterface"
            },
            "description": "The destinations."
          },
          "parameters": {
            "title": "parameters",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The static parameters apply to all recipients."
          },
          "buttons_parameters": {
            "title": "buttons_parameters",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The static buttons_parameters apply to all recipients."
          },
          "header_parameters": {
            "title": "header_parameters",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The static header_parameters apply to all recipients."
          }
        }
      },
      "CampaignHSMWhatsAppResponse": {
        "title": "CampaignHSMWhatsAppResponse",
        "required": [
          "id",
          "name",
          "type",
          "created_time"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "campaign_id",
            "type": "string",
            "description": "The campaign id."
          },
          "name": {
            "title": "campaign_name",
            "type": "string",
            "description": "The campaign name."
          },
          "type": {
            "title": "campaign_type",
            "allOf": [
              {
                "$ref": "#/components/schemas/CampaignType"
              }
            ],
            "description": "The campaign type."
          },
          "created_time": {
            "title": "Created Time",
            "type": "string",
            "description": "The time of this item created.",
            "format": "date-time",
            "example": "2025-07-10T02:40:54.732785"
          }
        }
      },
      "CampaignJobStatus": {
        "title": "CampaignJobStatus",
        "enum": [
          "PENDING",
          "STARTED",
          "PAUSED",
          "FINISHED",
          "FAILED",
          "PROCESSING",
          "TERMINATED",
          "CANCELED"
        ],
        "type": "string",
        "description": "Campaign job status."
      },
      "CampaignLogConversation": {
        "title": "CampaignLogConversation",
        "required": [
          "id",
          "workspace_id",
          "contact_id",
          "is_unread"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "description": "The entry UUID.",
            "example": "0354fb10-9e18-4923-a213-6253800f8d01"
          },
          "workspace_id": {
            "title": "workspace_id",
            "type": "string",
            "description": "The associated workspace id for this conversation.",
            "example": "11111111-2222-4444-3333-555555555555"
          },
          "contact_id": {
            "title": "contact_id",
            "type": "string",
            "description": "The associated contact id for this conversation.",
            "example": "11111111-2222-4444-3333-555555555555"
          },
          "phone_id": {
            "title": "phone_id",
            "type": "string",
            "description": "The associated phone id for this conversation.",
            "example": "11111111-2222-4444-3333-555555555555"
          },
          "is_unread": {
            "title": "is_unread",
            "type": "boolean",
            "description": "Indicate whether this conversation has new messages."
          },
          "external_conversations": {
            "title": "external_conversation",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalConversation"
            },
            "description": "The associated external conversation for this campaign."
          }
        },
        "description": "CampaignLogConversation schema."
      },
      "CampaignLogMessage": {
        "title": "CampaignLogMessage",
        "required": [
          "id",
          "conversation_id",
          "is_inbound",
          "is_bot",
          "message",
          "message_time",
          "segments_number",
          "status",
          "created_time",
          "updated_time"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "id",
            "type": "string",
            "description": "The id of this message",
            "example": "11111111-2222-4444-3333-555555555555"
          },
          "conversation_id": {
            "title": "conversation_id",
            "type": "string",
            "description": "The associated conversation id for this message",
            "example": "11111111-2222-4444-3333-555555555555"
          },
          "campaign_id": {
            "title": "The id of this campaign usecase",
            "type": "string",
            "description": "The associated campaign id for this message",
            "example": "11111111-2222-4444-3333-555555555555"
          },
          "external_id": {
            "title": "external_id",
            "type": "string",
            "description": "The external id of this message",
            "example": "SM00000000000000000000000000000001"
          },
          "is_inbound": {
            "title": "is_inbound",
            "type": "boolean",
            "description": "The delivering direction of this message"
          },
          "is_bot": {
            "title": "is_bot",
            "type": "boolean",
            "description": "Has true if this message was sent from bot."
          },
          "message": {
            "title": "message",
            "type": "string",
            "description": "The message content",
            "example": "Hello"
          },
          "message_time": {
            "title": "message_time",
            "type": "string",
            "description": "The message time",
            "format": "date-time"
          },
          "segments_number": {
            "title": "segments_number",
            "type": "integer",
            "description": "Indicate how many segments the message was split into",
            "example": 1
          },
          "status": {
            "title": "status",
            "allOf": [
              {
                "$ref": "#/components/schemas/MessageStatus"
              }
            ],
            "description": "The delivering status of this message",
            "example": "queued"
          },
          "created_time": {
            "title": "created_time",
            "type": "string",
            "description": "The utc time of this item created.",
            "format": "date-time",
            "example": "2025-07-10T02:40:47.026565"
          },
          "updated_time": {
            "title": "created_time",
            "type": "string",
            "description": "The utc time of this item created.",
            "format": "date-time",
            "example": "2025-07-10T02:40:47.026581"
          },
          "sender": {
            "title": "sender",
            "allOf": [
              {
                "$ref": "#/components/schemas/User"
              }
            ],
            "description": "The sender of this message"
          },
          "whatsapp_message_status": {
            "title": "whatsapp_message_status",
            "allOf": [
              {
                "$ref": "#/components/schemas/WhatsAppMessageStatus"
              }
            ],
            "description": "The whatsapp message status"
          },
          "conversation": {
            "title": "conversation",
            "allOf": [
              {
                "$ref": "#/components/schemas/CampaignLogConversation"
              }
            ],
            "description": "The associated conversation for this campaign."
          },
          "event_error_code": {
            "title": "event_error_code",
            "type": "integer",
            "description": "The error code of the event.",
            "example": 500
          },
          "event_error_message": {
            "title": "event_error_message",
            "type": "string",
            "description": "The error message of the event.",
            "example": "error messages"
          }
        },
        "description": "CampaignLogMessage schema."
      },
      "CampaignLogResponse": {
        "title": "CampaignLogResponse",
        "required": [
          "campaign_logs",
          "campaign"
        ],
        "type": "object",
        "properties": {
          "campaign_logs": {
            "$ref": "#/components/schemas/ListResponse_CampaignLogRow_"
          },
          "campaign": {
            "title": "campaign",
            "allOf": [
              {
                "$ref": "#/components/schemas/Campaign"
              }
            ],
            "description": "The campaign"
          }
        },
        "description": "CampaignLogResponse schema."
      },
      "CampaignLogRow": {
        "title": "CampaignLogRow",
        "required": [
          "id",
          "sending_time",
          "from_number",
          "to_number",
          "message"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "description": "The entry UUID.",
            "example": "0354fb10-9e18-4923-a213-6253800f8d01"
          },
          "sending_time": {
            "title": "sending_time",
            "type": "string",
            "description": "The sending_time of message.",
            "format": "date-time"
          },
          "from_number": {
            "title": "from_number",
            "type": "string",
            "description": "Our phone number."
          },
          "to_number": {
            "title": "to_number",
            "type": "string",
            "description": "The phone number that our phone number sends to."
          },
          "message": {
            "title": "message",
            "allOf": [
              {
                "$ref": "#/components/schemas/CampaignLogMessage"
              }
            ],
            "description": "The message was sent by this campaign."
          }
        },
        "description": "CampaignLogRow schema."
      },
      "CampaignMessageStatusStatistics": {
        "title": "CampaignMessageStatusStatistics",
        "type": "object",
        "properties": {
          "accepted": {
            "title": "Accepted",
            "minimum": 0.0,
            "type": "integer",
            "description": "Message status is accepted.",
            "default": 0
          },
          "queued": {
            "title": "Queued",
            "minimum": 0.0,
            "type": "integer",
            "description": "Message status is queued.",
            "default": 0
          },
          "scheduled": {
            "title": "Scheduled",
            "minimum": 0.0,
            "type": "integer",
            "description": "Message status is scheduled.",
            "default": 0
          },
          "sending": {
            "title": "Sending",
            "minimum": 0.0,
            "type": "integer",
            "description": "Message status is sending.",
            "default": 0
          },
          "sent": {
            "title": "Sent",
            "minimum": 0.0,
            "type": "integer",
            "description": "Message status is sent.",
            "default": 0
          },
          "failed": {
            "title": "Failed",
            "minimum": 0.0,
            "type": "integer",
            "description": "Message status is failed.",
            "default": 0
          },
          "delivered": {
            "title": "Delivered",
            "minimum": 0.0,
            "type": "integer",
            "description": "Message status is delivered.",
            "default": 0
          },
          "undelivered": {
            "title": "Undelivered",
            "minimum": 0.0,
            "type": "integer",
            "description": "Message status is undelivered.",
            "default": 0
          },
          "receiving": {
            "title": "Receiving",
            "minimum": 0.0,
            "type": "integer",
            "description": "Message status is receiving.",
            "default": 0
          },
          "received": {
            "title": "Received",
            "minimum": 0.0,
            "type": "integer",
            "description": "Message status is received.",
            "default": 0
          },
          "canceled": {
            "title": "Canceled",
            "minimum": 0.0,
            "type": "integer",
            "description": "Message status is canceled.",
            "default": 0
          },
          "initialized": {
            "title": "Initialized",
            "minimum": 0.0,
            "type": "integer",
            "description": "Message status is initialized.",
            "default": 0
          },
          "total": {
            "title": "Total",
            "minimum": 0.0,
            "type": "integer",
            "description": "The total number of the messages for this campaign.",
            "default": 0
          },
          "total_clicks": {
            "title": "Total Clicks",
            "minimum": 0.0,
            "type": "integer",
            "description": "The total number of the clicked messages for this campaign.",
            "default": 0
          },
          "click_through_rate": {
            "title": "Click Through Rate",
            "minimum": 0.0,
            "type": "integer",
            "description": "The click-through rate(CTR) for this campaign.",
            "default": 0
          }
        },
        "description": "Statistics for the statuses of \u00e7ampaign messages."
      },
      "CampaignMetadata": {
        "title": "CampaignMetadata",
        "type": "object",
        "properties": {
          "all_contact_labels": {
            "title": "All Contact Labels",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CampaignMetadataContactLabel"
            },
            "description": "Include all contact labels."
          },
          "any_contact_labels": {
            "title": "Any Contact Labels",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CampaignMetadataContactLabel"
            },
            "description": "Include any contact labels."
          },
          "exclude_contacts": {
            "title": "Exclude Contacts",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CampaignMetadataContact"
            },
            "description": "Exclude contacts."
          },
          "addition_contacts": {
            "title": "Addition Contacts",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CampaignMetadataContact"
            },
            "description": "Include contacts."
          },
          "exclude_any_contact_labels": {
            "title": "Exclude Any Contact Labels",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CampaignMetadataContactLabel"
            },
            "description": "Exclude any contact labels."
          },
          "exclude_all_contact_labels": {
            "title": "Exclude All Contact Labels",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CampaignMetadataContactLabel"
            },
            "description": "Exclude all contact labels."
          },
          "whatsapp_phone_only": {
            "title": "Whatsapp Phone Only",
            "type": "boolean",
            "description": "Search only contacts have whatsapp number.",
            "default": false
          }
        },
        "description": "CampaignMetadata."
      },
      "CampaignMetadataContact": {
        "title": "CampaignMetadataContact",
        "required": [
          "id",
          "name",
          "phone"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "description": "The ID of this contact.",
            "example": "0354fb10-9e18-4923-a213-6253800f8d01"
          },
          "name": {
            "title": "Name",
            "type": "string",
            "description": "The name of contact.",
            "example": "Tom"
          },
          "phone": {
            "title": "Phone",
            "type": "string",
            "description": "The phone of contact.",
            "example": "+12345678900"
          }
        },
        "description": "CampaignMetadataContact."
      },
      "CampaignMetadataContactLabel": {
        "title": "CampaignMetadataContactLabel",
        "required": [
          "id",
          "name",
          "color"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "description": "The ID of this contact label.",
            "example": "0354fb10-9e18-4923-a213-6253800f8d01"
          },
          "name": {
            "title": "Name",
            "type": "string",
            "description": "The name of contact label.",
            "example": "test"
          },
          "color": {
            "title": "Color",
            "type": "string",
            "description": "The color of contact label.",
            "example": "#19b9c3"
          }
        },
        "description": "CampaignMetadataContactLabel."
      },
      "CampaignMode": {
        "title": "CampaignMode",
        "enum": [
          "WEB",
          "WEBHOOK",
          "EXCEL"
        ],
        "type": "string",
        "description": "Campaign mode."
      },
      "CampaignStage": {
        "title": "CampaignStage",
        "enum": [
          "DRAFT",
          "INSTANCE"
        ],
        "type": "string",
        "description": "Campaign stage."
      },
      "CampaignType": {
        "title": "CampaignType",
        "enum": [
          "SMS",
          "MMS",
          "AI_AGENT",
          "WHATSAPP_BUSINESS_PLATFORM_MESSAGE"
        ],
        "type": "string",
        "description": "Campaign type."
      },
      "CampaignUseCase": {
        "title": "CampaignUseCase",
        "required": [
          "id",
          "description",
          "us_a2p_usecase",
          "rate_limits",
          "mock",
          "campaign_status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "The id of this campaign usecase",
            "type": "string",
            "description": "The id of this campaign usecase",
            "example": "11111111-2222-4444-3333-555555555555"
          },
          "description": {
            "title": "description of campaign usecase",
            "type": "string",
            "description": "description of campaign usecase",
            "example": "Send marketing messages about sales to opted in customers."
          },
          "us_a2p_usecase": {
            "title": "A2P Campaign Use Case",
            "type": "string",
            "description": "A2P Campaign Use Case",
            "example": "MARKETING"
          },
          "rate_limits": {
            "title": "rate limits",
            "allOf": [
              {
                "$ref": "#/components/schemas/RateLimits"
              }
            ],
            "description": "rate limits normally contain tmobile and at&t."
          },
          "mock": {
            "title": "mock",
            "type": "boolean",
            "description": "Wether the campaign use case is a test object.",
            "example": true
          },
          "campaign_status": {
            "title": "campaign_status",
            "allOf": [
              {
                "$ref": "#/components/schemas/TCRCampaignStatus"
              }
            ],
            "description": "The campaign use case status",
            "example": "IN_PROGRESS"
          }
        },
        "description": "CampaignUseCase schema"
      },
      "ClickEvent": {
        "title": "ClickEvent",
        "required": [
          "event_type",
          "messaging_service_sid",
          "click_time",
          "sms_sid",
          "link",
          "account_sid",
          "from",
          "to",
          "user_agent"
        ],
        "type": "object",
        "properties": {
          "event_type": {
            "title": "event_type",
            "type": "string",
            "description": "event type",
            "example": "click"
          },
          "messaging_service_sid": {
            "title": "messaging_service_sid",
            "type": "string",
            "description": "messaging service sid",
            "example": "MGa0dd0e06d0af0d11dce10d3ae3e7dedf"
          },
          "click_time": {
            "title": "click_time",
            "type": "string",
            "description": "click time",
            "format": "date-time",
            "example": "2023-05-30T08:19:26.043Z"
          },
          "sms_sid": {
            "title": "sms_sid",
            "type": "string",
            "description": "sms sid",
            "example": "SM5ad229559de5a3d8c4351fde7f2101e5"
          },
          "link": {
            "title": "link",
            "type": "string",
            "description": "link",
            "example": "https://google.com"
          },
          "account_sid": {
            "title": "account_sid",
            "type": "string",
            "description": "account sid",
            "example": "AC149c3f66f1c2a483bdb4144a81438e3d"
          },
          "from": {
            "title": "from_",
            "type": "string",
            "description": "number of sender",
            "example": "+13867033591"
          },
          "to": {
            "title": "to_",
            "type": "string",
            "description": "number of contact",
            "example": "+12232177942"
          },
          "user_agent": {
            "title": "user_agent",
            "type": "string",
            "description": "user agent",
            "example": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36"
          }
        },
        "description": "Click event schema."
      },
      "ClickEventInfo": {
        "title": "ClickEventInfo",
        "required": [
          "newest_click_time",
          "oldest_click_time",
          "total_clicks",
          "original_link"
        ],
        "type": "object",
        "properties": {
          "newest_click_time": {
            "title": "newest_click_time",
            "type": "string",
            "description": "The newest click time of all clicks",
            "format": "date-time"
          },
          "oldest_click_time": {
            "title": "oldest_click_time",
            "type": "string",
            "description": "The oldest click time of all clicks",
            "format": "date-time"
          },
          "total_clicks": {
            "title": "total_clicks",
            "type": "integer",
            "description": "The total clicks"
          },
          "original_link": {
            "title": "original_link",
            "type": "string",
            "description": "The original link"
          }
        },
        "description": "ClickEventInfo."
      },
      "Contact": {
        "title": "Contact",
        "required": [
          "name",
          "phone",
          "contact_field_data",
          "id",
          "workspace_id",
          "created_time",
          "updated_time",
          "contact_labels"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "name",
            "type": "string",
            "description": "The name of this contact",
            "example": "TomHanks"
          },
          "phone": {
            "title": "phone",
            "type": "string",
            "description": "The phone of this contact",
            "example": "+12345678900"
          },
          "note": {
            "title": "note",
            "type": "string",
            "description": "The note of this contact",
            "default": "",
            "example": "New contact"
          },
          "whatsapp_phone": {
            "title": "whatsapp_phone",
            "type": "string",
            "description": "The whatsapp phone of this contact",
            "example": "+12345678900"
          },
          "contact_field_data": {
            "title": "contact_field_data",
            "type": "object",
            "description": "The contact field data",
            "example": {
              "field1": 1
            }
          },
          "id": {
            "title": "id",
            "type": "string",
            "description": "The id of this contact",
            "example": "11111111-2222-4444-3333-555555555555"
          },
          "workspace_id": {
            "title": "workspace_id",
            "type": "string",
            "description": "The associated workspace id for this contact",
            "example": "11111111-2222-4444-3333-555555555555"
          },
          "created_time": {
            "title": "created_time",
            "type": "string",
            "description": "The time of this item created.",
            "format": "date-time",
            "example": "2025-07-10T02:40:46.921160"
          },
          "updated_time": {
            "title": "updated_time",
            "type": "string",
            "description": "The time of this item updated.",
            "format": "date-time",
            "example": "2025-07-10T02:40:46.921173"
          },
          "contact_labels": {
            "title": "contact_labels",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactLabel"
            },
            "description": "The contact labels of this contact."
          }
        },
        "description": "Contact schema."
      },
      "ContactFieldType": {
        "title": "ContactFieldType",
        "enum": [
          "STRING",
          "DATE",
          "TIME",
          "DATETIME"
        ],
        "type": "string",
        "description": "ContactFieldType."
      },
      "ContactFields": {
        "title": "ContactFields",
        "required": [
          "name",
          "type",
          "id",
          "workspace_id",
          "created_time",
          "updated_time"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "name",
            "type": "string",
            "description": "The name of contact field",
            "example": "country"
          },
          "type": {
            "title": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/ContactFieldType"
              }
            ],
            "description": "The type of contact field",
            "example": "STRING"
          },
          "id": {
            "title": "id",
            "type": "string",
            "description": "The id of this contact",
            "example": "11111111-2222-4444-3333-555555555555"
          },
          "workspace_id": {
            "title": "workspace_id",
            "type": "string",
            "description": "The associated workspace id for this contact",
            "example": "11111111-2222-4444-3333-555555555555"
          },
          "created_time": {
            "title": "created_time",
            "type": "string",
            "description": "The time of this item created.",
            "format": "date-time",
            "example": "2025-07-10T02:40:47.326351"
          },
          "updated_time": {
            "title": "updated_time",
            "type": "string",
            "description": "The time of this item updated.",
            "format": "date-time",
            "example": "2025-07-10T02:40:47.326367"
          }
        },
        "description": "Contact Fields schema"
      },
      "ContactFieldsResponse": {
        "title": "ContactFieldsResponse",
        "required": [
          "name",
          "type",
          "id"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "name",
            "type": "string",
            "description": "The name of contact field",
            "example": "country"
          },
          "type": {
            "title": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/ContactFieldType"
              }
            ],
            "description": "The type of contact field",
            "example": "STRING"
          },
          "id": {
            "title": "id",
            "type": "string",
            "description": "ID of this contact field",
            "example": "11111111-2222-4444-3333-555555555555"
          }
        },
        "description": "Contact Fields schema"
      },
      "ContactFilterMixin": {
        "title": "ContactFilterMixin",
        "type": "object",
        "properties": {
          "all_contact_label_ids": {
            "title": "All Contact Label Ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Search contacts that must match all contact label IDs.",
            "example": [
              "0354fb10-9e18-4923-a213-6253800f8d01"
            ]
          },
          "any_contact_label_ids": {
            "title": "Any Contact Label Ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Search contacts that match any contact label IDs.",
            "example": [
              "0354fb10-9e18-4923-a213-6253800f8d01"
            ]
          },
          "exclude_contact_ids": {
            "title": "Exclude Contact Ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Exclude contacts that match any contact IDs.",
            "example": [
              "0354fb10-9e18-4923-a213-6253800f8d01"
            ]
          },
          "addition_contact_ids": {
            "title": "Addition Contact Ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include contacts that match any contact IDs.",
            "example": [
              "0354fb10-9e18-4923-a213-6253800f8d01"
            ]
          },
          "exclude_any_contact_label_ids": {
            "title": "Exclude Any Contact Label Ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Exclude contacts that match any contact label IDs.",
            "example": [
              "11111111-2222-4444-3333-555555555555",
              "11111111-2222-4444-3333-666666666666"
            ]
          },
          "exclude_all_contact_label_ids": {
            "title": "Exclude All Contact Label Ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Exclude contacts that must match all contact label IDs.",
            "example": [
              "11111111-2222-4444-3333-555555555555",
              "11111111-2222-4444-3333-666666666666"
            ]
          },
          "keyword": {
            "title": "Keyword",
            "type": "string",
            "description": "Search contacts that any name or phone match the keyword.",
            "example": "+18111222333"
          },
          "whatsapp_phone_only": {
            "title": "Whatsapp Phone Only",
            "type": "boolean",
            "description": "Search only contacts that have whatsapp number.",
            "default": false,
            "example": true
          }
        },
        "description": "ContactFilterMixin."
      },
      "ContactLabel": {
        "title": "ContactLabel",
        "required": [
          "name",
          "color",
          "description",
          "id",
          "is_system",
          "created_time",
          "updated_time"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "name",
            "type": "string",
            "description": "The name of contact label.",
            "example": "test"
          },
          "color": {
            "title": "color",
            "type": "string",
            "description": "The color of contact label.",
            "example": "#19b9c3"
          },
          "description": {
            "title": "description",
            "type": "string",
            "description": "The description of contact label.",
            "example": "This label is for vip customer"
          },
          "id": {
            "title": "The id of this contact_label",
            "type": "string",
            "description": "The id of this contact_label",
            "example": "11111111-2222-4444-3333-555555555555"
          },
          "is_system": {
            "title": "is_system",
            "type": "boolean",
            "description": "Indicate whether this is a systematic label.",
            "example": true
          },
          "created_time": {
            "title": "created_time",
            "type": "string",
            "description": "The time of this item created.",
            "format": "date-time",
            "example": "2025-07-10T02:40:44.124904"
          },
          "updated_time": {
            "title": "updated_time",
            "type": "string",
            "description": "The time of this item updated_time.",
            "format": "date-time",
            "example": "2025-07-10T02:40:44.124916"
          }
        },
        "description": "ContactLabel schema with fields that need to return to client."
      },
      "ContactLabelWithCount": {
        "title": "ContactLabelWithCount",
        "required": [
          "name",
          "color",
          "description",
          "id",
          "is_system",
          "created_time",
          "updated_time"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "name",
            "type": "string",
            "description": "The name of contact label.",
            "example": "test"
          },
          "color": {
            "title": "color",
            "type": "string",
            "description": "The color of contact label.",
            "example": "#19b9c3"
          },
          "description": {
            "title": "description",
            "type": "string",
            "description": "The description of contact label.",
            "example": "This label is for vip customer"
          },
          "id": {
            "title": "The id of this contact_label",
            "type": "string",
            "description": "The id of this contact_label",
            "example": "11111111-2222-4444-3333-555555555555"
          },
          "is_system": {
            "title": "is_system",
            "type": "boolean",
            "description": "Indicate whether this is a systematic label.",
            "example": true
          },
          "created_time": {
            "title": "created_time",
            "type": "string",
            "description": "The time of this item created.",
            "format": "date-time",
            "example": "2025-07-10T02:40:44.124904"
          },
          "updated_time": {
            "title": "updated_time",
            "type": "string",
            "description": "The time of this item updated_time.",
            "format": "date-time",
            "example": "2025-07-10T02:40:44.124916"
          },
          "total_count": {
            "title": "total_count",
            "type": "integer",
            "description": "The contact counts of this contact labels.",
            "example": 10
          }
        },
        "description": "ContactLabel schema with additional count."
      },
      "Conversation": {
        "title": "Conversation",
        "required": [
          "id",
          "workspace_id",
          "contact_id",
          "is_unread",
          "created_time",
          "updated_time"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "description": "The entry UUID.",
            "example": "0354fb10-9e18-4923-a213-6253800f8d01"
          },
          "workspace_id": {
            "title": "workspace_id",
            "type": "string",
            "description": "The associated workspace id for this conversation.",
            "example": "11111111-2222-4444-3333-555555555555"
          },
          "contact_id": {
            "title": "contact_id",
            "type": "string",
            "description": "The associated contact id for this conversation.",
            "example": "11111111-2222-4444-3333-555555555555"
          },
          "phone_id": {
            "title": "phone_id",
            "type": "string",
            "description": "The associated phone id for this conversation.",
            "example": "11111111-2222-4444-3333-555555555555"
          },
          "is_unread": {
            "title": "is_unread",
            "type": "boolean",
            "description": "Indicate whether this conversation has new messages."
          },
          "created_time": {
            "title": "Created Time",
            "type": "string",
            "description": "The time of this item created.",
            "format": "date-time",
            "example": "2025-07-10T02:40:38.825204"
          },
          "updated_time": {
            "title": "Updated Time",
            "type": "string",
            "description": "The time of this item updated.",
            "format": "date-time",
            "example": "2025-07-10T02:40:38.825222"
          },
          "phone": {
            "title": "phone",
            "allOf": [
              {
                "$ref": "#/components/schemas/app__api__v1__schema__phone__Phone"
              }
            ],
            "description": "The associated phone for this conversation"
          },
          "contact": {
            "title": "contact",
            "allOf": [
              {
                "$ref": "#/components/schemas/Contact"
              }
            ],
            "description": "The associated contact for this conversation."
          },
          "labels": {
            "title": "labels",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConversationLabel"
            },
            "description": "The associated labels for this conversation."
          },
          "latest_message": {
            "title": "latest_message",
            "allOf": [
              {
                "$ref": "#/components/schemas/MessageWithMediaUrls"
              }
            ],
            "description": "The associated latest message for this conversation."
          }
        },
        "description": "Conversation schema."
      },
      "ConversationIntegration": {
        "title": "ConversationIntegration",
        "required": [
          "outbound_starting_message",
          "type"
        ],
        "type": "object",
        "properties": {
          "inbound_pick_up_message": {
            "title": "inbound_pick_up_message",
            "type": "string",
            "description": "Conversation pick up message for inbound call.",
            "example": "Hello, how can I help you?"
          },
          "outbound_starting_message": {
            "title": "outbound_starting_message",
            "type": "string",
            "description": "Conversation starting message for outbound call or SMS.",
            "example": "Hello, how can I help you?"
          },
          "outbound_voice": {
            "title": "outbound_voice",
            "type": "string",
            "description": "Conversation text-to-speech voice for outbound call.",
            "example": "en-US-SteffanNeural"
          },
          "outbound_language": {
            "title": "outbound_language",
            "type": "string",
            "description": "Conversation text-to-speech language for outbound call."
          },
          "inbound_voice": {
            "title": "inbound_voice",
            "type": "string",
            "description": "Conversation text-to-speech voice for inbound call.",
            "example": "en-US-SteffanNeural"
          },
          "inbound_language": {
            "title": "inbound_language",
            "type": "string",
            "description": "Conversation text-to-speech language for inbound call."
          },
          "type": {
            "title": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/IntegrationType"
              }
            ],
            "description": "Conversation integration type."
          }
        },
        "description": "ConversationIntegration."
      },
      "ConversationLabel": {
        "title": "ConversationLabel",
        "required": [
          "name",
          "color",
          "description",
          "id",
          "created_time",
          "updated_time"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "name",
            "type": "string",
            "description": "The conversation label name.",
            "example": "new"
          },
          "color": {
            "title": "color",
            "type": "string",
            "description": "The color of the label.",
            "example": "#000000"
          },
          "description": {
            "title": "description",
            "type": "string",
            "description": "The description of contact label.",
            "example": "This label is for vip customer"
          },
          "id": {
            "title": "The id of this ConversationLabel",
            "type": "string",
            "description": "The id of this ConversationLabel",
            "example": "11111111-2222-4444-3333-555555555555"
          },
          "created_time": {
            "title": "created_time",
            "type": "string",
            "description": "The time of this item created.",
            "format": "date-time",
            "example": "2025-07-10T02:40:46.940678"
          },
          "updated_time": {
            "title": "updated_time",
            "type": "string",
            "description": "The time of this item updated_time.",
            "format": "date-time",
            "example": "2025-07-10T02:40:46.940692"
          }
        },
        "description": "ConversationLabel schema with fields that need to return to client."
      },
      "ConversationWithMessageMediaUrls": {
        "title": "ConversationWithMessageMediaUrls",
        "required": [
          "id",
          "workspace_id",
          "contact_id",
          "is_unread",
          "created_time",
          "updated_time"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "description": "The entry UUID.",
            "example": "0354fb10-9e18-4923-a213-6253800f8d01"
          },
          "workspace_id": {
            "title": "workspace_id",
            "type": "string",
            "description": "The associated workspace id for this conversation.",
            "example": "11111111-2222-4444-3333-555555555555"
          },
          "contact_id": {
            "title": "contact_id",
            "type": "string",
            "description": "The associated contact id for this conversation.",
            "example": "11111111-2222-4444-3333-555555555555"
          },
          "phone_id": {
            "title": "phone_id",
            "type": "string",
            "description": "The associated phone id for this conversation.",
            "example": "11111111-2222-4444-3333-555555555555"
          },
          "is_unread": {
            "title": "is_unread",
            "type": "boolean",
            "description": "Indicate whether this conversation has new messages."
          },
          "created_time": {
            "title": "Created Time",
            "type": "string",
            "description": "The time of this item created.",
            "format": "date-time",
            "example": "2025-07-10T02:40:38.825204"
          },
          "updated_time": {
            "title": "Updated Time",
            "type": "string",
            "description": "The time of this item updated.",
            "format": "date-time",
            "example": "2025-07-10T02:40:38.825222"
          },
          "phone": {
            "title": "phone",
            "allOf": [
              {
                "$ref": "#/components/schemas/app__api__v1__schema__phone__Phone"
              }
            ],
            "description": "The associated phone for this conversation"
          },
          "contact": {
            "title": "contact",
            "allOf": [
              {
                "$ref": "#/components/schemas/Contact"
              }
            ],
            "description": "The associated contact for this conversation."
          },
          "labels": {
            "title": "labels",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConversationLabel"
            },
            "description": "The associated labels for this conversation."
          },
          "latest_message": {
            "title": "latest_message",
            "allOf": [
              {
                "$ref": "#/components/schemas/MessageWithMediaUrls"
              }
            ],
            "description": "The associated latest message for this conversation."
          },
          "latest_inbound_message_time": {
            "title": "latest_inbound_message_time",
            "type": "string",
            "description": "The latest inbound message time of the conversation",
            "format": "date-time"
          },
          "latest_outbound_message_time": {
            "title": "latest_outbound_message_time",
            "type": "string",
            "description": "The latest outbound message time of the conversation",
            "format": "date-time"
          }
        },
        "description": "conversation with media url schema."
      },
      "CountAssociatedContacts": {
        "title": "CountAssociatedContacts",
        "required": [
          "total_count"
        ],
        "type": "object",
        "properties": {
          "total_count": {
            "title": "total_count",
            "type": "integer",
            "description": "The total count of associated contacts.",
            "example": 10
          }
        },
        "description": "Count associated contacts schema."
      },
      "CountryCode": {
        "title": "CountryCode",
        "enum": [
          "US",
          "AW",
          "AF",
          "AO",
          "AI",
          "AX",
          "AL",
          "AD",
          "AE",
          "AR",
          "AM",
          "AS",
          "AG",
          "AU",
          "AT",
          "AZ",
          "BI",
          "BE",
          "BJ",
          "BF",
          "BD",
          "BG",
          "BH",
          "BS",
          "BA",
          "BY",
          "BZ",
          "BM",
          "BO",
          "BR",
          "BB",
          "BN",
          "BT",
          "BW",
          "CF",
          "CA",
          "CH",
          "CL",
          "CN",
          "CI",
          "CM",
          "CD",
          "CG",
          "CK",
          "CO",
          "CW",
          "KM",
          "CV",
          "CR",
          "CU",
          "KY",
          "CY",
          "CZ",
          "DE",
          "DJ",
          "DM",
          "DK",
          "DO",
          "DZ",
          "EC",
          "EG",
          "ER",
          "ES",
          "EE",
          "ET",
          "FI",
          "FJ",
          "FK",
          "FR",
          "FO",
          "FM",
          "GA",
          "GB",
          "GE",
          "GH",
          "GI",
          "GN",
          "GP",
          "GM",
          "GW",
          "GQ",
          "GR",
          "GD",
          "GL",
          "GT",
          "GF",
          "GU",
          "GY",
          "HK",
          "HN",
          "HR",
          "HT",
          "HU",
          "ID",
          "IN",
          "IE",
          "IR",
          "IQ",
          "IS",
          "IL",
          "IT",
          "JM",
          "JO",
          "JP",
          "KZ",
          "KE",
          "KG",
          "KH",
          "KI",
          "KN",
          "KR",
          "KW",
          "LA",
          "LB",
          "LR",
          "LY",
          "LC",
          "LI",
          "LK",
          "LS",
          "LT",
          "LU",
          "LV",
          "MO",
          "MA",
          "MC",
          "MD",
          "MG",
          "MV",
          "MX",
          "MH",
          "MK",
          "ML",
          "MT",
          "MM",
          "ME",
          "MN",
          "MP",
          "MZ",
          "MR",
          "MS",
          "MQ",
          "MU",
          "MW",
          "MY",
          "YT",
          "NA",
          "NC",
          "NE",
          "NF",
          "NG",
          "NI",
          "NU",
          "NL",
          "NO",
          "NP",
          "NR",
          "NZ",
          "OM",
          "PK",
          "PA",
          "PE",
          "PH",
          "PW",
          "PG",
          "PL",
          "PR",
          "PT",
          "PY",
          "PS",
          "PF",
          "QA",
          "RE",
          "RO",
          "RU",
          "RW",
          "SA",
          "SD",
          "SS",
          "SN",
          "SG",
          "SH",
          "SJ",
          "SB",
          "SL",
          "SV",
          "SM",
          "SO",
          "SX",
          "PM",
          "RS",
          "ST",
          "SR",
          "SK",
          "SI",
          "SE",
          "SC",
          "SY",
          "TC",
          "TD",
          "TG",
          "TH",
          "TJ",
          "TK",
          "TM",
          "TL",
          "TO",
          "TT",
          "TN",
          "TR",
          "TV",
          "TW",
          "TZ",
          "UG",
          "UA",
          "UY",
          "UZ",
          "VC",
          "VE",
          "VG",
          "VI",
          "VN",
          "VU",
          "WF",
          "WS",
          "YE",
          "ZA",
          "ZM",
          "ZW",
          "TEST"
        ],
        "type": "string",
        "description": "Country codes alpha-2 (ISO 3166)"
      },
      "CreateAPIkey": {
        "title": "CreateAPIkey",
        "type": "object",
        "properties": {
          "name": {
            "title": "name",
            "type": "string",
            "description": "The name of APIkey",
            "default": "",
            "example": "Testing API Key."
          }
        },
        "description": "Create APIkey schema"
      },
      "CreateAgentSkill": {
        "title": "CreateAgentSkill",
        "required": [
          "name",
          "description"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "name",
            "type": "string",
            "description": "The name of agent skill.",
            "example": "VIP"
          },
          "description": {
            "title": "description",
            "type": "string",
            "description": "The description of agent skill.",
            "example": "This skill is for vip customer"
          },
          "added_user_accounts": {
            "title": "added_user_accounts",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of added user accounts.",
            "example": [
              "user_account_1",
              "user_account_2"
            ]
          }
        },
        "description": "CreateAgentSkill schema"
      },
      "CreateAutoDialerCampaign": {
        "title": "CreateAutoDialerCampaign",
        "required": [
          "name",
          "type",
          "capture_keypress",
          "capture_stt",
          "phone_ids",
          "mode",
          "stage"
        ],
        "type": "object",
        "properties": {
          "start_time": {
            "title": "Start Time",
            "type": "string",
            "description": "The timestamp when this campaign started.",
            "format": "date-time",
            "example": "2025-07-10T02:40:47.416137"
          },
          "end_time": {
            "title": "End Time",
            "type": "string",
            "description": "The timestamp when this campaign ended.",
            "format": "date-time",
            "example": "2025-07-10T02:40:47.416155"
          },
          "name": {
            "title": "Name",
            "type": "string",
            "description": "Auto dialer campaign name",
            "example": "My auto dialer campaign"
          },
          "draft_name": {
            "title": "draft_name",
            "type": "string",
            "description": "The draft name of this auto dialer campaign.",
            "example": "My draft auto dialer campaign"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AutoDialerCampaignType"
              }
            ],
            "description": "Auto dialer campaign type",
            "example": "VOICE_DROP"
          },
          "message": {
            "title": "Message",
            "type": "string",
            "description": "Message for text-to-speech.",
            "example": "Hello my friend."
          },
          "tts_language": {
            "title": "Tts Language",
            "type": "string",
            "description": "Language code for text-to-speech.",
            "example": "en-US."
          },
          "tts_voice": {
            "title": "Tts Voice",
            "type": "string",
            "description": "Voice model for text-to-speech.",
            "default": "default",
            "example": "default"
          },
          "ai_agent_id": {
            "title": "Ai Agent Id",
            "type": "string",
            "description": "AI agent ID.",
            "example": "0354fb10-9e18-4923-a213-6253800f8d01"
          },
          "ai_agent_conversation_config_id": {
            "title": "Ai Agent Conversation Config Id",
            "type": "string",
            "description": "AI agent associated conversation config ID.",
            "example": "0354fb10-9e18-4923-a213-6253800f8d01"
          },
          "max_attempts": {
            "title": "Max Attempts",
            "exclusiveMinimum": 0.0,
            "type": "integer",
            "description": "Dial to a contact up to the number of attempts.",
            "default": 1
          },
          "max_dialers": {
            "title": "Max Dialers",
            "exclusiveMinimum": 0.0,
            "type": "integer",
            "description": "Maximum number of concurrent dialers.",
            "default": 20
          },
          "capture_keypress": {
            "title": "Capture Keypress",
            "type": "boolean",
            "description": "Has true to capture keypress in IVR."
          },
          "capture_stt": {
            "title": "Capture Stt",
            "type": "boolean",
            "description": "Has true to capture speech-to-text in IVR."
          },
          "is_timezone_aware": {
            "title": "Is Timezone Aware",
            "type": "boolean",
            "description": "Has true if this auto dialer campaign is timezone aware.",
            "default": false
          },
          "is_schedule": {
            "title": "Is Schedule",
            "type": "boolean",
            "description": "Has true if this auto dialer campaign is schedule.",
            "default": false
          },
          "contact_file_url": {
            "title": "contact_file_url",
            "maxLength": 2083,
            "minLength": 1,
            "type": "string",
            "description": "The URL of the contact file contains contacts for this campaign.",
            "format": "uri"
          },
          "timezone": {
            "title": "timezone",
            "type": "string",
            "description": "The timezone of this auto dialer campaign.",
            "example": "UTC"
          },
          "audio_url": {
            "title": "Audio Url",
            "type": "string",
            "description": "The associated audio URL for this auto dialer campaign.",
            "example": "https://seax-bulksms.s3.amazonaws.com/audio/xxx.wav"
          },
          "all_contact_label_ids": {
            "title": "All Contact Label Ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Search contacts that must match all contact label IDs.",
            "example": [
              "0354fb10-9e18-4923-a213-6253800f8d01"
            ]
          },
          "any_contact_label_ids": {
            "title": "Any Contact Label Ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Search contacts that match any contact label IDs.",
            "example": [
              "0354fb10-9e18-4923-a213-6253800f8d01"
            ]
          },
          "exclude_contact_ids": {
            "title": "Exclude Contact Ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Exclude contacts that match any contact IDs.",
            "example": [
              "0354fb10-9e18-4923-a213-6253800f8d01"
            ]
          },
          "addition_contact_ids": {
            "title": "Addition Contact Ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include contacts that match any contact IDs.",
            "example": [
              "0354fb10-9e18-4923-a213-6253800f8d01"
            ]
          },
          "exclude_any_contact_label_ids": {
            "title": "Exclude Any Contact Label Ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Exclude contacts that match any contact label IDs.",
            "example": [
              "11111111-2222-4444-3333-555555555555",
              "11111111-2222-4444-3333-666666666666"
            ]
          },
          "exclude_all_contact_label_ids": {
            "title": "Exclude All Contact Label Ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Exclude contacts that must match all contact label IDs.",
            "example": [
              "11111111-2222-4444-3333-555555555555",
              "11111111-2222-4444-3333-666666666666"
            ]
          },
          "keyword": {
            "title": "Keyword",
            "type": "string",
            "description": "Search contacts that any name or phone match the keyword.",
            "example": "+18111222333"
          },
          "whatsapp_phone_only": {
            "title": "Whatsapp Phone Only",
            "type": "boolean",
            "description": "Search only contacts that have whatsapp number.",
            "default": false,
            "example": true
          },
          "phone_ids": {
            "title": "Phone Ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The phone IDs are used for this auto dialer campaign.",
            "example": [
              "0354fb10-9e18-4923-a213-6253800f8d01"
            ]
          },
          "mode": {
            "title": "mode",
            "allOf": [
              {
                "$ref": "#/components/schemas/CampaignMode"
              }
            ],
            "description": "The mode of this auto dialer campaign.",
            "example": "WEB"
          },
          "stage": {
            "title": "stage",
            "allOf": [
              {
                "$ref": "#/components/schemas/CampaignStage"
              }
            ],
            "description": "The stage of this auto dialer campaign.",
            "example": "INSTANCE"
          },
          "attach_contact_label_ids": {
            "title": "Attach Contact Label Ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The contact label IDs would be attached to all contacts in this campaign.",
            "example": [
              "0354fb10-9e18-4923-a213-6253800f8d01"
            ]
          },
          "overwrite_phone_recipient": {
            "title": "Overwrite Phone Recipient",
            "allOf": [
              {
                "$ref": "#/components/schemas/CreateOrUpdatePhoneRecipient"
              }
            ],
            "description": "Overwrite the recipients of given phones for this auto dialer campaign."
          },
          "contact_field_ids": {
            "title": "Contact Field Ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The IDs of the contact fields used by this auto dialer campaign"
          },
          "relative_time_config": {
            "title": "Relative Time Config",
            "allOf": [
              {
                "$ref": "#/components/schemas/CreateRelativeTimeConfig"
              }
            ],
            "description": "The relative time config of this auto dialer campaign"
          }
        },
        "description": "Auto dialer campaign schema for creating."
      },
      "CreateBYOCTrunk": {
        "title": "CreateBYOCTrunk",
        "required": [
          "sip_domain",
          "acl_ip_addresses"
        ],
        "type": "object",
        "properties": {
          "sip_domain": {
            "title": "Sip Domain",
            "type": "string",
            "description": "SIP Domain of this BYOC trunks configuration."
          },
          "acl_ip_addresses": {
            "title": "Acl Ip Addresses",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseACLIPAddress"
            },
            "description": "ACL IP addresses."
          },
          "sip_auth_username": {
            "title": "Sip Auth Username",
            "type": "string",
            "description": "Authentication username is applied to make SIP call."
          },
          "sip_auth_password": {
            "title": "Sip Auth Password",
            "type": "string",
            "description": "Authentication password is applied to make SIP call."
          }
        },
        "description": "BYOCTrunk schema."
      },
      "CreateCampaignHSMWhatsAppBusinessInterface": {
        "title": "CreateCampaignHSMWhatsAppBusinessInterface",
        "required": [
          "deliverer_id",
          "highly_structured_message"
        ],
        "type": "object",
        "properties": {
          "deliverer_id": {
            "title": "deliverer_id",
            "type": "string",
            "description": "The Whatsapp Business Account number."
          },
          "name": {
            "title": "name",
            "type": "string",
            "description": "The name of the campaign.",
            "default": "WHATSAPP HSM CAMPAING 2025-07-10 02:40"
          },
          "type": {
            "title": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/CampaignHSMType"
              }
            ],
            "description": "The type of channel.",
            "default": "whatsapp"
          },
          "highly_structured_message": {
            "title": "highly_structured_message",
            "allOf": [
              {
                "$ref": "#/components/schemas/CampaignHSMWhatsAppInterface"
              }
            ],
            "description": "The highly structured template message data."
          }
        }
      },
      "CreateContactFields": {
        "title": "CreateContactFields",
        "required": [
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "name",
            "type": "string",
            "description": "The name of contact field",
            "example": "country"
          },
          "type": {
            "title": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/ContactFieldType"
              }
            ],
            "description": "The type of contact field",
            "example": "STRING"
          }
        },
        "description": "Create Contact Fields schema"
      },
      "CreateForm": {
        "title": "CreateForm",
        "required": [
          "name",
          "url_checkbox",
          "url_link",
          "url_text",
          "is_enabled",
          "title",
          "consent_message",
          "consent_checkbox",
          "submission_message",
          "fields"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "name",
            "type": "string",
            "description": "The name of Form.",
            "example": "form1"
          },
          "url_checkbox": {
            "title": "url_checkbox",
            "type": "boolean",
            "description": "Whether url_checkbox of form is turned on.",
            "example": true
          },
          "url_link": {
            "title": "url_link",
            "type": "string",
            "description": "The url_link of Form.",
            "example": "https://seasalt.ai"
          },
          "url_text": {
            "title": "url_text",
            "type": "string",
            "description": "The url_text of Form.",
            "example": "seasalt.ai"
          },
          "is_enabled": {
            "title": "is_enabled",
            "type": "boolean",
            "description": "Whether form is turned on.",
            "example": true
          },
          "title": {
            "title": "title",
            "type": "string",
            "description": "The title of Form.",
            "example": "title"
          },
          "consent_message": {
            "title": "consent_message",
            "type": "string",
            "description": "The consent_message of Form.",
            "example": "please see our privacy"
          },
          "consent_checkbox": {
            "title": "consent_checkbox",
            "type": "boolean",
            "description": "The consent_checkbox of Form.",
            "example": true
          },
          "submission_message": {
            "title": "submission_message",
            "type": "string",
            "description": "The submission_message of Form.",
            "example": "https://seasalt.ai"
          },
          "fields": {
            "title": "fields",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FormField"
            },
            "description": "The fields of Form."
          }
        },
        "description": "CreateForm schema."
      },
      "CreateOrUpdateCallIVRCapture": {
        "title": "CreateOrUpdateCallIVRCapture",
        "type": "object",
        "properties": {
          "keypress": {
            "title": "Keypress",
            "type": "string",
            "description": "The captured keypress.",
            "example": "9"
          },
          "stt": {
            "title": "Stt",
            "type": "string",
            "description": "The captured speech-to-text of voice response.",
            "example": "I need refund"
          }
        },
        "description": "CallIVRCapture schema for create or update."
      },
      "CreateOrUpdatePhoneRecipient": {
        "title": "CreateOrUpdatePhoneRecipient",
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "title": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PhoneRecipientType"
              }
            ],
            "description": "The type of the phone recipient."
          },
          "receiver": {
            "title": "receiver",
            "type": "string",
            "description": "The receiver of the phone recipient.",
            "example": "+1234567890"
          }
        },
        "description": "CreateOrUpdatePhoneRecipient."
      },
      "CreateRelativeTimeConfig": {
        "title": "CreateRelativeTimeConfig",
        "required": [
          "timezone",
          "date_contact_field_id"
        ],
        "type": "object",
        "properties": {
          "timezone": {
            "title": "Timezone",
            "type": "string",
            "description": "The timezone of this config.",
            "example": "Asia/Taipei"
          },
          "delta_years": {
            "title": "Delta Years",
            "type": "integer",
            "description": "The delta years of relative date contact field value.",
            "default": 0,
            "example": 0
          },
          "delta_months": {
            "title": "Delta Months",
            "type": "integer",
            "description": "The delta months of relative date contact field value.",
            "default": 0,
            "example": 0
          },
          "delta_days": {
            "title": "Delta Days",
            "type": "integer",
            "description": "The delta days of relative date contact field value.",
            "default": 0,
            "example": 0
          },
          "delta_hours": {
            "title": "Delta Hours",
            "type": "integer",
            "description": "The delta hours of relative time contact field value.",
            "default": 0,
            "example": 0
          },
          "delta_minutes": {
            "title": "Delta Minutes",
            "type": "integer",
            "description": "The delta minutes of relative time contact field value.",
            "default": 0,
            "example": 0
          },
          "absolute_time": {
            "title": "Absolute Time",
            "type": "string",
            "description": "The absolute time of relative date, formate is HH:mm",
            "format": "time",
            "example": "00:00"
          },
          "date_contact_field_id": {
            "title": "Date Contact Field Id",
            "type": "string",
            "description": "The contact field ID for date associate with this relative time config.",
            "example": "0354fb10-9e18-4923-a213-6253800f8d01"
          },
          "time_contact_field_id": {
            "title": "Time Contact Field Id",
            "type": "string",
            "description": "The contact field ID for time associate with this relative time config.",
            "example": "0354fb10-9e18-4923-a213-6253800f8d01"
          }
        },
        "description": "Relative time config for create schema."
      },
      "CreateVerifiedCaller": {
        "title": "CreateVerifiedCaller",
        "required": [
          "phone_number"
        ],
        "type": "object",
        "properties": {
          "phone_number": {
            "title": "Phone Number",
            "type": "string",
            "description": "Phone number of this verified caller.",
            "example": "+1234567890"
          },
          "name": {
            "title": "Name",
            "type": "string",
            "description": "Human readable name of this verified caller.",
            "example": "+1234567890"
          }
        },
        "description": "CreateVerifiedCaller schema."
      },
      "CreateWhatsAppBusinessPlatformTemplateMessage": {
        "title": "CreateWhatsAppBusinessPlatformTemplateMessage",
        "required": [
          "conversation_id",
          "template_name",
          "template_language"
        ],
        "type": "object",
        "properties": {
          "conversation_id": {
            "title": "conversation_id",
            "type": "string",
            "description": "The associated conversation id for this message",
            "example": "11111111-2222-4444-3333-555555555555"
          },
          "template_name": {
            "title": "template_name",
            "type": "string",
            "description": "WhatsApp Business Platform template name.",
            "example": "template_name"
          },
          "template_language": {
            "title": "template_language",
            "type": "string",
            "description": "WhatsApp Business Platform template language.",
            "example": "en_US"
          }
        },
        "description": "Create WhatsApp Business Platform template message schema."
      },
      "CreateWorkspace": {
        "title": "CreateWorkspace",
        "required": [
          "name",
          "business_name",
          "business_address"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "name",
            "type": "string",
            "description": "The name of workspace.",
            "example": "Seasalt"
          },
          "twilio_account_sid": {
            "title": "twilio_account_sid",
            "type": "string",
            "description": "The twilio_account_sid of workspace.",
            "example": "AC00000000000000000000000000000000"
          },
          "twilio_auth_token": {
            "title": "twilio_auth_token",
            "type": "string",
            "description": "The twilio_auth_token of workspace.",
            "example": "00000000000000000000000000000001"
          },
          "timezone": {
            "title": "timezone",
            "type": "string",
            "description": "The timezone of workspace.",
            "default": "America/Los_Angeles",
            "example": "America/Los_Angeles"
          },
          "enable_global_link_shortening": {
            "title": "enable_global_link_shortening",
            "type": "boolean",
            "description": "Whether the link shortening of a workspace is enabled. it can be overwritten by individual campaign.",
            "default": false,
            "example": false
          },
          "link_shortening_fallback_url": {
            "title": "link_shortening_fallback_url",
            "type": "string",
            "description": "The link shortening fallback url of workspace.",
            "default": "https://i.seasalt.ai",
            "example": "https://i.seasalt.ai"
          },
          "link_shortening_url": {
            "title": "link_shortening_url",
            "type": "string",
            "description": "The link shortening url of workspace.",
            "default": "https://i.seasalt.ai",
            "example": "https://i.seasalt.ai"
          },
          "business_name": {
            "title": "business_name",
            "type": "string",
            "description": "The business name of workspace.",
            "example": "Seasalt"
          },
          "business_address": {
            "title": "business_address",
            "type": "string",
            "description": "The business address of workspace.",
            "example": "Seasalt"
          }
        },
        "description": "CreateWorkspace schema"
      },
      "DeleteFilteredAgentSkill": {
        "title": "DeleteFilteredAgentSkill",
        "type": "object",
        "properties": {
          "keyword": {
            "title": "keyword",
            "type": "string",
            "description": "The keyword that all agent skill names or descriptions are matched, case insensitive.",
            "example": "vip"
          }
        },
        "description": "DeleteFilteredAgentSkill schema"
      },
      "DialPadAgentCallWorkaround": {
        "title": "DialPadAgentCallWorkaround",
        "required": [
          "agent_id",
          "receiver"
        ],
        "type": "object",
        "properties": {
          "agent_id": {
            "title": "agent_id",
            "type": "string",
            "description": "The agent id.",
            "example": "40a054cb-1bce-44f0-8c3e-c2443d56f39d"
          },
          "receiver": {
            "title": "receiver",
            "type": "string",
            "description": "The receiver of the call.",
            "example": "+1234567890"
          }
        },
        "description": "DialPadAgentCallWorkaround schema."
      },
      "DialPadAgentCallWorkaroundResponse": {
        "title": "DialPadAgentCallWorkaroundResponse",
        "required": [
          "campaign",
          "ai_agent"
        ],
        "type": "object",
        "properties": {
          "campaign": {
            "title": "campaign",
            "allOf": [
              {
                "$ref": "#/components/schemas/AutoDialerCampaign"
              }
            ],
            "description": "The auto dialer campaign."
          },
          "ai_agent": {
            "title": "ai_agent",
            "allOf": [
              {
                "$ref": "#/components/schemas/AIAgent"
              }
            ],
            "description": "The ai agent."
          }
        },
        "description": "DialPadAgentCallWorkaroundResponse schema."
      },
      "DownloadMessageCount": {
        "title": "DownloadMessageCount",
        "type": "object",
        "properties": {
          "start_datetime": {
            "title": "Start Datetime",
            "type": "string",
            "description": "Optional, start datetime of message count.",
            "format": "date-time",
            "example": "2025-07-10T02:40:57.540988"
          },
          "end_datetime": {
            "title": "End Datetime",
            "type": "string",
            "description": "Optional, end datetime of message count.",
            "format": "date-time",
            "example": "2025-07-10T02:40:57.541007"
          },
          "user_account": {
            "title": "User Account",
            "type": "string",
            "description": "Optional, to get counts from specific user_account, otherwise return all.",
            "example": "user@seasalt.ai"
          }
        }
      },
      "DuplicatedStrategy": {
        "title": "DuplicatedStrategy",
        "enum": [
          "merge",
          "replace",
          "mark"
        ],
        "type": "string",
        "description": "How to handle the contact label when contact has duplicates."
      },
      "ExportContact": {
        "title": "ExportContact",
        "type": "object",
        "properties": {
          "contact_label_ids": {
            "title": "contact_label_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The contact_label ids of this contact.",
            "example": [
              "11111111-2222-4444-3333-555555555555"
            ]
          }
        },
        "description": "Export contact CSV schema."
      },
      "ExternalConversation": {
        "title": "ExternalConversation",
        "required": [
          "created_time",
          "updated_time",
          "id"
        ],
        "type": "object",
        "properties": {
          "created_time": {
            "title": "Created Time",
            "type": "string",
            "description": "The time of this item created.",
            "format": "date-time",
            "example": "2025-07-10T02:40:38.825204"
          },
          "updated_time": {
            "title": "Updated Time",
            "type": "string",
            "description": "The time of this item updated.",
            "format": "date-time",
            "example": "2025-07-10T02:40:38.825222"
          },
          "id": {
            "title": "Id",
            "type": "string",
            "description": "The entry UUID.",
            "example": "0354fb10-9e18-4923-a213-6253800f8d01"
          },
          "source": {
            "title": "source",
            "allOf": [
              {
                "$ref": "#/components/schemas/ExternalConversationSource"
              }
            ],
            "description": "Indicate the source of conversation."
          },
          "type": {
            "title": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/ExternalConversationType"
              }
            ],
            "description": "Indicate the type of conversation."
          },
          "extraction": {
            "title": "extraction",
            "type": "object",
            "description": "Extraction data for this conversation."
          },
          "meta_data": {
            "title": "meta_data",
            "type": "object",
            "description": "meta_data for this conversation."
          }
        },
        "description": "ExternalConversation schema."
      },
      "ExternalConversationSource": {
        "title": "ExternalConversationSource",
        "enum": [
          "SEACHAT",
          "WHATSAPP"
        ],
        "type": "string",
        "description": "External conversation source."
      },
      "ExternalConversationType": {
        "title": "ExternalConversationType",
        "enum": [
          "SMS",
          "CALL",
          "WABP"
        ],
        "type": "string",
        "description": "Conversation type."
      },
      "Form": {
        "title": "Form",
        "required": [
          "name",
          "url_checkbox",
          "url_link",
          "url_text",
          "is_enabled",
          "title",
          "consent_message",
          "consent_checkbox",
          "submission_message",
          "id",
          "fields"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "name",
            "type": "string",
            "description": "The name of Form.",
            "example": "form1"
          },
          "url_checkbox": {
            "title": "url_checkbox",
            "type": "boolean",
            "description": "Whether url_checkbox of form is turned on.",
            "example": true
          },
          "url_link": {
            "title": "url_link",
            "type": "string",
            "description": "The url_link of Form.",
            "example": "https://seasalt.ai"
          },
          "url_text": {
            "title": "url_text",
            "type": "string",
            "description": "The url_text of Form.",
            "example": "seasalt.ai"
          },
          "is_enabled": {
            "title": "is_enabled",
            "type": "boolean",
            "description": "Whether form is turned on.",
            "example": true
          },
          "title": {
            "title": "title",
            "type": "string",
            "description": "The title of Form.",
            "example": "title"
          },
          "consent_message": {
            "title": "consent_message",
            "type": "string",
            "description": "The consent_message of Form.",
            "example": "please see our privacy"
          },
          "consent_checkbox": {
            "title": "consent_checkbox",
            "type": "boolean",
            "description": "The consent_checkbox of Form.",
            "example": true
          },
          "submission_message": {
            "title": "submission_message",
            "type": "string",
            "description": "The submission_message of Form.",
            "example": "https://seasalt.ai"
          },
          "id": {
            "title": "id",
            "type": "string",
            "description": "The id of Form.",
            "example": "11111111-2222-4444-3333-555555555555"
          },
          "fields": {
            "title": "fields",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FormField"
            },
            "description": "The fields of Form."
          }
        },
        "description": "Form schema."
      },
      "FormField": {
        "title": "FormField",
        "required": [
          "title",
          "entity_name",
          "is_enabled",
          "is_required"
        ],
        "type": "object",
        "properties": {
          "title": {
            "title": "title",
            "type": "string",
            "description": "The title of FormField.",
            "example": "form1"
          },
          "entity_name": {
            "title": "entity_name",
            "type": "string",
            "description": "The entity_name of FormField.",
            "example": "_NAME"
          },
          "is_enabled": {
            "title": "is_enabled",
            "type": "boolean",
            "description": "The is_enabled of FormField.",
            "example": true
          },
          "is_required": {
            "title": "is_required",
            "type": "boolean",
            "description": "The is_required of FormField.",
            "example": true
          }
        },
        "description": "FormField schema."
      },
      "GenerateMessagePreviewRequest": {
        "title": "GenerateMessagePreviewRequest",
        "required": [
          "message_template"
        ],
        "type": "object",
        "properties": {
          "all_contact_label_ids": {
            "title": "all_contact_label_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional, search contacts that must match all contact label ids.",
            "example": [
              "11111111-2222-4444-3333-555555555555",
              "11111111-2222-4444-3333-666666666666"
            ]
          },
          "any_contact_label_ids": {
            "title": "any_contact_label_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional, search contacts that match one of contact label ids.",
            "example": [
              "11111111-2222-4444-3333-555555555555",
              "11111111-2222-4444-3333-666666666666"
            ]
          },
          "exclude_contact_ids": {
            "title": "exclude_contact_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional, exclude contacts with contact ids from contact label searching result.",
            "example": [
              "11111111-2222-4444-3333-555555555555",
              "11111111-2222-4444-3333-666666666666"
            ]
          },
          "addition_contact_ids": {
            "title": "addition_contact_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional, include contacts with contact ids from contact label searching result.",
            "example": [
              "11111111-2222-4444-3333-555555555555",
              "11111111-2222-4444-3333-666666666666"
            ]
          },
          "exclude_any_contact_label_ids": {
            "title": "exclude_any_contact_label_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "exclude contact with any contact_label_ids",
            "example": [
              "11111111-2222-4444-3333-555555555555",
              "11111111-2222-4444-3333-666666666666"
            ]
          },
          "exclude_all_contact_label_ids": {
            "title": "exclude_all_contact_label_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "exclude contact with all contact_label_ids",
            "example": [
              "11111111-2222-4444-3333-555555555555",
              "11111111-2222-4444-3333-666666666666"
            ]
          },
          "keyword": {
            "title": "Keyword",
            "type": "string",
            "description": "Optional, determine the keyword to search contact names and phones.",
            "example": "+18111222333"
          },
          "header_template": {
            "title": "header_template",
            "type": "string",
            "description": "The template of header, the variables should be embraced with {}.",
            "example": "Hi, {name}..."
          },
          "message_template": {
            "title": "message_template",
            "type": "string",
            "description": "The template of message, the variables should be embraced with {}.",
            "example": "Hi, {name}..."
          },
          "max_len": {
            "title": "max_len",
            "type": "integer",
            "description": "The max number of returned messages, there is no limit if it's 0.",
            "default": 0,
            "example": 3
          },
          "whatsapp_phone_only": {
            "title": "whatsapp_phone_only",
            "type": "boolean",
            "description": "Search only contacts have whatsapp number.",
            "default": false,
            "example": false
          }
        },
        "description": "POST generate_message_previews request schema"
      },
      "GenerateMessagePreviewResponse": {
        "title": "GenerateMessagePreviewResponse",
        "required": [
          "previews"
        ],
        "type": "object",
        "properties": {
          "previews": {
            "title": "previews",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MessagePreview"
            },
            "description": "The preview models."
          }
        },
        "description": "POST generate_message_previews response schema"
      },
      "GetUploadUrl": {
        "title": "GetUploadUrl",
        "required": [
          "url"
        ],
        "type": "object",
        "properties": {
          "url": {
            "title": "url",
            "type": "string",
            "description": "The URL for uploading the file to our file server",
            "example": "https://seax-bulksms.s3.amazonaws.com/media/test.jpg?AWSAccessKeyId=***&Signature=***&Expires=1644468881"
          }
        },
        "description": "Data schema of upload url."
      },
      "HSMWhatsAppBusinessMessage": {
        "title": "HSMWhatsAppBusinessMessage",
        "required": [
          "deliverer_id",
          "destination",
          "message"
        ],
        "type": "object",
        "properties": {
          "deliverer_id": {
            "title": "deliverer_id",
            "type": "string",
            "description": "The Whatsapp Account number."
          },
          "destination": {
            "title": "destination",
            "type": "string",
            "description": "The customer whatsapp phone number."
          },
          "type": {
            "title": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/MessageHSMType"
              }
            ],
            "description": "The type.",
            "default": "media"
          },
          "channel": {
            "title": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/MessageHSMChannel"
              }
            ],
            "description": "The type.",
            "default": "whatsapp"
          },
          "name": {
            "title": "name",
            "type": "string",
            "description": "The name of customer."
          },
          "message": {
            "title": "message",
            "maxLength": 3000,
            "type": "string",
            "description": "The message."
          },
          "is_attachment": {
            "title": "is_attachment",
            "type": "boolean",
            "description": "The attachment flag indicates the message contains attachment.",
            "default": false
          },
          "attachment": {
            "title": "attachment",
            "allOf": [
              {
                "$ref": "#/components/schemas/HSMWhatsAppBusinessMessageAttachment"
              }
            ],
            "description": "The attachment."
          }
        }
      },
      "HSMWhatsAppBusinessMessageAttachment": {
        "title": "HSMWhatsAppBusinessMessageAttachment",
        "required": [
          "mime_type",
          "media_url"
        ],
        "type": "object",
        "properties": {
          "mime_type": {
            "title": "mime_type",
            "type": "string",
            "description": "The attachment mime type. Currently support text, image, document, and video"
          },
          "media_url": {
            "title": "media_url",
            "type": "string",
            "description": "The attachment media url."
          }
        }
      },
      "HSMWhatsAppBusinessMessageResponse": {
        "title": "HSMWhatsAppBusinessMessageResponse",
        "required": [
          "id",
          "message_time"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "id",
            "type": "string",
            "description": "The SeaX message id",
            "example": "11111111-2222-4444-3333-555555555555"
          },
          "media_urls": {
            "title": "media_urls",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The media attachment urls of this message.",
            "example": [
              "https://seax-bulksms.s3.amazonaws.com/media/myimage.jpg"
            ]
          },
          "external_id": {
            "title": "external_id",
            "type": "string",
            "description": "The whatsapp message id",
            "example": "SM00000000000000000000000000000001"
          },
          "message_time": {
            "title": "message_time",
            "type": "string",
            "description": "The message time",
            "format": "date-time"
          }
        }
      },
      "HTTPValidationError": {
        "title": "HTTPValidationError",
        "type": "object",
        "properties": {
          "detail": {
            "title": "Detail",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        }
      },
      "IntegrationType": {
        "title": "IntegrationType",
        "enum": [
          "SEAX_CALL",
          "SEAX_SMS",
          "SEAX_WABP"
        ],
        "type": "string",
        "description": "IntegrationType."
      },
      "InviteUserToWorkspace": {
        "title": "InviteUserToWorkspace",
        "required": [
          "account",
          "last_name"
        ],
        "type": "object",
        "properties": {
          "workspace_role": {
            "title": "workspace_role",
            "allOf": [
              {
                "$ref": "#/components/schemas/UserWorkspaceRole"
              }
            ],
            "description": "The workspace_role of user in this workspace.",
            "default": "OPERATOR",
            "example": "MANAGER"
          },
          "account": {
            "title": "account",
            "type": "string",
            "description": "The account of the user. It is actually the email of the user.",
            "example": "someone@gmail.com"
          },
          "first_name": {
            "title": "first_name",
            "type": "string",
            "description": "The first name of user.",
            "example": "Satoshi"
          },
          "last_name": {
            "title": "last_name",
            "type": "string",
            "description": "The last name of user.",
            "example": "Nakamoto"
          },
          "phone_ids": {
            "title": "phone_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The phones' id in this workspace.",
            "example": [
              "11111111-2222-4444-3333-555555555555"
            ]
          }
        },
        "description": "InviteUserToWorkspace schema"
      },
      "Job": {
        "title": "Job",
        "required": [
          "status",
          "job_id"
        ],
        "type": "object",
        "properties": {
          "error_msg": {
            "title": "Error message",
            "type": "string",
            "description": "The error message of associated job."
          },
          "error_code": {
            "title": "code for error",
            "type": "integer",
            "description": "The code defined in exceptions."
          },
          "error_parameters": {
            "title": "Parameters for error",
            "type": "object",
            "description": "A json string for format error"
          },
          "status": {
            "title": "Status",
            "allOf": [
              {
                "$ref": "#/components/schemas/JobStatus"
              }
            ],
            "description": "Job status",
            "example": "started"
          },
          "enqueued_at": {
            "title": "Enqueue time",
            "type": "string",
            "description": "The UTC time when the job was enqueued",
            "format": "date-time",
            "example": "2021-11-11T05:45:58.576689"
          },
          "started_at": {
            "title": "Start time",
            "type": "string",
            "description": "The UTC time when the job was started",
            "format": "date-time",
            "example": "2021-11-11T05:45:58.576689"
          },
          "updated_at": {
            "title": "Updated time",
            "type": "string",
            "description": "The UTC time when the job was updated",
            "format": "date-time",
            "example": "2021-11-11T05:45:58.576689"
          },
          "ended_at": {
            "title": "End time",
            "type": "string",
            "description": "The UTC time when the job was ended",
            "format": "date-time",
            "example": "2021-11-11T05:45:58.576689"
          },
          "description": {
            "title": "Description",
            "type": "string",
            "description": "Describe the carrier of the job"
          },
          "timeout": {
            "title": "Timeout",
            "type": "integer",
            "description": "Maximum time for each job runtime",
            "default": 21600
          },
          "job_id": {
            "title": "Job ID",
            "type": "string",
            "description": "The UUID of the job when job was created and enqueued",
            "example": "11111111-2222-4444-3333-555555555555"
          },
          "workspace_id": {
            "title": "Workspace id",
            "type": "string",
            "description": "Workspace for this job",
            "example": "11111111-2222-4444-3333-555555555555"
          },
          "type": {
            "title": "Job type",
            "allOf": [
              {
                "$ref": "#/components/schemas/JobType"
              }
            ],
            "description": "Job type for this job"
          },
          "result": {
            "title": "Result",
            "type": "object",
            "description": "Result of the job execution"
          },
          "traceback": {
            "title": "Traceback",
            "type": "string",
            "description": "Traceback during the job execution"
          },
          "resource_id": {
            "title": "Resource ID",
            "type": "string",
            "description": "Associated resource identifier for this job",
            "example": "11111111-2222-4444-3333-555555555555"
          }
        },
        "description": "Job schema"
      },
      "JobStatus": {
        "title": "JobStatus",
        "enum": [
          "queued",
          "finished",
          "failed",
          "started",
          "deferred",
          "scheduled",
          "stopped",
          "canceled"
        ],
        "type": "string",
        "description": "The Status of Job within its lifecycle at any given time."
      },
      "JobType": {
        "title": "JobType",
        "enum": [
          "lauch_campaign",
          "edit_scheduled_campaign",
          "cancel_campaign",
          "lauch_auto_dialer_campaign",
          "import_contacts",
          "remove_contacts",
          "remove_contact_labels",
          "import_recipients",
          "sync_history_whatsapp",
          "forward_conversation_message",
          "upload_wabp_file",
          "generate_thumbnail_file_and_update_media",
          "generate_thumbnail_and_update",
          "bulk_delete_agent_skills"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "Keyword": {
        "title": "Keyword",
        "required": [
          "name",
          "reply",
          "id",
          "phone_id",
          "priority",
          "contact_labels",
          "created_time",
          "updated_time"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "name",
            "type": "string",
            "description": "The name of keyword.",
            "example": "want"
          },
          "reply": {
            "title": "The auto-reply message",
            "type": "string",
            "description": "The auto-reply message",
            "example": "OK, we got it."
          },
          "enabled_auto_reply": {
            "title": "indicate whether this keyword is enabled auto replying feature",
            "type": "boolean",
            "description": "indicate whether this keyword is enabled",
            "default": true,
            "example": true
          },
          "enabled_contact_label": {
            "title": "indicate whether this keyword is enabled contact labeling feature",
            "type": "boolean",
            "description": "indicate whether this keyword is enabled  contact labeling feature",
            "default": true,
            "example": true
          },
          "keep_dnc_label_only": {
            "title": "Remove all other labels but keep DNC",
            "type": "boolean",
            "description": "Remove all other labels but keep DNC",
            "default": false,
            "example": false
          },
          "id": {
            "title": "The id of this keyword",
            "type": "string",
            "description": "The id of this keyword",
            "example": "11111111-2222-4444-3333-555555555555"
          },
          "phone_id": {
            "title": "The id of phone that this keyword belong to",
            "type": "string",
            "description": "The id of phone that this keyword belong to",
            "example": "11111111-2222-4444-3333-555555555555"
          },
          "priority": {
            "title": "The priority of this keyword.",
            "type": "integer",
            "description": "The priority of this keyword to auto-reply message, it's auto incremental.",
            "example": 10
          },
          "contact_labels": {
            "title": "contact_labels",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactLabel"
            },
            "description": "The contact labels of this keyword."
          },
          "created_time": {
            "title": "created_time",
            "type": "string",
            "description": "The time of this item created.",
            "format": "date-time",
            "example": "2025-07-10T02:40:44.135163"
          },
          "updated_time": {
            "title": "updated_time",
            "type": "string",
            "description": "The time of this item updated_time.",
            "format": "date-time",
            "example": "2025-07-10T02:40:44.135176"
          }
        },
        "description": "Keyword schema with fields that need to return to client."
      },
      "LanguageCode": {
        "title": "LanguageCode",
        "enum": [
          "auto",
          "af",
          "af-ZA",
          "sq",
          "ar-DZ",
          "ar-BH",
          "ar-EG",
          "ar-IQ",
          "ar-JO",
          "ar-KW",
          "ar-LB",
          "ar-LY",
          "ar-MA",
          "ar-OM",
          "ar-QA",
          "ar-SA",
          "arb",
          "ar-SY",
          "ar-TN",
          "ar-AE",
          "ar-YE",
          "eu",
          "eu-ES",
          "be",
          "bg",
          "bg-BG",
          "ca",
          "ca-ES",
          "zh-HK",
          "zh-CN",
          "zh-SG",
          "zh-TW",
          "yue-CN",
          "yue-HK",
          "cmn-CN",
          "cmn-TW",
          "hr",
          "cs",
          "cs-CZ",
          "da",
          "da-DK",
          "nl-BE",
          "nl-NL",
          "nl",
          "en",
          "en-AU",
          "en-BZ",
          "en-CA",
          "en-IN",
          "en-IE",
          "en-JM",
          "en-NZ",
          "en-ZA",
          "en-TT",
          "en-GB",
          "en-US",
          "en-GB-WLS",
          "en-SG",
          "et",
          "fo",
          "fa",
          "fil-PH",
          "fi",
          "fi-FI",
          "fr-BE",
          "fr-CA",
          "fr-FR",
          "fr-LU",
          "fr",
          "fr-CH",
          "gd",
          "gl-ES",
          "de-AT",
          "de-DE",
          "de-LI",
          "de-LU",
          "de",
          "de-CH",
          "el",
          "el-GR",
          "he",
          "he-IL",
          "hi",
          "hi-IN",
          "hu",
          "hu-HU",
          "is",
          "is-IS",
          "id",
          "id-ID",
          "ga",
          "it-IT",
          "it",
          "it-CH",
          "ja",
          "ja-JP",
          "ko",
          "ko-KR",
          "ku",
          "lv",
          "lv-LV",
          "lt",
          "lt-LT",
          "mk",
          "ms-MY",
          "ml",
          "ml-IN",
          "ms",
          "mt",
          "mr-IN",
          "no",
          "nb",
          "nb-NO",
          "nn",
          "pl",
          "pl-PL",
          "pt-BR",
          "pt",
          "pt-PT",
          "pa",
          "pa-IN",
          "rm",
          "ro",
          "ro-MD",
          "ro-RO",
          "ru",
          "ru-MD",
          "ru-RU",
          "sr",
          "sr-RS",
          "sk",
          "sk-SK",
          "sl",
          "sb",
          "es-AR",
          "es-BO",
          "es-CL",
          "es-CO",
          "es-CR",
          "es-DO",
          "es-EC",
          "es-SV",
          "es-GT",
          "es-HN",
          "es-MX",
          "es-NI",
          "es-PA",
          "es-PY",
          "es-PE",
          "es-PR",
          "es",
          "es-ES",
          "es-US",
          "es-UY",
          "es-VE",
          "sv",
          "sv-FI",
          "sv-SE",
          "ta-IN",
          "te-IN",
          "th",
          "th-TH",
          "ts",
          "tn",
          "tr",
          "tr-TR",
          "ua",
          "uk-UA",
          "ur",
          "ve",
          "vi",
          "vi-VN",
          "cy",
          "cy-GB",
          "xh",
          "ji",
          "zu"
        ],
        "type": "string",
        "description": "Language Code ISO 639-1 merged from\n\n1. https://www.andiamo.co.uk/resources/iso-language-codes/\n\n2. https://www.twilio.com/docs/voice/twiml/say/text-speech#available-voices-and-languages"
      },
      "ListAgentSkill": {
        "title": "ListAgentSkill",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "title": "data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AgentSkillWithAgentCount"
            },
            "description": "The agent skill list."
          },
          "total": {
            "title": "total",
            "type": "integer",
            "description": "The total count of entries.",
            "example": 0
          }
        },
        "description": "List Label schema."
      },
      "ListConversation": {
        "title": "ListConversation",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "title": "data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConversationWithMessageMediaUrls"
            },
            "description": "The conversation list."
          },
          "total": {
            "title": "total",
            "type": "integer",
            "description": "The total count of entries.",
            "example": 0
          },
          "total_unread": {
            "title": "total_unread",
            "type": "integer",
            "description": "The total count of unread conversations.",
            "default": 0,
            "example": 0
          }
        },
        "description": "List conversation schema."
      },
      "ListMessageWithMediaUrls": {
        "title": "ListMessageWithMediaUrls",
        "required": [
          "id",
          "conversation_id",
          "is_inbound",
          "is_bot",
          "message",
          "message_time",
          "segments_number",
          "status",
          "created_time",
          "updated_time"
        ],
        "type": "object",
        "properties": {
          "click_events": {
            "title": "click_events",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClickEventInfo"
            },
            "description": "The click_events of this message"
          },
          "media_urls": {
            "title": "media_urls",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The media urls of this campaign.",
            "example": [
              "https://seax-bulksms.s3.amazonaws.com/media/myimage.jpg"
            ]
          },
          "id": {
            "title": "id",
            "type": "string",
            "description": "The id of this message",
            "example": "11111111-2222-4444-3333-555555555555"
          },
          "conversation_id": {
            "title": "conversation_id",
            "type": "string",
            "description": "The associated conversation id for this message",
            "example": "11111111-2222-4444-3333-555555555555"
          },
          "campaign_id": {
            "title": "The id of this campaign usecase",
            "type": "string",
            "description": "The associated campaign id for this message",
            "example": "11111111-2222-4444-3333-555555555555"
          },
          "external_id": {
            "title": "external_id",
            "type": "string",
            "description": "The external id of this message",
            "example": "SM00000000000000000000000000000001"
          },
          "is_inbound": {
            "title": "is_inbound",
            "type": "boolean",
            "description": "The delivering direction of this message"
          },
          "is_bot": {
            "title": "is_bot",
            "type": "boolean",
            "description": "Has true if this message was sent from bot."
          },
          "message": {
            "title": "message",
            "type": "string",
            "description": "The message content",
            "example": "Hello"
          },
          "message_time": {
            "title": "message_time",
            "type": "string",
            "description": "The message time",
            "format": "date-time"
          },
          "segments_number": {
            "title": "segments_number",
            "type": "integer",
            "description": "Indicate how many segments the message was split into",
            "example": 1
          },
          "status": {
            "title": "status",
            "allOf": [
              {
                "$ref": "#/components/schemas/MessageStatus"
              }
            ],
            "description": "The delivering status of this message",
            "example": "queued"
          },
          "created_time": {
            "title": "created_time",
            "type": "string",
            "description": "The utc time of this item created.",
            "format": "date-time",
            "example": "2025-07-10T02:40:47.026565"
          },
          "updated_time": {
            "title": "created_time",
            "type": "string",
            "description": "The utc time of this item created.",
            "format": "date-time",
            "example": "2025-07-10T02:40:47.026581"
          },
          "sender": {
            "title": "sender",
            "allOf": [
              {
                "$ref": "#/components/schemas/User"
              }
            ],
            "description": "The sender of this message"
          },
          "whatsapp_message_status": {
            "title": "whatsapp_message_status",
            "allOf": [
              {
                "$ref": "#/components/schemas/WhatsAppMessageStatus"
              }
            ],
            "description": "The whatsapp message status"
          },
          "raw_data": {
            "title": "raw_data",
            "type": "string",
            "description": "The raw_data from this message id."
          },
          "attach_files": {
            "title": "attach_files",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MessageAttachFile"
            },
            "description": "The attach files."
          },
          "response_error_message": {
            "title": "response_error_message",
            "type": "string",
            "description": "The response_error_message of message."
          },
          "event_error_message": {
            "title": "event_error_message",
            "type": "string",
            "description": "The event_error_message of message."
          },
          "contact": {
            "title": "contact",
            "allOf": [
              {
                "$ref": "#/components/schemas/Contact"
              }
            ],
            "description": "The contact from this conversation id."
          },
          "phone": {
            "title": "phone",
            "allOf": [
              {
                "$ref": "#/components/schemas/app__api__v1__schema__phone__Phone"
              }
            ],
            "description": "The phone from this conversation id."
          },
          "phone_id": {
            "title": "phone",
            "type": "string",
            "description": "The phone id from this conversation id."
          }
        },
        "description": "List Message With MediaUrls."
      },
      "ListResponse_AIAgent_": {
        "title": "ListResponse[AIAgent]",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "title": "data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AIAgent"
            },
            "description": "The entry list."
          },
          "total": {
            "title": "total",
            "type": "integer",
            "description": "The total count of entries.",
            "example": 0
          }
        },
        "description": "ListResponse schema"
      },
      "ListResponse_APIkey_": {
        "title": "ListResponse[APIkey]",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "title": "data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/APIkey"
            },
            "description": "The entry list."
          },
          "total": {
            "title": "total",
            "type": "integer",
            "description": "The total count of entries.",
            "example": 0
          }
        },
        "description": "ListResponse schema"
      },
      "ListResponse_AutoDialerCampaignLog_": {
        "title": "ListResponse[AutoDialerCampaignLog]",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "title": "data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AutoDialerCampaignLog"
            },
            "description": "The entry list."
          },
          "total": {
            "title": "total",
            "type": "integer",
            "description": "The total count of entries.",
            "example": 0
          }
        },
        "description": "ListResponse schema"
      },
      "ListResponse_AutoDialerCampaign_": {
        "title": "ListResponse[AutoDialerCampaign]",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "title": "data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AutoDialerCampaign"
            },
            "description": "The entry list."
          },
          "total": {
            "title": "total",
            "type": "integer",
            "description": "The total count of entries.",
            "example": 0
          }
        },
        "description": "ListResponse schema"
      },
      "ListResponse_AvailableTwilioPhone_": {
        "title": "ListResponse[AvailableTwilioPhone]",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "title": "data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AvailableTwilioPhone"
            },
            "description": "The entry list."
          },
          "total": {
            "title": "total",
            "type": "integer",
            "description": "The total count of entries.",
            "example": 0
          }
        },
        "description": "ListResponse schema"
      },
      "ListResponse_CampaignLogRow_": {
        "title": "ListResponse[CampaignLogRow]",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "title": "data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CampaignLogRow"
            },
            "description": "The entry list."
          },
          "total": {
            "title": "total",
            "type": "integer",
            "description": "The total count of entries.",
            "example": 0
          }
        },
        "description": "ListResponse schema"
      },
      "ListResponse_Campaign_": {
        "title": "ListResponse[Campaign]",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "title": "data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Campaign"
            },
            "description": "The entry list."
          },
          "total": {
            "title": "total",
            "type": "integer",
            "description": "The total count of entries.",
            "example": 0
          }
        },
        "description": "ListResponse schema"
      },
      "ListResponse_ContactFields_": {
        "title": "ListResponse[ContactFields]",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "title": "data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactFields"
            },
            "description": "The entry list."
          },
          "total": {
            "title": "total",
            "type": "integer",
            "description": "The total count of entries.",
            "example": 0
          }
        },
        "description": "ListResponse schema"
      },
      "ListResponse_ContactLabelWithCount_": {
        "title": "ListResponse[ContactLabelWithCount]",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "title": "data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactLabelWithCount"
            },
            "description": "The entry list."
          },
          "total": {
            "title": "total",
            "type": "integer",
            "description": "The total count of entries.",
            "example": 0
          }
        },
        "description": "ListResponse schema"
      },
      "ListResponse_Contact_": {
        "title": "ListResponse[Contact]",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "title": "data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Contact"
            },
            "description": "The entry list."
          },
          "total": {
            "title": "total",
            "type": "integer",
            "description": "The total count of entries.",
            "example": 0
          }
        },
        "description": "ListResponse schema"
      },
      "ListResponse_ConversationLabel_": {
        "title": "ListResponse[ConversationLabel]",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "title": "data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConversationLabel"
            },
            "description": "The entry list."
          },
          "total": {
            "title": "total",
            "type": "integer",
            "description": "The total count of entries.",
            "example": 0
          }
        },
        "description": "ListResponse schema"
      },
      "ListResponse_Form_": {
        "title": "ListResponse[Form]",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "title": "data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Form"
            },
            "description": "The entry list."
          },
          "total": {
            "title": "total",
            "type": "integer",
            "description": "The total count of entries.",
            "example": 0
          }
        },
        "description": "ListResponse schema"
      },
      "ListResponse_Job_": {
        "title": "ListResponse[Job]",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "title": "data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Job"
            },
            "description": "The entry list."
          },
          "total": {
            "title": "total",
            "type": "integer",
            "description": "The total count of entries.",
            "example": 0
          }
        },
        "description": "ListResponse schema"
      },
      "ListResponse_Keyword_": {
        "title": "ListResponse[Keyword]",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "title": "data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Keyword"
            },
            "description": "The entry list."
          },
          "total": {
            "title": "total",
            "type": "integer",
            "description": "The total count of entries.",
            "example": 0
          }
        },
        "description": "ListResponse schema"
      },
      "ListResponse_ListMessageWithMediaUrls_": {
        "title": "ListResponse[ListMessageWithMediaUrls]",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "title": "data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ListMessageWithMediaUrls"
            },
            "description": "The entry list."
          },
          "total": {
            "title": "total",
            "type": "integer",
            "description": "The total count of entries.",
            "example": 0
          }
        },
        "description": "ListResponse schema"
      },
      "ListResponse_MegaSendCampaign_": {
        "title": "ListResponse[MegaSendCampaign]",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "title": "data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MegaSendCampaign"
            },
            "description": "The entry list."
          },
          "total": {
            "title": "total",
            "type": "integer",
            "description": "The total count of entries.",
            "example": 0
          }
        },
        "description": "ListResponse schema"
      },
      "ListResponse_MegaSendSender_": {
        "title": "ListResponse[MegaSendSender]",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "title": "data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MegaSendSender"
            },
            "description": "The entry list."
          },
          "total": {
            "title": "total",
            "type": "integer",
            "description": "The total count of entries.",
            "example": 0
          }
        },
        "description": "ListResponse schema"
      },
      "ListResponse_MessageTemplate_": {
        "title": "ListResponse[MessageTemplate]",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "title": "data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MessageTemplate"
            },
            "description": "The entry list."
          },
          "total": {
            "title": "total",
            "type": "integer",
            "description": "The total count of entries.",
            "example": 0
          }
        },
        "description": "ListResponse schema"
      },
      "ListResponse_MessagingService_": {
        "title": "ListResponse[MessagingService]",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "title": "data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MessagingService"
            },
            "description": "The entry list."
          },
          "total": {
            "title": "total",
            "type": "integer",
            "description": "The total count of entries.",
            "example": 0
          }
        },
        "description": "ListResponse schema"
      },
      "ListResponse_NewContact_": {
        "title": "ListResponse[NewContact]",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "title": "data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NewContact"
            },
            "description": "The entry list."
          },
          "total": {
            "title": "total",
            "type": "integer",
            "description": "The total count of entries.",
            "example": 0
          }
        },
        "description": "ListResponse schema"
      },
      "ListResponse_PhoneDetail_": {
        "title": "ListResponse[PhoneDetail]",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "title": "data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhoneDetail"
            },
            "description": "The entry list."
          },
          "total": {
            "title": "total",
            "type": "integer",
            "description": "The total count of entries.",
            "example": 0
          }
        },
        "description": "ListResponse schema"
      },
      "ListResponse_PhoneRevision_": {
        "title": "ListResponse[PhoneRevision]",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "title": "data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhoneRevision"
            },
            "description": "The entry list."
          },
          "total": {
            "title": "total",
            "type": "integer",
            "description": "The total count of entries.",
            "example": 0
          }
        },
        "description": "ListResponse schema"
      },
      "ListResponse_TTSLanguage_": {
        "title": "ListResponse[TTSLanguage]",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "title": "data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TTSLanguage"
            },
            "description": "The entry list."
          },
          "total": {
            "title": "total",
            "type": "integer",
            "description": "The total count of entries.",
            "example": 0
          }
        },
        "description": "ListResponse schema"
      },
      "ListResponse_Union_AutoDialerCampaignJobDetail__AutoDialerCampaignJob__": {
        "title": "ListResponse[Union[AutoDialerCampaignJobDetail, AutoDialerCampaignJob]]",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "title": "data",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/AutoDialerCampaignJobDetail"
                },
                {
                  "$ref": "#/components/schemas/AutoDialerCampaignJob"
                }
              ]
            },
            "description": "The entry list."
          },
          "total": {
            "title": "total",
            "type": "integer",
            "description": "The total count of entries.",
            "example": 0
          }
        },
        "description": "ListResponse schema"
      },
      "ListResponse_VerifiedCaller_": {
        "title": "ListResponse[VerifiedCaller]",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "title": "data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VerifiedCaller"
            },
            "description": "The entry list."
          },
          "total": {
            "title": "total",
            "type": "integer",
            "description": "The total count of entries.",
            "example": 0
          }
        },
        "description": "ListResponse schema"
      },
      "ListResponse_VoiceCallData_": {
        "title": "ListResponse[VoiceCallData]",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "title": "data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VoiceCallData"
            },
            "description": "The entry list."
          },
          "total": {
            "title": "total",
            "type": "integer",
            "description": "The total count of entries.",
            "example": 0
          }
        },
        "description": "ListResponse schema"
      },
      "ListResponse_WhatsAppBusinessAccountTemplate_": {
        "title": "ListResponse[WhatsAppBusinessAccountTemplate]",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "title": "data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WhatsAppBusinessAccountTemplate"
            },
            "description": "The entry list."
          },
          "total": {
            "title": "total",
            "type": "integer",
            "description": "The total count of entries.",
            "example": 0
          }
        },
        "description": "ListResponse schema"
      },
      "ListResponse_WhatsAppBusinessPlatformTemplate_": {
        "title": "ListResponse[WhatsAppBusinessPlatformTemplate]",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "title": "data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WhatsAppBusinessPlatformTemplate"
            },
            "description": "The entry list."
          },
          "total": {
            "title": "total",
            "type": "integer",
            "description": "The total count of entries.",
            "example": 0
          }
        },
        "description": "ListResponse schema"
      },
      "ListResponse_WhatsappBusinessPlatformData_": {
        "title": "ListResponse[WhatsappBusinessPlatformData]",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "title": "data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WhatsappBusinessPlatformData"
            },
            "description": "The entry list."
          },
          "total": {
            "title": "total",
            "type": "integer",
            "description": "The total count of entries.",
            "example": 0
          }
        },
        "description": "ListResponse schema"
      },
      "ListResponse_WhatsappIntegration_": {
        "title": "ListResponse[WhatsappIntegration]",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "title": "data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WhatsappIntegration"
            },
            "description": "The entry list."
          },
          "total": {
            "title": "total",
            "type": "integer",
            "description": "The total count of entries.",
            "example": 0
          }
        },
        "description": "ListResponse schema"
      },
      "ListResponse_WorkspaceUserWithPhone_": {
        "title": "ListResponse[WorkspaceUserWithPhone]",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "title": "data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkspaceUserWithPhone"
            },
            "description": "The entry list."
          },
          "total": {
            "title": "total",
            "type": "integer",
            "description": "The total count of entries.",
            "example": 0
          }
        },
        "description": "ListResponse schema"
      },
      "ListResponse_WorkspaceWithRole_": {
        "title": "ListResponse[WorkspaceWithRole]",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "title": "data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkspaceWithRole"
            },
            "description": "The entry list."
          },
          "total": {
            "title": "total",
            "type": "integer",
            "description": "The total count of entries.",
            "example": 0
          }
        },
        "description": "ListResponse schema"
      },
      "ListSendReceiveMessagesCount": {
        "title": "ListSendReceiveMessagesCount",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "title": "data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SendReceiveMessagesCount"
            },
            "description": "The list of sending message count."
          }
        }
      },
      "MachineDetectionMode": {
        "title": "MachineDetectionMode",
        "enum": [
          "human",
          "fax",
          "machine_start",
          "machine_end_beep",
          "machine_end_silence",
          "machine_end_other",
          "unknown",
          "no_answer"
        ],
        "type": "string",
        "description": "Machine Detection Mode.\n\nReference: https://www.twilio.com/docs/studio/widget-library/make-outgoing-call"
      },
      "MegaSendCampaign": {
        "title": "MegaSendCampaign",
        "required": [
          "name",
          "message",
          "sender_id",
          "created_time",
          "updated_time",
          "id",
          "contact_file",
          "sender",
          "workspace_id",
          "status"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "name",
            "type": "string",
            "description": "The name of this campaign.",
            "example": "festival campaign"
          },
          "message": {
            "title": "message",
            "type": "string",
            "description": "The message of this campaign.",
            "example": "Hi, {name}, xxx..."
          },
          "is_schedule": {
            "title": "Is Schedule",
            "type": "boolean",
            "description": "Has true if this campaign is schedule.",
            "default": true
          },
          "sender_id": {
            "title": "sender_id",
            "type": "string",
            "description": "The id of sender in this campaign to send SMS.",
            "example": "11111111-2222-4444-3333-555555555555"
          },
          "created_time": {
            "title": "Created Time",
            "type": "string",
            "description": "The time of this item created.",
            "format": "date-time",
            "example": "2025-07-10T02:40:38.825204"
          },
          "updated_time": {
            "title": "Updated Time",
            "type": "string",
            "description": "The time of this item updated.",
            "format": "date-time",
            "example": "2025-07-10T02:40:38.825222"
          },
          "id": {
            "title": "Id",
            "type": "string",
            "description": "The entry UUID.",
            "example": "0354fb10-9e18-4923-a213-6253800f8d01"
          },
          "contact_file": {
            "title": "Index of contact file",
            "type": "string",
            "description": "The contact file index, it could be file name. path, and id combination",
            "example": "{campaiign_id}_{file_path}_{timestamp}"
          },
          "scheduled_start_time": {
            "title": "Scheduled Start Time",
            "type": "string",
            "description": "Expected excution time.",
            "format": "date-time",
            "example": "2025-07-10T02:40:57.928376"
          },
          "start_time": {
            "title": "Start Time",
            "type": "string",
            "description": "The time of this item created.",
            "format": "date-time",
            "example": "2025-07-10T02:40:57.928402"
          },
          "send_time": {
            "title": "Send Time",
            "type": "string",
            "description": "The time of this item created.",
            "format": "date-time",
            "example": "2025-07-10T02:40:57.928420"
          },
          "end_time": {
            "title": "End Time",
            "type": "string",
            "description": "The time of this item created.",
            "format": "date-time",
            "example": "2025-07-10T02:40:57.928436"
          },
          "sender": {
            "title": "Json object for sender metadata",
            "type": "object",
            "description": "The id of sender in this campaign to send SMS.",
            "example": {
              "id": "11111111-2222-4444-3333-555555555555",
              "name": "MySender",
              "phone": "+886912123456"
            }
          },
          "statistics": {
            "title": "Statistics",
            "allOf": [
              {
                "$ref": "#/components/schemas/Statistics"
              }
            ],
            "example": {
              "accepted": 0,
              "queued": 0,
              "scheduled": 0,
              "sending": 0,
              "sent": 0,
              "failed": 0,
              "delivered": 0,
              "undelivered": 0,
              "receiving": 0,
              "received": 0,
              "canceled": 0,
              "initialized": 0,
              "total": 0,
              "total_clicks": 0,
              "click_through_rate": 0
            }
          },
          "workspace_id": {
            "title": "workspace_id",
            "type": "string",
            "description": "The id of workspace_id which manage the campaign",
            "example": "0354fb10-9e18-4923-a213-6253800f8d01"
          },
          "status": {
            "title": "campaign status",
            "allOf": [
              {
                "$ref": "#/components/schemas/CampaignJobStatus"
              }
            ],
            "description": "campaign status",
            "example": "STARTED"
          }
        },
        "description": "Mega send campaign response schema."
      },
      "MegaSendLimits": {
        "title": "MegaSendLimits",
        "type": "object",
        "properties": {
          "workspace_id": {
            "title": "workspace_id",
            "type": "string",
            "description": "The id of workspace_id which manage the campaign",
            "example": "0354fb10-9e18-4923-a213-6253800f8d01"
          },
          "max": {
            "title": "Max",
            "type": "integer",
            "description": "The maximum of sending for one campaign",
            "example": 10000
          },
          "balance": {
            "title": "Balance",
            "type": "integer",
            "description": "The balance of workspace",
            "example": 100000
          }
        },
        "description": "Mega send schema of limits"
      },
      "MegaSendSender": {
        "title": "MegaSendSender",
        "required": [
          "name",
          "phone",
          "country",
          "type",
          "source",
          "messaging_service_id",
          "created_time",
          "updated_time",
          "id"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "name",
            "type": "string",
            "description": "Friendly name for the sender.",
            "example": "tech support"
          },
          "phone": {
            "title": "phone",
            "type": "string",
            "description": "The phone number.",
            "example": "+886912123456"
          },
          "country": {
            "title": "country",
            "type": "string",
            "description": "The country code is on ISO 3166 format",
            "example": "US"
          },
          "type": {
            "title": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PhoneType"
              }
            ],
            "description": "The type of the number.",
            "example": "LONG_CODE"
          },
          "source": {
            "title": "source",
            "allOf": [
              {
                "$ref": "#/components/schemas/PhoneSource"
              }
            ],
            "description": "The source of the number.",
            "example": "TWILIO"
          },
          "messaging_service_id": {
            "title": "messaging_service_id",
            "type": "string",
            "description": "Twilio messaging service id",
            "example": "MG1234abcedf567890ghijkl"
          },
          "created_time": {
            "title": "Created Time",
            "type": "string",
            "description": "The time of this item created.",
            "format": "date-time",
            "example": "2025-07-10T02:40:38.825204"
          },
          "updated_time": {
            "title": "Updated Time",
            "type": "string",
            "description": "The time of this item updated.",
            "format": "date-time",
            "example": "2025-07-10T02:40:38.825222"
          },
          "id": {
            "title": "Id",
            "type": "string",
            "description": "The entry UUID.",
            "example": "0354fb10-9e18-4923-a213-6253800f8d01"
          }
        },
        "description": "Mega send sender schema."
      },
      "Message": {
        "title": "Message",
        "required": [
          "id",
          "conversation_id",
          "is_inbound",
          "is_bot",
          "message",
          "message_time",
          "segments_number",
          "status",
          "created_time",
          "updated_time"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "id",
            "type": "string",
            "description": "The id of this message",
            "example": "11111111-2222-4444-3333-555555555555"
          },
          "conversation_id": {
            "title": "conversation_id",
            "type": "string",
            "description": "The associated conversation id for this message",
            "example": "11111111-2222-4444-3333-555555555555"
          },
          "campaign_id": {
            "title": "The id of this campaign usecase",
            "type": "string",
            "description": "The associated campaign id for this message",
            "example": "11111111-2222-4444-3333-555555555555"
          },
          "external_id": {
            "title": "external_id",
            "type": "string",
            "description": "The external id of this message",
            "example": "SM00000000000000000000000000000001"
          },
          "is_inbound": {
            "title": "is_inbound",
            "type": "boolean",
            "description": "The delivering direction of this message"
          },
          "is_bot": {
            "title": "is_bot",
            "type": "boolean",
            "description": "Has true if this message was sent from bot."
          },
          "message": {
            "title": "message",
            "type": "string",
            "description": "The message content",
            "example": "Hello"
          },
          "message_time": {
            "title": "message_time",
            "type": "string",
            "description": "The message time",
            "format": "date-time"
          },
          "segments_number": {
            "title": "segments_number",
            "type": "integer",
            "description": "Indicate how many segments the message was split into",
            "example": 1
          },
          "status": {
            "title": "status",
            "allOf": [
              {
                "$ref": "#/components/schemas/MessageStatus"
              }
            ],
            "description": "The delivering status of this message",
            "example": "queued"
          },
          "created_time": {
            "title": "created_time",
            "type": "string",
            "description": "The utc time of this item created.",
            "format": "date-time",
            "example": "2025-07-10T02:40:47.026565"
          },
          "updated_time": {
            "title": "created_time",
            "type": "string",
            "description": "The utc time of this item created.",
            "format": "date-time",
            "example": "2025-07-10T02:40:47.026581"
          },
          "sender": {
            "title": "sender",
            "allOf": [
              {
                "$ref": "#/components/schemas/User"
              }
            ],
            "description": "The sender of this message"
          },
          "whatsapp_message_status": {
            "title": "whatsapp_message_status",
            "allOf": [
              {
                "$ref": "#/components/schemas/WhatsAppMessageStatus"
              }
            ],
            "description": "The whatsapp message status"
          }
        },
        "description": "Message schema."
      },
      "MessageAttachFile": {
        "title": "MessageAttachFile",
        "required": [
          "url",
          "mime",
          "is_ready"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "id",
            "type": "string",
            "description": "The id of this file.",
            "example": "11111111-2222-4444-3333-555555555555"
          },
          "url": {
            "title": "url",
            "type": "string",
            "description": "The URL of this file.",
            "example": "https://seax-bulksms.s3.amazonaws.com/media/myimage.jpg"
          },
          "mime": {
            "title": "mime",
            "type": "string",
            "description": "The MIME type of this file.",
            "example": "image/jpeg"
          },
          "is_ready": {
            "title": "is_ready",
            "type": "boolean",
            "description": "The ready status of this file.",
            "example": true
          },
          "original_name": {
            "title": "original_name",
            "type": "string",
            "description": "The original name of this file.",
            "example": "image.jpg"
          },
          "thumbnail_url": {
            "title": "thumbnail_url",
            "type": "string",
            "description": "The thumbnail url of this file.",
            "example": "image_thumbnail.jpg"
          }
        },
        "description": "MessageAttachFile."
      },
      "MessageFilterOptions": {
        "title": "MessageFilterOptions",
        "enum": [
          "HAS_MESSAGES",
          "HAS_INBOUND_MESSAGES",
          "HAS_OUTBOUND_MESSAGES",
          "LATEST_REPLIED_IS_INBOUND_MESSAGE"
        ],
        "type": "string",
        "description": "Message filter options"
      },
      "MessageHSMChannel": {
        "title": "MessageHSMChannel",
        "enum": [
          "whatsapp"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "MessageHSMType": {
        "title": "MessageHSMType",
        "enum": [
          "media"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "MessagePreview": {
        "title": "MessagePreview",
        "required": [
          "message",
          "parameters"
        ],
        "type": "object",
        "properties": {
          "header": {
            "title": "header",
            "type": "string",
            "description": "The header with placeholder filled.",
            "example": "Hi, {name}..."
          },
          "message": {
            "title": "message",
            "type": "string",
            "description": "The message with placeholder filled.",
            "example": "Hi, {name}..."
          },
          "parameters": {
            "title": "parameters",
            "type": "object",
            "description": "The parameters of the contact.",
            "example": {
              "name": "Tom",
              "phone": "+88612123456"
            }
          }
        },
        "description": "message preview schema"
      },
      "MessagePreviews": {
        "title": "MessagePreviews",
        "type": "object",
        "properties": {
          "previews": {
            "title": "Preview message list",
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "Preview message list",
            "default": [],
            "example": [
              {
                "message": "test 0217",
                "parameters": {
                  "phone": "+886937245991"
                }
              }
            ]
          },
          "workspace_id": {
            "title": "workspace_id",
            "type": "string",
            "description": "The id of workspace_id which manage the campaign",
            "example": "0354fb10-9e18-4923-a213-6253800f8d01"
          }
        },
        "description": "Mega send schema of previews"
      },
      "MessageStatus": {
        "title": "MessageStatus",
        "enum": [
          "accepted",
          "queued",
          "scheduled",
          "sending",
          "sent",
          "failed",
          "delivered",
          "undelivered",
          "receiving",
          "received",
          "canceled",
          "initialized"
        ],
        "type": "string",
        "description": "Status type of message."
      },
      "MessageTemplate": {
        "title": "MessageTemplate",
        "required": [
          "template",
          "name",
          "id",
          "workspace_id",
          "created_time",
          "updated_time"
        ],
        "type": "object",
        "properties": {
          "template": {
            "title": "template",
            "type": "string",
            "description": "The template content of message template resource",
            "example": "Hi {name}, How's going?"
          },
          "name": {
            "title": "name",
            "type": "string",
            "description": "The name of message",
            "example": "Greeting1"
          },
          "header_format": {
            "title": "header_format",
            "allOf": [
              {
                "$ref": "#/components/schemas/WhatsAppBusinessPlatformTemplateComponentFormat"
              }
            ],
            "description": "The header format of message template",
            "example": "TEXT"
          },
          "header_template": {
            "title": "header_template",
            "type": "string",
            "description": "The header template of message template",
            "example": "Hi pike, how's going?"
          },
          "id": {
            "title": "id",
            "type": "string",
            "description": "The id of this contact",
            "example": "11111111-2222-4444-3333-555555555555"
          },
          "workspace_id": {
            "title": "workspace_id",
            "type": "string",
            "description": "The associated workspace id for this contact",
            "example": "11111111-2222-4444-3333-555555555555"
          },
          "created_time": {
            "title": "created_time",
            "type": "string",
            "description": "The time of this item created.",
            "format": "date-time",
            "example": "2025-07-10T02:40:58.926332"
          },
          "updated_time": {
            "title": "updated_time",
            "type": "string",
            "description": "The time of this item updated.",
            "format": "date-time",
            "example": "2025-07-10T02:40:58.926343"
          }
        },
        "description": "Message Template schema"
      },
      "MessageWithMediaUrls": {
        "title": "MessageWithMediaUrls",
        "required": [
          "id",
          "conversation_id",
          "is_inbound",
          "is_bot",
          "message",
          "message_time",
          "segments_number",
          "status",
          "created_time",
          "updated_time"
        ],
        "type": "object",
        "properties": {
          "click_events": {
            "title": "click_events",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClickEventInfo"
            },
            "description": "The click_events of this message"
          },
          "media_urls": {
            "title": "media_urls",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The media urls of this campaign.",
            "example": [
              "https://seax-bulksms.s3.amazonaws.com/media/myimage.jpg"
            ]
          },
          "id": {
            "title": "id",
            "type": "string",
            "description": "The id of this message",
            "example": "11111111-2222-4444-3333-555555555555"
          },
          "conversation_id": {
            "title": "conversation_id",
            "type": "string",
            "description": "The associated conversation id for this message",
            "example": "11111111-2222-4444-3333-555555555555"
          },
          "campaign_id": {
            "title": "The id of this campaign usecase",
            "type": "string",
            "description": "The associated campaign id for this message",
            "example": "11111111-2222-4444-3333-555555555555"
          },
          "external_id": {
            "title": "external_id",
            "type": "string",
            "description": "The external id of this message",
            "example": "SM00000000000000000000000000000001"
          },
          "is_inbound": {
            "title": "is_inbound",
            "type": "boolean",
            "description": "The delivering direction of this message"
          },
          "is_bot": {
            "title": "is_bot",
            "type": "boolean",
            "description": "Has true if this message was sent from bot."
          },
          "message": {
            "title": "message",
            "type": "string",
            "description": "The message content",
            "example": "Hello"
          },
          "message_time": {
            "title": "message_time",
            "type": "string",
            "description": "The message time",
            "format": "date-time"
          },
          "segments_number": {
            "title": "segments_number",
            "type": "integer",
            "description": "Indicate how many segments the message was split into",
            "example": 1
          },
          "status": {
            "title": "status",
            "allOf": [
              {
                "$ref": "#/components/schemas/MessageStatus"
              }
            ],
            "description": "The delivering status of this message",
            "example": "queued"
          },
          "created_time": {
            "title": "created_time",
            "type": "string",
            "description": "The utc time of this item created.",
            "format": "date-time",
            "example": "2025-07-10T02:40:47.026565"
          },
          "updated_time": {
            "title": "created_time",
            "type": "string",
            "description": "The utc time of this item created.",
            "format": "date-time",
            "example": "2025-07-10T02:40:47.026581"
          },
          "sender": {
            "title": "sender",
            "allOf": [
              {
                "$ref": "#/components/schemas/User"
              }
            ],
            "description": "The sender of this message"
          },
          "whatsapp_message_status": {
            "title": "whatsapp_message_status",
            "allOf": [
              {
                "$ref": "#/components/schemas/WhatsAppMessageStatus"
              }
            ],
            "description": "The whatsapp message status"
          },
          "raw_data": {
            "title": "raw_data",
            "type": "string",
            "description": "The raw_data from this message id."
          },
          "attach_files": {
            "title": "attach_files",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MessageAttachFile"
            },
            "description": "The attach files."
          }
        },
        "description": "MessageWithMediaUrls schema."
      },
      "MessagingService": {
        "title": "MessagingService",
        "required": [
          "id",
          "name",
          "us_app_to_person_registered"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "The id of this messaging service",
            "type": "string",
            "description": "The id of this messaging service",
            "example": "11111111-2222-4444-3333-555555555555"
          },
          "name": {
            "title": "The name of this messaging service",
            "type": "string",
            "description": "The name of this messaging service",
            "example": "test messaging service"
          },
          "us_app_to_person_registered": {
            "title": "The name of this messaging service",
            "type": "boolean",
            "description": "The name of this messaging service",
            "example": false
          }
        },
        "description": "MessagingService schema"
      },
      "MessagingServiceDetail": {
        "title": "MessagingServiceDetail",
        "required": [
          "id",
          "name",
          "us_app_to_person_registered",
          "phones",
          "campaign_usecases"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "The id of this messaging service",
            "type": "string",
            "description": "The id of this messaging service",
            "example": "11111111-2222-4444-3333-555555555555"
          },
          "name": {
            "title": "The name of this messaging service",
            "type": "string",
            "description": "The name of this messaging service",
            "example": "test messaging service"
          },
          "us_app_to_person_registered": {
            "title": "The name of this messaging service",
            "type": "boolean",
            "description": "The name of this messaging service",
            "example": false
          },
          "phones": {
            "title": "The id of this messaging service",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhoneDetail"
            },
            "description": "The id of this messaging service"
          },
          "campaign_usecases": {
            "title": "The id of this messaging service",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CampaignUseCase"
            },
            "description": "The id of this messaging service"
          }
        },
        "description": "MessagingServiceDetail schema"
      },
      "NewCampaign": {
        "title": "NewCampaign",
        "required": [
          "name",
          "type",
          "phone_ids",
          "message_service_id",
          "mode",
          "stage"
        ],
        "type": "object",
        "properties": {
          "media_urls": {
            "title": "media_urls",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The media urls of this campaign.",
            "example": [
              "https://seax-bulksms.s3.amazonaws.com/media/myimage.jpg"
            ]
          },
          "start_time": {
            "title": "Start Time",
            "type": "string",
            "description": "The timestamp when this campaign started.",
            "format": "date-time",
            "example": "2025-07-10T02:40:47.416137"
          },
          "end_time": {
            "title": "End Time",
            "type": "string",
            "description": "The timestamp when this campaign ended.",
            "format": "date-time",
            "example": "2025-07-10T02:40:47.416155"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CampaignJobStatus"
              }
            ],
            "description": "Campaign status.",
            "example": "PENDING"
          },
          "name": {
            "title": "name",
            "type": "string",
            "description": "The name of this campaign.",
            "example": "festival campaign"
          },
          "draft_name": {
            "title": "draft_name",
            "type": "string",
            "description": "The draft name of this campaign.",
            "example": "festival campaign draft"
          },
          "header_message": {
            "title": "header_message",
            "type": "string",
            "description": "The header_message of this campaign.",
            "example": "Hi, {name}, xxx..."
          },
          "message": {
            "title": "message",
            "type": "string",
            "description": "The message of this campaign.",
            "example": "Hi, {name}, xxx..."
          },
          "ai_agent_conversation_config_id": {
            "title": "Ai Agent Conversation Config Id",
            "type": "string",
            "description": "AI agent associated conversation config ID.",
            "example": "0354fb10-9e18-4923-a213-6253800f8d01"
          },
          "type": {
            "title": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/CampaignType"
              }
            ],
            "description": "The type of this campaign.",
            "example": "SMS"
          },
          "is_timezone_aware": {
            "title": "is_timezone_aware",
            "type": "boolean",
            "description": "Has true if this campaign is timezone aware.",
            "default": false
          },
          "is_schedule": {
            "title": "Is Schedule",
            "type": "boolean",
            "description": "Has true if this campaign is schedule.",
            "default": false
          },
          "contact_file_url": {
            "title": "contact_file_url",
            "maxLength": 2083,
            "minLength": 1,
            "type": "string",
            "description": "The URL of the contact file contains contacts for this campaign.",
            "format": "uri"
          },
          "timezone": {
            "title": "timezone",
            "type": "string",
            "description": "The timezone of this campaign.",
            "example": "UTC"
          },
          "attach_files": {
            "title": "attach_files",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CampaignAttachFile"
            },
            "description": "The attach files."
          },
          "all_contact_label_ids": {
            "title": "All Contact Label Ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Search contacts that must match all contact label IDs.",
            "example": [
              "0354fb10-9e18-4923-a213-6253800f8d01"
            ]
          },
          "any_contact_label_ids": {
            "title": "Any Contact Label Ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Search contacts that match any contact label IDs.",
            "example": [
              "0354fb10-9e18-4923-a213-6253800f8d01"
            ]
          },
          "exclude_contact_ids": {
            "title": "Exclude Contact Ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Exclude contacts that match any contact IDs.",
            "example": [
              "0354fb10-9e18-4923-a213-6253800f8d01"
            ]
          },
          "addition_contact_ids": {
            "title": "Addition Contact Ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include contacts that match any contact IDs.",
            "example": [
              "0354fb10-9e18-4923-a213-6253800f8d01"
            ]
          },
          "exclude_any_contact_label_ids": {
            "title": "Exclude Any Contact Label Ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Exclude contacts that match any contact label IDs.",
            "example": [
              "11111111-2222-4444-3333-555555555555",
              "11111111-2222-4444-3333-666666666666"
            ]
          },
          "exclude_all_contact_label_ids": {
            "title": "Exclude All Contact Label Ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Exclude contacts that must match all contact label IDs.",
            "example": [
              "11111111-2222-4444-3333-555555555555",
              "11111111-2222-4444-3333-666666666666"
            ]
          },
          "keyword": {
            "title": "Keyword",
            "type": "string",
            "description": "Search contacts that any name or phone match the keyword.",
            "example": "+18111222333"
          },
          "whatsapp_phone_only": {
            "title": "Whatsapp Phone Only",
            "type": "boolean",
            "description": "Search only contacts that have whatsapp number.",
            "default": false,
            "example": true
          },
          "header_format": {
            "title": "header_format",
            "allOf": [
              {
                "$ref": "#/components/schemas/WhatsAppBusinessPlatformTemplateComponentFormat"
              }
            ],
            "description": "The header_format of this campaign.",
            "example": "TEXT"
          },
          "attach_contact_label_ids": {
            "title": "attach_contact_label_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The contact label ids would be attached to all contacts in this campaign.",
            "example": [
              "11111111-2222-4444-3333-555555555555"
            ]
          },
          "phone_ids": {
            "title": "phone_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The id of phones in this campaign to send SMS.",
            "example": [
              "11111111-2222-4444-3333-555555555555"
            ]
          },
          "message_service_id": {
            "title": "message_service_id",
            "type": "string",
            "description": "The id of message service from Twilio.",
            "example": "MG10000000000000000000000000000000"
          },
          "enable_link_shortening": {
            "title": "enable_link_shortening",
            "type": "boolean",
            "description": "Whether the scheduled campaign enable link shortening.",
            "default": false,
            "example": true
          },
          "overwrite_phone_recipient": {
            "title": "Overwrite Phone Recipient",
            "allOf": [
              {
                "$ref": "#/components/schemas/CreateOrUpdatePhoneRecipient"
              }
            ],
            "description": "Overwrite the recipients of given phones for this campaign."
          },
          "contact_field_ids": {
            "title": "Contact Field Ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The IDs of the contact fields used by this campaign"
          },
          "mode": {
            "title": "mode",
            "allOf": [
              {
                "$ref": "#/components/schemas/CampaignMode"
              }
            ],
            "description": "The mode of this campaign.",
            "example": "WEB"
          },
          "stage": {
            "title": "stage",
            "allOf": [
              {
                "$ref": "#/components/schemas/CampaignStage"
              }
            ],
            "description": "The stage of this campaign.",
            "example": "INSTANCE"
          },
          "relative_time_config": {
            "title": "Relative Time Config",
            "allOf": [
              {
                "$ref": "#/components/schemas/CreateRelativeTimeConfig"
              }
            ],
            "description": "The relative time config of this campaign"
          },
          "service_provider_campaign_data": {
            "title": "Service Provider Campaign Data",
            "allOf": [
              {
                "$ref": "#/components/schemas/ServiceProviderCampaignData"
              }
            ],
            "description": "The service provider campaign data of this campaign"
          }
        },
        "description": "NewCampaign schema."
      },
      "NewContact": {
        "title": "NewContact",
        "required": [
          "name",
          "phone"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "name",
            "type": "string",
            "description": "The name of this contact",
            "example": "TomHanks"
          },
          "phone": {
            "title": "phone",
            "type": "string",
            "description": "The phone of this contact",
            "example": "+12345678900"
          },
          "note": {
            "title": "note",
            "type": "string",
            "description": "The note of this contact",
            "default": "",
            "example": "New contact"
          },
          "whatsapp_phone": {
            "title": "whatsapp_phone",
            "type": "string",
            "description": "The whatsapp phone of this contact",
            "example": "+12345678900"
          },
          "contact_field_data": {
            "title": "contact_field_data",
            "type": "object",
            "description": "The contact field data",
            "example": {
              "field1": 1
            }
          },
          "contact_label_ids": {
            "title": "contact_label_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The contact_label ids of this contact.",
            "example": [
              "11111111-2222-4444-3333-555555555555"
            ]
          }
        },
        "description": "Create Contact schema."
      },
      "NewContactLabel": {
        "title": "NewContactLabel",
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "name",
            "type": "string",
            "description": "The name of contact label.",
            "example": "test"
          },
          "color": {
            "title": "color",
            "type": "string",
            "description": "The color of contact label.",
            "default": "#19b9c3",
            "example": "#19b9c3"
          },
          "description": {
            "title": "description",
            "type": "string",
            "description": "The description of contact label.",
            "default": "",
            "example": "This label is for vip customer"
          }
        },
        "description": "Create ContactLabel schema."
      },
      "NewConversationLabel": {
        "title": "NewConversationLabel",
        "required": [
          "name",
          "color",
          "description"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "name",
            "type": "string",
            "description": "The conversation label name.",
            "example": "new"
          },
          "color": {
            "title": "color",
            "type": "string",
            "description": "The color of the label.",
            "example": "#000000"
          },
          "description": {
            "title": "description",
            "type": "string",
            "description": "The description of contact label.",
            "example": "This label is for vip customer"
          }
        },
        "description": "Create ConversationLabel schema with fields that need to return to client."
      },
      "NewKeyword": {
        "title": "NewKeyword",
        "required": [
          "name",
          "reply"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "name",
            "type": "string",
            "description": "The name of keyword.",
            "example": "want"
          },
          "reply": {
            "title": "The auto-reply message",
            "type": "string",
            "description": "The auto-reply message",
            "example": "OK, we got it."
          },
          "enabled_auto_reply": {
            "title": "indicate whether this keyword is enabled auto replying feature",
            "type": "boolean",
            "description": "indicate whether this keyword is enabled",
            "default": true,
            "example": true
          },
          "enabled_contact_label": {
            "title": "indicate whether this keyword is enabled contact labeling feature",
            "type": "boolean",
            "description": "indicate whether this keyword is enabled  contact labeling feature",
            "default": true,
            "example": true
          },
          "keep_dnc_label_only": {
            "title": "Remove all other labels but keep DNC",
            "type": "boolean",
            "description": "Remove all other labels but keep DNC",
            "default": false,
            "example": false
          },
          "contact_label_ids": {
            "title": "contact_label_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The contact_label ids of this keyword.",
            "example": [
              "11111111-2222-4444-3333-555555555555"
            ]
          }
        },
        "description": "Create Keyword schema."
      },
      "NewMessageTemplate": {
        "title": "NewMessageTemplate",
        "required": [
          "template",
          "name"
        ],
        "type": "object",
        "properties": {
          "template": {
            "title": "template",
            "type": "string",
            "description": "The template content of message template resource",
            "example": "Hi {name}, How's going?"
          },
          "name": {
            "title": "name",
            "type": "string",
            "description": "The name of message",
            "example": "Greeting1"
          },
          "header_format": {
            "title": "header_format",
            "allOf": [
              {
                "$ref": "#/components/schemas/WhatsAppBusinessPlatformTemplateComponentFormat"
              }
            ],
            "description": "The header format of message template",
            "example": "TEXT"
          },
          "header_template": {
            "title": "header_template",
            "type": "string",
            "description": "The header template of message template",
            "example": "Hi pike, how's going?"
          }
        },
        "description": "Base Message Template schema"
      },
      "NewPhone": {
        "title": "NewPhone",
        "required": [
          "name",
          "phone",
          "country",
          "enabled_generic_reply",
          "enabled_dnc_reply",
          "type",
          "source"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "name",
            "type": "string",
            "description": "The name of phone number.",
            "example": "tech support"
          },
          "enabled": {
            "title": "enabled",
            "type": "boolean",
            "description": "Indicate whether this phone is enabled.",
            "default": true
          },
          "phone": {
            "title": "phone",
            "type": "string",
            "description": "The phone number.",
            "example": "+886912123456"
          },
          "country": {
            "title": "country",
            "type": "string",
            "description": "The country code is on ISO 3166 format",
            "example": "US"
          },
          "whatsapp_device_id": {
            "title": "whatsapp_device_id",
            "type": "string",
            "description": "The whatsapp_device_id of phone number",
            "example": "1234567890:98@s.whatsapp.net"
          },
          "whatsapp_status": {
            "title": "whatsapp_status",
            "allOf": [
              {
                "$ref": "#/components/schemas/WhatsAppStatus"
              }
            ],
            "description": "The whatsapp_status of phone number",
            "example": "CONNECTING"
          },
          "generic_reply_message": {
            "title": "generic_reply_message",
            "type": "string",
            "description": "The default reply message when receive message from client if doesn't match any keyword",
            "default": "",
            "example": "Welcome! If you want to subscribe daily report, please reply 'DAILY'."
          },
          "dnc_reply_message": {
            "title": "dnc_reply_message",
            "type": "string",
            "description": "The dnc message when receive message from client",
            "default": "",
            "example": "Ok, we won't send you any other message."
          },
          "enabled_generic_reply": {
            "title": "enabled_generic_reply",
            "type": "boolean",
            "description": "Whether the generic reply message enabled",
            "example": false
          },
          "enabled_dnc_reply": {
            "title": "enabled_dnc_reply",
            "type": "boolean",
            "description": "Whether the dnc reply message enabled",
            "example": false
          },
          "type": {
            "title": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PhoneType"
              }
            ],
            "description": "The type of this phone.",
            "example": "LOCAL"
          },
          "source": {
            "title": "source",
            "allOf": [
              {
                "$ref": "#/components/schemas/PhoneSource"
              }
            ],
            "description": "The source of this phone.",
            "example": "TWILIO"
          },
          "phone_capability": {
            "title": "phone_capability",
            "allOf": [
              {
                "$ref": "#/components/schemas/PhoneCapability"
              }
            ],
            "description": "Capability of this phone."
          },
          "is_default": {
            "title": "is_default",
            "type": "boolean",
            "description": "Indicate whether the phone is the default phone of workspace.",
            "default": false,
            "example": false
          },
          "enabled_recipient": {
            "title": "enabled_recipient",
            "type": "boolean",
            "description": "enabled_recipient",
            "default": false,
            "example": false
          },
          "whatsapp_business_account_phone_id": {
            "title": "whatsapp_business_account_phone_id",
            "type": "string",
            "description": "The whatsapp_business_account_phone_id if phone is WHATSAPP type.",
            "example": "555555555555"
          },
          "dialpad_available": {
            "title": "dialpad_available",
            "type": "boolean",
            "description": "Indicate whether the phone is dialpad available.",
            "default": false,
            "example": false
          },
          "call_recipient": {
            "title": "call_recipient",
            "allOf": [
              {
                "$ref": "#/components/schemas/CreateOrUpdatePhoneRecipient"
              }
            ],
            "description": "The call recipient of this phone."
          },
          "sms_recipient": {
            "title": "sms_recipient",
            "allOf": [
              {
                "$ref": "#/components/schemas/CreateOrUpdatePhoneRecipient"
              }
            ],
            "description": "The sms recipient of this phone."
          },
          "wabp_recipient": {
            "title": "wabp_recipient",
            "allOf": [
              {
                "$ref": "#/components/schemas/CreateOrUpdatePhoneRecipient"
              }
            ],
            "description": "The wabp recipient of this phone."
          },
          "byoc_trunk": {
            "title": "byoc_trunk",
            "allOf": [
              {
                "$ref": "#/components/schemas/CreateBYOCTrunk"
              }
            ],
            "description": "The BYOC trunk configuration."
          },
          "verified_caller_id": {
            "title": "verified_caller_id",
            "type": "string",
            "description": "The associated verified caller id of phone number",
            "example": "40a054cb-1bce-44f0-8c3e-c2443d56f39d"
          },
          "create_phone_in_twilio": {
            "title": "create_phone_in_twilio",
            "type": "boolean",
            "description": "Indicate whether to create phone in twilio.",
            "default": true
          }
        },
        "description": "Phone schema with fields that need to return to client."
      },
      "OperateCampaignHSMWhatsAppBusiness": {
        "title": "OperateCampaignHSMWhatsAppBusiness",
        "required": [
          "workspace_id",
          "flow_id"
        ],
        "type": "object",
        "properties": {
          "workspace_id": {
            "title": "workspace_id",
            "type": "string",
            "description": "The workspace id."
          },
          "flow_id": {
            "title": "flow_id",
            "type": "string",
            "description": "The flow id."
          }
        }
      },
      "PhoneCapability": {
        "title": "PhoneCapability",
        "type": "object",
        "properties": {
          "sms": {
            "title": "Sms",
            "type": "boolean",
            "description": "Indicate whether this phone has capability of sms.",
            "default": false
          },
          "mms": {
            "title": "Mms",
            "type": "boolean",
            "description": "Indicate whether this phone has capability of mms.",
            "default": false
          },
          "voice": {
            "title": "Voice",
            "type": "boolean",
            "description": "Indicate whether this phone has capability of voice.",
            "default": false
          },
          "fax": {
            "title": "Fax",
            "type": "boolean",
            "description": "Indicate whether this phone has capability of fax.",
            "default": false
          },
          "whatsapp": {
            "title": "Whatsapp",
            "type": "boolean",
            "description": "Indicate whether this phone has capability of whatsapp related service.",
            "default": false
          },
          "whatsapp_business_platform": {
            "title": "Whatsapp Business Platform",
            "type": "boolean",
            "description": "Indicate whether this phone has capability of whatsapp business platform.",
            "default": false
          }
        },
        "description": "Phone capability schema."
      },
      "PhoneDetail": {
        "title": "PhoneDetail",
        "required": [
          "name",
          "enabled",
          "phone",
          "country",
          "enabled_generic_reply",
          "enabled_dnc_reply",
          "type",
          "source",
          "created_time",
          "updated_time",
          "id",
          "users",
          "keywords"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "name",
            "type": "string",
            "description": "The name of phone number.",
            "example": "tech support"
          },
          "enabled": {
            "title": "enabled",
            "type": "boolean",
            "description": "Indicate whether this phone is enabled."
          },
          "phone": {
            "title": "phone",
            "type": "string",
            "description": "The phone number.",
            "example": "+886912123456"
          },
          "country": {
            "title": "country",
            "type": "string",
            "description": "The country code is on ISO 3166 format",
            "example": "US"
          },
          "whatsapp_device_id": {
            "title": "whatsapp_device_id",
            "type": "string",
            "description": "The whatsapp_device_id of phone number",
            "example": "1234567890:98@s.whatsapp.net"
          },
          "whatsapp_status": {
            "title": "whatsapp_status",
            "allOf": [
              {
                "$ref": "#/components/schemas/WhatsAppStatus"
              }
            ],
            "description": "The whatsapp_status of phone number",
            "example": "CONNECTING"
          },
          "generic_reply_message": {
            "title": "generic_reply_message",
            "type": "string",
            "description": "The default reply message when receive message from client if doesn't match any keyword",
            "default": "",
            "example": "Welcome! If you want to subscribe daily report, please reply 'DAILY'."
          },
          "dnc_reply_message": {
            "title": "dnc_reply_message",
            "type": "string",
            "description": "The dnc message when receive message from client",
            "default": "",
            "example": "Ok, we won't send you any other message."
          },
          "enabled_generic_reply": {
            "title": "enabled_generic_reply",
            "type": "boolean",
            "description": "Whether the generic reply message enabled",
            "example": false
          },
          "enabled_dnc_reply": {
            "title": "enabled_dnc_reply",
            "type": "boolean",
            "description": "Whether the dnc reply message enabled",
            "example": false
          },
          "type": {
            "title": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PhoneType"
              }
            ],
            "description": "The type of this phone.",
            "example": "LOCAL"
          },
          "source": {
            "title": "source",
            "allOf": [
              {
                "$ref": "#/components/schemas/PhoneSource"
              }
            ],
            "description": "The source of this phone.",
            "example": "TWILIO"
          },
          "phone_capability": {
            "title": "phone_capability",
            "allOf": [
              {
                "$ref": "#/components/schemas/PhoneCapability"
              }
            ],
            "description": "Capability of this phone."
          },
          "is_default": {
            "title": "is_default",
            "type": "boolean",
            "description": "Indicate whether the phone is the default phone of workspace.",
            "default": false,
            "example": false
          },
          "enabled_recipient": {
            "title": "enabled_recipient",
            "type": "boolean",
            "description": "enabled_recipient",
            "default": false,
            "example": false
          },
          "whatsapp_business_account_phone_id": {
            "title": "whatsapp_business_account_phone_id",
            "type": "string",
            "description": "The whatsapp_business_account_phone_id if phone is WHATSAPP type.",
            "example": "555555555555"
          },
          "dialpad_available": {
            "title": "dialpad_available",
            "type": "boolean",
            "description": "Indicate whether the phone is dialpad available.",
            "default": false,
            "example": false
          },
          "created_time": {
            "title": "Created Time",
            "type": "string",
            "description": "The time of this item created.",
            "format": "date-time",
            "example": "2025-07-10T02:40:38.825204"
          },
          "updated_time": {
            "title": "Updated Time",
            "type": "string",
            "description": "The time of this item updated.",
            "format": "date-time",
            "example": "2025-07-10T02:40:38.825222"
          },
          "id": {
            "title": "Id",
            "type": "string",
            "description": "The entry UUID.",
            "example": "0354fb10-9e18-4923-a213-6253800f8d01"
          },
          "call_recipient": {
            "title": "call_recipient",
            "allOf": [
              {
                "$ref": "#/components/schemas/PhoneRecipient"
              }
            ],
            "description": "The call recipient of this phone."
          },
          "sms_recipient": {
            "title": "sms_recipient",
            "allOf": [
              {
                "$ref": "#/components/schemas/PhoneRecipient"
              }
            ],
            "description": "The sms recipient of this phone."
          },
          "wabp_recipient": {
            "title": "wabp_recipient",
            "allOf": [
              {
                "$ref": "#/components/schemas/PhoneRecipient"
              }
            ],
            "description": "The sms recipient of this phone."
          },
          "verified_caller": {
            "title": "verified_caller",
            "allOf": [
              {
                "$ref": "#/components/schemas/VerifiedCaller"
              }
            ],
            "description": "The associated verified caller."
          },
          "byoc_trunk": {
            "title": "byoc_trunk",
            "allOf": [
              {
                "$ref": "#/components/schemas/BYOCTrunk"
              }
            ],
            "description": "The BYOC trunk configuration."
          },
          "users": {
            "title": "users",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            },
            "description": "The users associate with this phone."
          },
          "keywords": {
            "title": "keywords",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Keyword"
            },
            "description": "keywords of this phone."
          },
          "unread_count": {
            "title": "unread_count",
            "type": "integer",
            "description": "unread counts of this phone.",
            "default": 0
          }
        },
        "description": "PhoneDetails schema with foreign columns."
      },
      "PhoneMatch": {
        "title": "PhoneMatch",
        "enum": [
          "START_WITH",
          "END_WITH",
          "ANY_PART"
        ],
        "type": "string",
        "description": "PhoneMatch."
      },
      "PhoneRecipient": {
        "title": "PhoneRecipient",
        "required": [
          "id",
          "type",
          "receiver"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "description": "The entry UUID.",
            "example": "0354fb10-9e18-4923-a213-6253800f8d01"
          },
          "type": {
            "title": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PhoneRecipientType"
              }
            ],
            "description": "The type of the phone recipient."
          },
          "receiver": {
            "title": "receiver",
            "type": "string",
            "description": "The receiver of the phone recipient.",
            "example": "+1234567890"
          }
        },
        "description": "PhoneRecipient schema."
      },
      "PhoneRecipientType": {
        "title": "PhoneRecipientType",
        "enum": [
          "PHONE_NUMBER",
          "AI_AGENT",
          "HUMAN_AGENT"
        ],
        "type": "string",
        "description": "PhoneRecipientType."
      },
      "PhoneRevision": {
        "title": "PhoneRevision",
        "required": [
          "name",
          "enabled",
          "phone",
          "country",
          "enabled_generic_reply",
          "enabled_dnc_reply",
          "type",
          "source",
          "created_time",
          "updated_time",
          "id"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "name",
            "type": "string",
            "description": "The name of phone number.",
            "example": "tech support"
          },
          "enabled": {
            "title": "enabled",
            "type": "boolean",
            "description": "Indicate whether this phone is enabled."
          },
          "phone": {
            "title": "phone",
            "type": "string",
            "description": "The phone number.",
            "example": "+886912123456"
          },
          "country": {
            "title": "country",
            "type": "string",
            "description": "The country code is on ISO 3166 format",
            "example": "US"
          },
          "whatsapp_device_id": {
            "title": "whatsapp_device_id",
            "type": "string",
            "description": "The whatsapp_device_id of phone number",
            "example": "1234567890:98@s.whatsapp.net"
          },
          "whatsapp_status": {
            "title": "whatsapp_status",
            "allOf": [
              {
                "$ref": "#/components/schemas/WhatsAppStatus"
              }
            ],
            "description": "The whatsapp_status of phone number",
            "example": "CONNECTING"
          },
          "generic_reply_message": {
            "title": "generic_reply_message",
            "type": "string",
            "description": "The default reply message when receive message from client if doesn't match any keyword",
            "default": "",
            "example": "Welcome! If you want to subscribe daily report, please reply 'DAILY'."
          },
          "dnc_reply_message": {
            "title": "dnc_reply_message",
            "type": "string",
            "description": "The dnc message when receive message from client",
            "default": "",
            "example": "Ok, we won't send you any other message."
          },
          "enabled_generic_reply": {
            "title": "enabled_generic_reply",
            "type": "boolean",
            "description": "Whether the generic reply message enabled",
            "example": false
          },
          "enabled_dnc_reply": {
            "title": "enabled_dnc_reply",
            "type": "boolean",
            "description": "Whether the dnc reply message enabled",
            "example": false
          },
          "type": {
            "title": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PhoneType"
              }
            ],
            "description": "The type of this phone.",
            "example": "LOCAL"
          },
          "source": {
            "title": "source",
            "allOf": [
              {
                "$ref": "#/components/schemas/PhoneSource"
              }
            ],
            "description": "The source of this phone.",
            "example": "TWILIO"
          },
          "phone_capability": {
            "title": "phone_capability",
            "allOf": [
              {
                "$ref": "#/components/schemas/PhoneCapability"
              }
            ],
            "description": "Capability of this phone."
          },
          "is_default": {
            "title": "is_default",
            "type": "boolean",
            "description": "Indicate whether the phone is the default phone of workspace.",
            "default": false,
            "example": false
          },
          "enabled_recipient": {
            "title": "enabled_recipient",
            "type": "boolean",
            "description": "enabled_recipient",
            "default": false,
            "example": false
          },
          "whatsapp_business_account_phone_id": {
            "title": "whatsapp_business_account_phone_id",
            "type": "string",
            "description": "The whatsapp_business_account_phone_id if phone is WHATSAPP type.",
            "example": "555555555555"
          },
          "dialpad_available": {
            "title": "dialpad_available",
            "type": "boolean",
            "description": "Indicate whether the phone is dialpad available.",
            "default": false,
            "example": false
          },
          "created_time": {
            "title": "Created Time",
            "type": "string",
            "description": "The time of this item created.",
            "format": "date-time",
            "example": "2025-07-10T02:40:38.825204"
          },
          "updated_time": {
            "title": "Updated Time",
            "type": "string",
            "description": "The time of this item updated.",
            "format": "date-time",
            "example": "2025-07-10T02:40:38.825222"
          },
          "id": {
            "title": "Id",
            "type": "string",
            "description": "The entry UUID.",
            "example": "0354fb10-9e18-4923-a213-6253800f8d01"
          },
          "call_recipient": {
            "title": "call_recipient",
            "allOf": [
              {
                "$ref": "#/components/schemas/PhoneRecipient"
              }
            ],
            "description": "The call recipient of this phone."
          },
          "sms_recipient": {
            "title": "sms_recipient",
            "allOf": [
              {
                "$ref": "#/components/schemas/PhoneRecipient"
              }
            ],
            "description": "The sms recipient of this phone."
          },
          "wabp_recipient": {
            "title": "wabp_recipient",
            "allOf": [
              {
                "$ref": "#/components/schemas/PhoneRecipient"
              }
            ],
            "description": "The sms recipient of this phone."
          },
          "verified_caller": {
            "title": "verified_caller",
            "allOf": [
              {
                "$ref": "#/components/schemas/VerifiedCaller"
              }
            ],
            "description": "The associated verified caller."
          },
          "byoc_trunk": {
            "title": "byoc_trunk",
            "allOf": [
              {
                "$ref": "#/components/schemas/BYOCTrunk"
              }
            ],
            "description": "The BYOC trunk configuration."
          },
          "updated_call_recipient_by": {
            "title": "updated_call_recipient_by",
            "type": "string",
            "description": "Indicate who updated the phone recipient for call.",
            "example": "40a054cb-1bce-44f0-8c3e-c2443d56f39d"
          },
          "updated_sms_recipient_by": {
            "title": "sms_recipient_id",
            "type": "string",
            "description": "Indicate who updated the phone recipient for SMS.",
            "example": "40a054cb-1bce-44f0-8c3e-c2443d56f39d"
          },
          "updated_wabp_recipient_by": {
            "title": "wabp_recipient_id",
            "type": "string",
            "description": "Indicate who updated the phone recipient for SMS.",
            "example": "40a054cb-1bce-44f0-8c3e-c2443d56f39d"
          }
        },
        "description": "PhoneRevision schema."
      },
      "PhoneSource": {
        "title": "PhoneSource",
        "enum": [
          "TWILIO",
          "WHATSAPP",
          "WHATSAPP_BUSINESS_PLATFORM"
        ],
        "type": "string",
        "description": "PhoneSource."
      },
      "PhoneType": {
        "title": "PhoneType",
        "enum": [
          "LOCAL",
          "INTERNATIONAL",
          "TOLL_FREE",
          "WHATSAPP",
          "WHATSAPP_BUSINESS_PLATFORM",
          "BYOC",
          "SHORT_CODE",
          "LONG_CODE",
          "TEN_DLC"
        ],
        "type": "string",
        "description": "PhoneType. Ref:\n\nhttps://sinch.com/blog/us-short-codes-vs-long-codes-vs-toll-free-numbers-whats-the-difference/"
      },
      "PhoneWithUser": {
        "title": "PhoneWithUser",
        "required": [
          "name",
          "enabled",
          "phone",
          "country",
          "enabled_generic_reply",
          "enabled_dnc_reply",
          "type",
          "source",
          "created_time",
          "updated_time",
          "id",
          "users"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "name",
            "type": "string",
            "description": "The name of phone number.",
            "example": "tech support"
          },
          "enabled": {
            "title": "enabled",
            "type": "boolean",
            "description": "Indicate whether this phone is enabled."
          },
          "phone": {
            "title": "phone",
            "type": "string",
            "description": "The phone number.",
            "example": "+886912123456"
          },
          "country": {
            "title": "country",
            "type": "string",
            "description": "The country code is on ISO 3166 format",
            "example": "US"
          },
          "whatsapp_device_id": {
            "title": "whatsapp_device_id",
            "type": "string",
            "description": "The whatsapp_device_id of phone number",
            "example": "1234567890:98@s.whatsapp.net"
          },
          "whatsapp_status": {
            "title": "whatsapp_status",
            "allOf": [
              {
                "$ref": "#/components/schemas/WhatsAppStatus"
              }
            ],
            "description": "The whatsapp_status of phone number",
            "example": "CONNECTING"
          },
          "generic_reply_message": {
            "title": "generic_reply_message",
            "type": "string",
            "description": "The default reply message when receive message from client if doesn't match any keyword",
            "default": "",
            "example": "Welcome! If you want to subscribe daily report, please reply 'DAILY'."
          },
          "dnc_reply_message": {
            "title": "dnc_reply_message",
            "type": "string",
            "description": "The dnc message when receive message from client",
            "default": "",
            "example": "Ok, we won't send you any other message."
          },
          "enabled_generic_reply": {
            "title": "enabled_generic_reply",
            "type": "boolean",
            "description": "Whether the generic reply message enabled",
            "example": false
          },
          "enabled_dnc_reply": {
            "title": "enabled_dnc_reply",
            "type": "boolean",
            "description": "Whether the dnc reply message enabled",
            "example": false
          },
          "type": {
            "title": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PhoneType"
              }
            ],
            "description": "The type of this phone.",
            "example": "LOCAL"
          },
          "source": {
            "title": "source",
            "allOf": [
              {
                "$ref": "#/components/schemas/PhoneSource"
              }
            ],
            "description": "The source of this phone.",
            "example": "TWILIO"
          },
          "phone_capability": {
            "title": "phone_capability",
            "allOf": [
              {
                "$ref": "#/components/schemas/PhoneCapability"
              }
            ],
            "description": "Capability of this phone."
          },
          "is_default": {
            "title": "is_default",
            "type": "boolean",
            "description": "Indicate whether the phone is the default phone of workspace.",
            "default": false,
            "example": false
          },
          "enabled_recipient": {
            "title": "enabled_recipient",
            "type": "boolean",
            "description": "enabled_recipient",
            "default": false,
            "example": false
          },
          "whatsapp_business_account_phone_id": {
            "title": "whatsapp_business_account_phone_id",
            "type": "string",
            "description": "The whatsapp_business_account_phone_id if phone is WHATSAPP type.",
            "example": "555555555555"
          },
          "dialpad_available": {
            "title": "dialpad_available",
            "type": "boolean",
            "description": "Indicate whether the phone is dialpad available.",
            "default": false,
            "example": false
          },
          "created_time": {
            "title": "Created Time",
            "type": "string",
            "description": "The time of this item created.",
            "format": "date-time",
            "example": "2025-07-10T02:40:38.825204"
          },
          "updated_time": {
            "title": "Updated Time",
            "type": "string",
            "description": "The time of this item updated.",
            "format": "date-time",
            "example": "2025-07-10T02:40:38.825222"
          },
          "id": {
            "title": "Id",
            "type": "string",
            "description": "The entry UUID.",
            "example": "0354fb10-9e18-4923-a213-6253800f8d01"
          },
          "call_recipient": {
            "title": "call_recipient",
            "allOf": [
              {
                "$ref": "#/components/schemas/PhoneRecipient"
              }
            ],
            "description": "The call recipient of this phone."
          },
          "sms_recipient": {
            "title": "sms_recipient",
            "allOf": [
              {
                "$ref": "#/components/schemas/PhoneRecipient"
              }
            ],
            "description": "The sms recipient of this phone."
          },
          "wabp_recipient": {
            "title": "wabp_recipient",
            "allOf": [
              {
                "$ref": "#/components/schemas/PhoneRecipient"
              }
            ],
            "description": "The sms recipient of this phone."
          },
          "verified_caller": {
            "title": "verified_caller",
            "allOf": [
              {
                "$ref": "#/components/schemas/VerifiedCaller"
              }
            ],
            "description": "The associated verified caller."
          },
          "byoc_trunk": {
            "title": "byoc_trunk",
            "allOf": [
              {
                "$ref": "#/components/schemas/BYOCTrunk"
              }
            ],
            "description": "The BYOC trunk configuration."
          },
          "users": {
            "title": "users",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            },
            "description": "The users associate with this phone."
          }
        },
        "description": "Phone with user schema with fields that need to return to client."
      },
      "PlayTimeDuraionValidation": {
        "title": "PlayTimeDuraionValidation",
        "required": [
          "contact_filter",
          "start_time",
          "end_time"
        ],
        "type": "object",
        "properties": {
          "contact_filter": {
            "title": "Contact Filter",
            "allOf": [
              {
                "$ref": "#/components/schemas/ContactFilterMixin"
              }
            ],
            "description": "Contact filter."
          },
          "message_length": {
            "title": "Message Length",
            "type": "integer",
            "description": "Message length for text-to-speech."
          },
          "audio_duration": {
            "title": "Audio Duration",
            "type": "number",
            "description": "Audio duration."
          },
          "start_time": {
            "title": "Start Time",
            "type": "string",
            "description": "The started timestamp for validating.",
            "format": "date-time",
            "example": "2025-07-10T02:40:48.028424"
          },
          "end_time": {
            "title": "End Time",
            "type": "string",
            "description": "The ended timestamp for validating.",
            "format": "date-time",
            "example": "2025-07-10T03:40:48.028434"
          }
        },
        "description": "Play time duration validation schema."
      },
      "PlayTimeDurationValidationResponse": {
        "title": "PlayTimeDurationValidationResponse",
        "required": [
          "start_time",
          "end_time",
          "estimated_duration"
        ],
        "type": "object",
        "properties": {
          "start_time": {
            "title": "Start Time",
            "type": "string",
            "description": "The started timestamp for validating.",
            "format": "date-time",
            "example": "2025-07-10T02:40:48.029740"
          },
          "end_time": {
            "title": "End Time",
            "type": "string",
            "description": "The ended timestamp for validating.",
            "format": "date-time",
            "example": "2025-07-10T03:40:48.029755"
          },
          "estimated_duration": {
            "title": "Estimated Duration",
            "type": "number",
            "description": "Estimated play time duration."
          }
        },
        "description": "Play time duration validation response schema."
      },
      "PublicWidget": {
        "title": "PublicWidget",
        "required": [
          "id",
          "phone_id",
          "widget_logo",
          "widget_title",
          "widget_subtitle",
          "language",
          "font_size",
          "style",
          "max_character",
          "opening_message",
          "gate_message",
          "icon",
          "popup_message",
          "enabled_types",
          "is_enabled"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "id",
            "type": "string",
            "description": "The id of widget.",
            "example": "11111111-2222-4444-3333-555555555555"
          },
          "phone_id": {
            "title": "phone_id",
            "type": "string",
            "description": "The phone_id of widget.",
            "example": "11111111-2222-4444-3333-555555555555"
          },
          "widget_logo": {
            "title": "widget_logo",
            "type": "string",
            "description": "The widget logo url of widget.",
            "example": "https://seax-bulksms.s3.amazonaws.com/pic/xxx.png"
          },
          "widget_title": {
            "title": "widget_title",
            "type": "string",
            "description": "The widget title of widget.",
            "example": "The cardinal camera"
          },
          "widget_subtitle": {
            "title": "widget_subtitle",
            "type": "string",
            "description": "The widget subtitle of widget.",
            "example": "agent01"
          },
          "language": {
            "title": "language",
            "allOf": [
              {
                "$ref": "#/components/schemas/WidgetLanguage"
              }
            ],
            "description": "The language of widget.",
            "example": "en"
          },
          "font_size": {
            "title": "font_size",
            "type": "integer",
            "description": "The front size of text of widget.",
            "example": 12
          },
          "style": {
            "title": "style",
            "allOf": [
              {
                "$ref": "#/components/schemas/Style"
              }
            ],
            "description": "The style of widget."
          },
          "max_character": {
            "title": "max_character",
            "type": "integer",
            "description": "The max character of widget.",
            "example": 150
          },
          "opening_message": {
            "title": "opening_message",
            "type": "string",
            "description": "The opening message of widget.",
            "example": "Hello"
          },
          "gate_message": {
            "title": "gate_message",
            "type": "string",
            "description": "The gate message of widget.",
            "example": "You can leave your message here."
          },
          "icon": {
            "title": "icon",
            "type": "string",
            "description": "The icon of widget.",
            "example": "https://seax-bulksms.s3.amazonaws.com/pic/xxx.png"
          },
          "popup_message": {
            "title": "popup_message",
            "type": "string",
            "description": "The popup message of widget.",
            "example": "You can leave your message here."
          },
          "enabled_types": {
            "title": "enabled_types",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WidgetType"
            },
            "description": "The enabled types of widget."
          },
          "is_enabled": {
            "title": "is_enabled",
            "type": "boolean",
            "description": "The is_enabled of Widget.",
            "example": true
          },
          "enabled_form": {
            "title": "enabled_form",
            "allOf": [
              {
                "$ref": "#/components/schemas/Form"
              }
            ],
            "description": "The enabled_form of widget."
          }
        },
        "description": "PublicWidget schema."
      },
      "QueryPhonePayload": {
        "title": "QueryPhonePayload",
        "required": [
          "phone_number"
        ],
        "type": "object",
        "properties": {
          "phone_number": {
            "title": "phone_number",
            "type": "string",
            "description": "The phone number.",
            "example": "+886912123456"
          },
          "phone_source": {
            "title": "phone_source",
            "allOf": [
              {
                "$ref": "#/components/schemas/PhoneSource"
              }
            ],
            "description": "The phone source.",
            "default": "TWILIO",
            "example": "TWILIO"
          }
        },
        "description": "QueryPhonePayload."
      },
      "RateLimits": {
        "title": "RateLimits",
        "type": "object",
        "properties": {
          "att": {
            "title": "att",
            "allOf": [
              {
                "$ref": "#/components/schemas/AttRateLimits"
              }
            ],
            "description": "Att rate limit"
          },
          "tmobile": {
            "title": "tmobile",
            "allOf": [
              {
                "$ref": "#/components/schemas/TmobileRateLimits"
              }
            ],
            "description": "Tmobile rate limit"
          }
        },
        "description": "RateLimits schema"
      },
      "RelativeTimeConfig": {
        "title": "RelativeTimeConfig",
        "required": [
          "timezone",
          "id",
          "date_contact_field"
        ],
        "type": "object",
        "properties": {
          "timezone": {
            "title": "Timezone",
            "type": "string",
            "description": "The timezone of this config.",
            "example": "Asia/Taipei"
          },
          "delta_years": {
            "title": "Delta Years",
            "type": "integer",
            "description": "The delta years of relative date contact field value.",
            "default": 0,
            "example": 0
          },
          "delta_months": {
            "title": "Delta Months",
            "type": "integer",
            "description": "The delta months of relative date contact field value.",
            "default": 0,
            "example": 0
          },
          "delta_days": {
            "title": "Delta Days",
            "type": "integer",
            "description": "The delta days of relative date contact field value.",
            "default": 0,
            "example": 0
          },
          "delta_hours": {
            "title": "Delta Hours",
            "type": "integer",
            "description": "The delta hours of relative time contact field value.",
            "default": 0,
            "example": 0
          },
          "delta_minutes": {
            "title": "Delta Minutes",
            "type": "integer",
            "description": "The delta minutes of relative time contact field value.",
            "default": 0,
            "example": 0
          },
          "absolute_time": {
            "title": "Absolute Time",
            "type": "string",
            "description": "The absolute time of relative date, formate is HH:mm",
            "format": "time",
            "example": "00:00"
          },
          "id": {
            "title": "Id",
            "type": "string",
            "description": "The id of this RelativeTimeConfig",
            "example": "0354fb10-9e18-4923-a213-6253800f8d01"
          },
          "date_contact_field": {
            "title": "Date Contact Field",
            "allOf": [
              {
                "$ref": "#/components/schemas/ContactFields"
              }
            ],
            "description": "The contact field for date assocaite with this relative time config."
          },
          "time_contact_field": {
            "title": "Time Contact Field",
            "allOf": [
              {
                "$ref": "#/components/schemas/ContactFields"
              }
            ],
            "description": "The contact field for time assocaite with this relative time config."
          }
        },
        "description": "Relative time config schema."
      },
      "RemoveContact": {
        "title": "RemoveContact",
        "type": "object",
        "properties": {
          "contact_label_ids": {
            "title": "contact_label_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The contact_label ids that the removal contacts are labeled with.",
            "example": [
              "11111111-2222-4444-3333-555555555555"
            ]
          },
          "keyword": {
            "title": "keyword",
            "type": "string",
            "description": "The keyword that all contact name and phone is matched.",
            "default": "",
            "example": "name1"
          }
        },
        "description": "Remove contact schema."
      },
      "RemoveContactLabels": {
        "title": "RemoveContactLabels",
        "required": [
          "contact_label_ids",
          "keyword"
        ],
        "type": "object",
        "properties": {
          "contact_label_ids": {
            "title": "contact_label_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The contact_label ids will be removed.",
            "example": [
              "11111111-2222-4444-3333-555555555555"
            ]
          },
          "keyword": {
            "title": "keyword",
            "type": "string",
            "description": "The keyword that all contact names are matched.",
            "example": "name1"
          }
        },
        "description": "Remove contact labels schema."
      },
      "RoutineJobWorkspace": {
        "title": "RoutineJobWorkspace",
        "type": "object",
        "properties": {
          "workspace_id": {
            "title": "workspace_id",
            "type": "string",
            "description": "The id of workspace",
            "example": "xxxxx"
          }
        }
      },
      "ScheduledTimeValidation": {
        "title": "ScheduledTimeValidation",
        "required": [
          "contact_filter",
          "scheduled_time"
        ],
        "type": "object",
        "properties": {
          "contact_filter": {
            "title": "Contact Filter",
            "allOf": [
              {
                "$ref": "#/components/schemas/ContactFilterMixin"
              }
            ],
            "description": "Contact filter."
          },
          "scheduled_time": {
            "title": "Scheduled Time",
            "type": "string",
            "description": "The scheduled timestamp for validating.",
            "format": "date-time",
            "example": "2025-07-10T02:40:48.026453"
          },
          "is_timezone_aware": {
            "title": "Is Timezone Aware",
            "type": "boolean",
            "description": "Indicate whether the time is timezone aware.",
            "default": false
          }
        },
        "description": "Scheduled time validation schema."
      },
      "SendContact": {
        "title": "SendContact",
        "required": [
          "name",
          "phone"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "name",
            "type": "string",
            "description": "The name of this contact",
            "example": "TomHanks"
          },
          "phone": {
            "title": "phone",
            "type": "string",
            "description": "The phone of this contact",
            "example": "+12345678900"
          }
        },
        "description": "Contact schema."
      },
      "SendMessage": {
        "title": "SendMessage",
        "required": [
          "phone_id",
          "message",
          "contact"
        ],
        "type": "object",
        "properties": {
          "media_urls": {
            "title": "media_urls",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The media urls of this campaign.",
            "example": [
              "https://seax-bulksms.s3.amazonaws.com/media/myimage.jpg"
            ]
          },
          "phone_id": {
            "title": "phone_id",
            "type": "string",
            "description": "The phone_id for sending this message",
            "example": "11111111-2222-4444-3333-555555555555"
          },
          "message": {
            "title": "message",
            "type": "string",
            "description": "The message content",
            "example": "Hello"
          },
          "contact": {
            "title": "contact",
            "allOf": [
              {
                "$ref": "#/components/schemas/SendContact"
              }
            ],
            "description": "The contact is the destination where the message will be sent to"
          },
          "attach_files": {
            "title": "attach_files",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MessageAttachFile"
            },
            "description": "The attach files."
          }
        },
        "description": "Send message schema."
      },
      "SendReceiveMessagesCount": {
        "title": "SendReceiveMessagesCount",
        "type": "object",
        "properties": {
          "mms_recieve_count": {
            "title": "mms_recieve_count",
            "type": "integer",
            "description": "The count of sending message with picture.",
            "default": 0,
            "example": 10
          },
          "mms_send_count": {
            "title": "mms_send_count",
            "type": "integer",
            "description": "The count of receiving message with picture.",
            "default": 0,
            "example": 10
          },
          "sms_send_count": {
            "title": "sms_send_count",
            "type": "integer",
            "description": "The count of receiving message.",
            "default": 0,
            "example": 10
          },
          "sms_recieve_count": {
            "title": "sms_recieve_count",
            "type": "integer",
            "description": "The count of sending message.",
            "default": 0,
            "example": 10
          },
          "voice_drop_count": {
            "title": "voice_drop_count",
            "type": "integer",
            "description": "The count of dialing calls in voice drop.",
            "default": 0,
            "example": 10
          },
          "total_count": {
            "title": "total_count",
            "type": "integer",
            "description": "The count of all received and sent messages of sms, mms and calls.",
            "default": 0,
            "example": 10
          },
          "lookup_count": {
            "title": "lookup_count",
            "type": "integer",
            "description": "The count of Twilio Lookup API queries.",
            "default": 0,
            "example": 10
          },
          "from_datetime": {
            "title": "from_datetime",
            "type": "string",
            "description": "The start datetime of sent sms and mms.",
            "format": "date-time",
            "default": "2025-07-10T02:40:57.534644",
            "example": "2025-07-10T02:40:57.534641"
          },
          "to_datetime": {
            "title": "to_datetime",
            "type": "string",
            "description": "The end datetime of sms and mms.",
            "format": "date-time",
            "default": "2025-07-10T02:40:57.534660",
            "example": "2025-07-10T02:40:57.534659"
          },
          "user_usages": {
            "title": "user_usages",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserUsageMessagesCount"
            },
            "description": "The usage of a user."
          }
        },
        "description": "Send, Receive messages count with from_datetime to to_datetime."
      },
      "SendingTimeValidation": {
        "title": "SendingTimeValidation",
        "required": [
          "contact_filter",
          "start_time"
        ],
        "type": "object",
        "properties": {
          "contact_filter": {
            "title": "Contact Filter",
            "allOf": [
              {
                "$ref": "#/components/schemas/ContactFilterMixin"
              }
            ],
            "description": "Contact filter."
          },
          "start_time": {
            "title": "Start Time",
            "type": "string",
            "description": "The started timestamp for validating.",
            "format": "date-time",
            "example": "2025-07-10T02:40:48.027440"
          },
          "end_time": {
            "title": "End Time",
            "type": "string",
            "description": "The ended timestamp for validating.",
            "format": "date-time",
            "example": "2025-07-10T03:40:48.027451"
          },
          "is_timezone_aware": {
            "title": "Is Timezone Aware",
            "type": "boolean",
            "description": "Indicate whether the time is timezone aware.",
            "default": false
          }
        },
        "description": "Sending time validation schema."
      },
      "ServiceProviderCampaignData": {
        "title": "ServiceProviderCampaignData",
        "required": [
          "service_account_id",
          "service_account_template_name"
        ],
        "type": "object",
        "properties": {
          "service_account_id": {
            "title": "Service Account Id",
            "type": "string",
            "description": "The service account ID of this campaign.",
            "example": "11111111-2222-4444-3333-555555555555"
          },
          "service_account_template_name": {
            "title": "Service Account Template Name",
            "type": "string",
            "description": "The service account template name of this campaign.",
            "example": "template_name"
          },
          "service_account_template_language": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WhatsAppBusinessPlatformTemplateLanguage"
              }
            ],
            "description": "The service account template language of this campaign.",
            "example": "en_US"
          }
        }
      },
      "SimpleUser": {
        "title": "SimpleUser",
        "required": [
          "account",
          "last_name"
        ],
        "type": "object",
        "properties": {
          "account": {
            "title": "account",
            "type": "string",
            "description": "The account of this user.",
            "example": "pika@seasalt.ai"
          },
          "first_name": {
            "title": "first_name",
            "type": "string",
            "description": "The first_name of this user.",
            "example": "Pika"
          },
          "last_name": {
            "title": "last_name",
            "type": "string",
            "description": "The last_name of this user.",
            "example": "Chu"
          }
        },
        "description": "SimpleUser schema"
      },
      "Statistics": {
        "title": "Statistics",
        "type": "object",
        "properties": {
          "accepted": {
            "title": "Accepted",
            "type": "integer",
            "default": 0
          },
          "queued": {
            "title": "Queued",
            "type": "integer",
            "default": 0
          },
          "scheduled": {
            "title": "Scheduled",
            "type": "integer",
            "default": 0
          },
          "sending": {
            "title": "Sending",
            "type": "integer",
            "default": 0
          },
          "sent": {
            "title": "Sent",
            "type": "integer",
            "default": 0
          },
          "failed": {
            "title": "Failed",
            "type": "integer",
            "default": 0
          },
          "delivered": {
            "title": "Delivered",
            "type": "integer",
            "default": 0
          },
          "undelivered": {
            "title": "Undelivered",
            "type": "integer",
            "default": 0
          },
          "receiving": {
            "title": "Receiving",
            "type": "integer",
            "default": 0
          },
          "received": {
            "title": "Received",
            "type": "integer",
            "default": 0
          },
          "canceled": {
            "title": "Canceled",
            "type": "integer",
            "default": 0
          },
          "initialized": {
            "title": "Initialized",
            "type": "integer",
            "default": 0
          },
          "total": {
            "title": "Total",
            "type": "integer",
            "default": 0
          },
          "total_clicks": {
            "title": "Total Clicks",
            "type": "integer",
            "default": 0
          },
          "click_through_rate": {
            "title": "Click Through Rate",
            "type": "integer",
            "default": 0
          }
        },
        "description": "Mega send campaign result schema."
      },
      "Style": {
        "title": "Style",
        "type": "object",
        "properties": {
          "mode": {
            "title": "mode",
            "allOf": [
              {
                "$ref": "#/components/schemas/UserTheme"
              }
            ],
            "description": "The mode of style.",
            "default": "light",
            "example": "light"
          },
          "primary": {
            "title": "primary",
            "type": "string",
            "description": "The primary of style.",
            "default": "#19b9c3",
            "example": "#19b9c3"
          },
          "secondary": {
            "title": "secondary",
            "type": "string",
            "description": "The secondary of style.",
            "default": "#50fec5",
            "example": "#50fec5"
          },
          "font_color": {
            "title": "font_color",
            "type": "string",
            "description": "The font_color of style.",
            "default": "#000000",
            "example": "#000000"
          },
          "chat_area_text_color": {
            "title": "chat_area_text_color",
            "type": "string",
            "description": "The chat area text color of style."
          },
          "message_text_color": {
            "title": "message_text_color",
            "type": "string",
            "description": "The message text color of style."
          },
          "message_client_text_color": {
            "title": "message_client_text_color",
            "type": "string",
            "description": "The message client text color of style."
          },
          "message_client_background_color": {
            "title": "message_client_background_color",
            "type": "string",
            "description": "The message client background color of style."
          },
          "form_text_color": {
            "title": "form_text_color",
            "type": "string",
            "description": "The form text color of style."
          },
          "form_background": {
            "title": "form_background",
            "type": "string",
            "description": "The form background of style."
          },
          "form_header_border": {
            "title": "form_header_border",
            "type": "string",
            "description": "The form header border of style."
          },
          "form_input_background": {
            "title": "form_input_background",
            "type": "string",
            "description": "The form input background of style."
          },
          "form_placeholder": {
            "title": "form_placeholder",
            "type": "string",
            "description": "The form placeholder of style."
          }
        },
        "description": "Style schema."
      },
      "TCRCampaignStatus": {
        "title": "TCRCampaignStatus",
        "enum": [
          "PENDING",
          "IN_PROGRESS",
          "VERIFIED",
          "FAILED",
          "SUSPENDED"
        ],
        "type": "string",
        "description": "TCRCampaignStatus in Twilio api.\n\nReference: https://www.twilio.com/docs/messaging/services/api/us-a2p-campaign-resource"
      },
      "TTSLanguage": {
        "title": "TTSLanguage",
        "required": [
          "language",
          "language_code"
        ],
        "type": "object",
        "properties": {
          "language": {
            "title": "Language",
            "type": "string",
            "description": "Language."
          },
          "language_code": {
            "title": "Language Code",
            "type": "string",
            "description": "Language code."
          }
        },
        "description": "TTSLanguage."
      },
      "TTSProvider": {
        "title": "TTSProvider",
        "enum": [
          "TWILIO",
          "SEASALT"
        ],
        "type": "string",
        "description": "TTSProvider."
      },
      "TmobileRateLimits": {
        "title": "TmobileRateLimits",
        "required": [
          "brand_tier"
        ],
        "type": "object",
        "properties": {
          "brand_tier": {
            "title": "Brand Tier",
            "type": "string"
          }
        },
        "description": "Tmobile schema"
      },
      "UnsetPhone": {
        "title": "UnsetPhone",
        "type": "object",
        "properties": {
          "call_recipient_id": {
            "title": "call_recipient_id",
            "type": "string",
            "description": "The call recipient id of phone number",
            "example": "40a054cb-1bce-44f0-8c3e-c2443d56f39d"
          },
          "sms_recipient_id": {
            "title": "sms_recipient_id",
            "type": "string",
            "description": "The sms recipient id of phone number",
            "example": "40a054cb-1bce-44f0-8c3e-c2443d56f39d"
          },
          "wabp_recipient_id": {
            "title": "wabp_recipient_id",
            "type": "string",
            "description": "The wabp recipient id of phone number",
            "example": "40a054cb-1bce-44f0-8c3e-c2443d56f39d"
          },
          "verified_caller_id": {
            "title": "verified_caller_id",
            "type": "string",
            "description": "The associated verified caller id of phone number",
            "example": "40a054cb-1bce-44f0-8c3e-c2443d56f39d"
          }
        },
        "description": "UnsetPhone schema."
      },
      "UpdateAgentSkill": {
        "title": "UpdateAgentSkill",
        "type": "object",
        "properties": {
          "name": {
            "title": "name",
            "type": "string",
            "description": "The name of agent skill.",
            "example": "VIP"
          },
          "description": {
            "title": "description",
            "type": "string",
            "description": "The description of agent skill.",
            "example": "This skill is for vip customer"
          },
          "added_user_accounts": {
            "title": "added_user_accounts",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of added user accounts.",
            "example": [
              "user_account_1",
              "user_account_2"
            ]
          },
          "removed_user_accounts": {
            "title": "removed_user_accounts",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of removed user accounts.",
            "example": [
              "user_account_3",
              "user_account_4"
            ]
          }
        },
        "description": "UpdateAgentSkill schema"
      },
      "UpdateAutoDialerCampaign": {
        "title": "UpdateAutoDialerCampaign",
        "type": "object",
        "properties": {
          "start_time": {
            "title": "Start Time",
            "type": "string",
            "description": "The timestamp when this campaign started.",
            "format": "date-time",
            "example": "2025-07-10T02:40:47.416137"
          },
          "end_time": {
            "title": "End Time",
            "type": "string",
            "description": "The timestamp when this campaign ended.",
            "format": "date-time",
            "example": "2025-07-10T02:40:47.416155"
          },
          "name": {
            "title": "Name",
            "type": "string",
            "description": "Auto dialer campaign name",
            "example": "My auto dialer campaign"
          },
          "draft_name": {
            "title": "draft_name",
            "type": "string",
            "description": "The draft name of this auto dialer campaign.",
            "example": "My draft auto dialer campaign"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AutoDialerCampaignType"
              }
            ],
            "description": "Auto dialer campaign type",
            "example": "VOICE_DROP"
          },
          "message": {
            "title": "Message",
            "type": "string",
            "description": "Message for text-to-speech.",
            "example": "Hello my friend."
          },
          "tts_language": {
            "title": "Tts Language",
            "type": "string",
            "description": "Language code for text-to-speech.",
            "example": "en-US."
          },
          "tts_voice": {
            "title": "Tts Voice",
            "type": "string",
            "description": "Voice model for text-to-speech.",
            "default": "default",
            "example": "default"
          },
          "ai_agent_id": {
            "title": "Ai Agent Id",
            "type": "string",
            "description": "AI agent ID.",
            "example": "0354fb10-9e18-4923-a213-6253800f8d01"
          },
          "ai_agent_conversation_config_id": {
            "title": "Ai Agent Conversation Config Id",
            "type": "string",
            "description": "AI agent associated conversation config ID.",
            "example": "0354fb10-9e18-4923-a213-6253800f8d01"
          },
          "max_attempts": {
            "title": "Max Attempts",
            "exclusiveMinimum": 0.0,
            "type": "integer",
            "description": "Dial to a contact up to the number of attempts."
          },
          "max_dialers": {
            "title": "Max Dialers",
            "exclusiveMinimum": 0.0,
            "type": "integer",
            "description": "Maximum number of concurrent dialers."
          },
          "capture_keypress": {
            "title": "Capture Keypress",
            "type": "boolean",
            "description": "Has true to capture keypress in IVR."
          },
          "capture_stt": {
            "title": "Capture Stt",
            "type": "boolean",
            "description": "Has true to capture speech-to-text in IVR."
          },
          "is_timezone_aware": {
            "title": "Is Timezone Aware",
            "type": "boolean",
            "description": "Has true if this auto dialer campaign is timezone aware."
          },
          "is_schedule": {
            "title": "Is Schedule",
            "type": "boolean",
            "description": "Has true if this auto dialer campaign is schedule."
          },
          "contact_file_url": {
            "title": "contact_file_url",
            "maxLength": 2083,
            "minLength": 1,
            "type": "string",
            "description": "The URL of the contact file contains contacts for this campaign.",
            "format": "uri"
          },
          "timezone": {
            "title": "timezone",
            "type": "string",
            "description": "The timezone of this auto dialer campaign.",
            "example": "UTC"
          },
          "audio_url": {
            "title": "Audio Url",
            "type": "string",
            "description": "The associated audio URL for this auto dialer campaign.",
            "example": "https://seax-bulksms.s3.amazonaws.com/audio/xxx.wav"
          },
          "all_contact_label_ids": {
            "title": "All Contact Label Ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Search contacts that must match all contact label IDs.",
            "example": [
              "0354fb10-9e18-4923-a213-6253800f8d01"
            ]
          },
          "any_contact_label_ids": {
            "title": "Any Contact Label Ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Search contacts that match any contact label IDs.",
            "example": [
              "0354fb10-9e18-4923-a213-6253800f8d01"
            ]
          },
          "exclude_contact_ids": {
            "title": "Exclude Contact Ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Exclude contacts that match any contact IDs.",
            "example": [
              "0354fb10-9e18-4923-a213-6253800f8d01"
            ]
          },
          "addition_contact_ids": {
            "title": "Addition Contact Ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include contacts that match any contact IDs.",
            "example": [
              "0354fb10-9e18-4923-a213-6253800f8d01"
            ]
          },
          "exclude_any_contact_label_ids": {
            "title": "Exclude Any Contact Label Ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Exclude contacts that match any contact label IDs.",
            "example": [
              "11111111-2222-4444-3333-555555555555",
              "11111111-2222-4444-3333-666666666666"
            ]
          },
          "exclude_all_contact_label_ids": {
            "title": "Exclude All Contact Label Ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Exclude contacts that must match all contact label IDs.",
            "example": [
              "11111111-2222-4444-3333-555555555555",
              "11111111-2222-4444-3333-666666666666"
            ]
          },
          "keyword": {
            "title": "Keyword",
            "type": "string",
            "description": "Search contacts that any name or phone match the keyword.",
            "example": "+18111222333"
          },
          "whatsapp_phone_only": {
            "title": "Whatsapp Phone Only",
            "type": "boolean",
            "description": "Search only contacts that have whatsapp number.",
            "default": false,
            "example": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CampaignJobStatus"
              }
            ],
            "description": "Campaign status.",
            "example": "PENDING"
          },
          "phone_ids": {
            "title": "Phone Ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The phone IDs are used for this auto dialer campaign.",
            "example": [
              "0354fb10-9e18-4923-a213-6253800f8d01"
            ]
          },
          "mode": {
            "title": "mode",
            "allOf": [
              {
                "$ref": "#/components/schemas/CampaignMode"
              }
            ],
            "description": "The mode of this auto dialer campaign.",
            "example": "WEB"
          },
          "stage": {
            "title": "stage",
            "allOf": [
              {
                "$ref": "#/components/schemas/CampaignStage"
              }
            ],
            "description": "The stage of this auto dialer campaign.",
            "example": "INSTANCE"
          },
          "attach_contact_label_ids": {
            "title": "Attach Contact Label Ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The contact label IDs would be attached to all contacts in this campaign.",
            "example": [
              "0354fb10-9e18-4923-a213-6253800f8d01"
            ]
          },
          "contact_field_ids": {
            "title": "Contact Field Ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The IDs of the contact fields used by this auto dialer campaign; use an empty array to delete all."
          },
          "relative_time_config": {
            "title": "Relative Time Config",
            "allOf": [
              {
                "$ref": "#/components/schemas/UpdateRelativeTimeConfig"
              }
            ],
            "description": "The relative time config of this auto dialer campaign"
          }
        },
        "description": "Auto dialer campaign schema for updating."
      },
      "UpdateBYOCTrunk": {
        "title": "UpdateBYOCTrunk",
        "required": [
          "sip_domain"
        ],
        "type": "object",
        "properties": {
          "sip_domain": {
            "title": "Sip Domain",
            "type": "string",
            "description": "SIP Domain of this BYOC trunks configuration."
          },
          "acl_ip_addresses": {
            "title": "Acl Ip Addresses",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseACLIPAddress"
            },
            "description": "ACL IP addresses."
          },
          "sip_auth_username": {
            "title": "Sip Auth Username",
            "type": "string",
            "description": "Authentication username is applied to make SIP call."
          },
          "sip_auth_password": {
            "title": "Sip Auth Password",
            "type": "string",
            "description": "Authentication password is applied to make SIP call."
          }
        },
        "description": "UpdateBYOCTrunk schema."
      },
      "UpdateCampaign": {
        "title": "UpdateCampaign",
        "type": "object",
        "properties": {
          "media_urls": {
            "title": "media_urls",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The media urls of this campaign.",
            "example": [
              "https://seax-bulksms.s3.amazonaws.com/media/myimage.jpg"
            ]
          },
          "start_time": {
            "title": "Start Time",
            "type": "string",
            "description": "The timestamp when this campaign started.",
            "format": "date-time",
            "example": "2025-07-10T02:40:47.416137"
          },
          "end_time": {
            "title": "End Time",
            "type": "string",
            "description": "The timestamp when this campaign ended.",
            "format": "date-time",
            "example": "2025-07-10T02:40:47.416155"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CampaignJobStatus"
              }
            ],
            "description": "Campaign status.",
            "example": "PENDING"
          },
          "name": {
            "title": "name",
            "type": "string",
            "description": "The name of this campaign.",
            "example": "festival campaign"
          },
          "draft_name": {
            "title": "draft_name",
            "type": "string",
            "description": "The draft name of this campaign.",
            "example": "festival campaign draft"
          },
          "header_message": {
            "title": "header_message",
            "type": "string",
            "description": "The header_message of this campaign.",
            "example": "Hi, {name}, xxx..."
          },
          "message": {
            "title": "message",
            "type": "string",
            "description": "The message of this campaign.",
            "example": "Hi, {name}, xxx..."
          },
          "ai_agent_conversation_config_id": {
            "title": "Ai Agent Conversation Config Id",
            "type": "string",
            "description": "AI agent associated conversation config ID.",
            "example": "0354fb10-9e18-4923-a213-6253800f8d01"
          },
          "type": {
            "title": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/CampaignType"
              }
            ],
            "description": "The type of this campaign.",
            "example": "SMS"
          },
          "is_timezone_aware": {
            "title": "is_timezone_aware",
            "type": "boolean",
            "description": "Has true if this campaign is timezone aware."
          },
          "is_schedule": {
            "title": "Is Schedule",
            "type": "boolean",
            "description": "Has true if this campaign is schedule."
          },
          "contact_file_url": {
            "title": "contact_file_url",
            "maxLength": 2083,
            "minLength": 1,
            "type": "string",
            "description": "The URL of the contact file contains contacts for this campaign.",
            "format": "uri"
          },
          "timezone": {
            "title": "timezone",
            "type": "string",
            "description": "The timezone of this campaign.",
            "example": "UTC"
          },
          "attach_files": {
            "title": "attach_files",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CampaignAttachFile"
            },
            "description": "The attach files."
          },
          "all_contact_label_ids": {
            "title": "All Contact Label Ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Search contacts that must match all contact label IDs.",
            "example": [
              "0354fb10-9e18-4923-a213-6253800f8d01"
            ]
          },
          "any_contact_label_ids": {
            "title": "Any Contact Label Ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Search contacts that match any contact label IDs.",
            "example": [
              "0354fb10-9e18-4923-a213-6253800f8d01"
            ]
          },
          "exclude_contact_ids": {
            "title": "Exclude Contact Ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Exclude contacts that match any contact IDs.",
            "example": [
              "0354fb10-9e18-4923-a213-6253800f8d01"
            ]
          },
          "addition_contact_ids": {
            "title": "Addition Contact Ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include contacts that match any contact IDs.",
            "example": [
              "0354fb10-9e18-4923-a213-6253800f8d01"
            ]
          },
          "exclude_any_contact_label_ids": {
            "title": "Exclude Any Contact Label Ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Exclude contacts that match any contact label IDs.",
            "example": [
              "11111111-2222-4444-3333-555555555555",
              "11111111-2222-4444-3333-666666666666"
            ]
          },
          "exclude_all_contact_label_ids": {
            "title": "Exclude All Contact Label Ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Exclude contacts that must match all contact label IDs.",
            "example": [
              "11111111-2222-4444-3333-555555555555",
              "11111111-2222-4444-3333-666666666666"
            ]
          },
          "keyword": {
            "title": "Keyword",
            "type": "string",
            "description": "Search contacts that any name or phone match the keyword.",
            "example": "+18111222333"
          },
          "whatsapp_phone_only": {
            "title": "Whatsapp Phone Only",
            "type": "boolean",
            "description": "Search only contacts that have whatsapp number.",
            "default": false,
            "example": true
          },
          "attach_contact_label_ids": {
            "title": "attach_contact_label_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The contact label ids would be attached to all contacts in this campaign.",
            "example": [
              "11111111-2222-4444-3333-555555555555"
            ]
          },
          "phone_ids": {
            "title": "phone_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The id of phones in this campaign to send SMS.",
            "example": [
              "11111111-2222-4444-3333-555555555555"
            ]
          },
          "message_service_id": {
            "title": "message_service_id",
            "type": "string",
            "description": "The id of message service from Twilio.",
            "example": "MG10000000000000000000000000000000"
          },
          "enable_link_shortening": {
            "title": "enable_link_shortening",
            "type": "boolean",
            "description": "Whether the scheduled campaign enable link shortening.",
            "example": true
          },
          "contact_field_ids": {
            "title": "Contact Field Ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The IDs of the contact fields used by this campaign; use an empty array to delete all."
          },
          "mode": {
            "title": "mode",
            "allOf": [
              {
                "$ref": "#/components/schemas/CampaignMode"
              }
            ],
            "description": "The mode of this campaign.",
            "example": "WEB"
          },
          "stage": {
            "title": "stage",
            "allOf": [
              {
                "$ref": "#/components/schemas/CampaignStage"
              }
            ],
            "description": "The stage of this campaign.",
            "example": "INSTANCE"
          },
          "relative_time_config": {
            "title": "Relative Time Config",
            "allOf": [
              {
                "$ref": "#/components/schemas/UpdateRelativeTimeConfig"
              }
            ],
            "description": "The relative time config of this campaign"
          }
        },
        "description": "UpdateCampaign schema."
      },
      "UpdateContact": {
        "title": "UpdateContact",
        "type": "object",
        "properties": {
          "name": {
            "title": "name",
            "type": "string",
            "description": "The name of keyword.",
            "example": "test"
          },
          "note": {
            "title": "note",
            "type": "string",
            "description": "The note of this contact",
            "example": "New contact"
          },
          "contact_label_ids": {
            "title": "contact_label_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The contact_label_ids of this contact.",
            "example": [
              "11111111-2222-4444-3333-555555555555"
            ]
          },
          "contact_field_data": {
            "title": "contact_field_data",
            "type": "object",
            "description": "The contact field data",
            "example": {
              "field1": 1
            }
          },
          "whatsapp_phone": {
            "title": "whatsapp_phone",
            "type": "string",
            "description": "The whatsapp phone of this contact",
            "example": "+12345678900"
          }
        },
        "description": "Update Contact schema."
      },
      "UpdateContactFields": {
        "title": "UpdateContactFields",
        "type": "object",
        "properties": {
          "name": {
            "title": "name",
            "type": "string",
            "description": "The name of contact field",
            "example": "country"
          },
          "type": {
            "title": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/ContactFieldType"
              }
            ],
            "description": "The type of contact field",
            "example": "STRING"
          }
        },
        "description": "Update Contact Fields schema"
      },
      "UpdateContactLabel": {
        "title": "UpdateContactLabel",
        "type": "object",
        "properties": {
          "name": {
            "title": "name",
            "type": "string",
            "description": "The contact label name.",
            "example": "new"
          },
          "color": {
            "title": "color",
            "type": "string",
            "description": "The color of the label.",
            "example": "#000000"
          },
          "description": {
            "title": "description",
            "type": "string",
            "description": "The description of contact label.",
            "example": "This label is for vip customer"
          }
        },
        "description": "Update ContactLabel schema with fields that need to return to client."
      },
      "UpdateConversation": {
        "title": "UpdateConversation",
        "type": "object",
        "properties": {
          "is_unread": {
            "title": "is_unread",
            "type": "boolean",
            "description": "Indicate whether this conversation has new messages."
          },
          "label_ids": {
            "title": "label_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The associated label ids for this conversation."
          }
        },
        "description": "conversation schema for update."
      },
      "UpdateConversationLabel": {
        "title": "UpdateConversationLabel",
        "type": "object",
        "properties": {
          "name": {
            "title": "name",
            "type": "string",
            "description": "The conversation label name.",
            "example": "new"
          },
          "color": {
            "title": "color",
            "type": "string",
            "description": "The color of the label.",
            "example": "#000000"
          },
          "description": {
            "title": "description",
            "type": "string",
            "description": "The description of contact label.",
            "example": "This label is for vip customer"
          }
        },
        "description": "Update ConversationLabel schema with fields that need to return to client."
      },
      "UpdateForm": {
        "title": "UpdateForm",
        "type": "object",
        "properties": {
          "name": {
            "title": "name",
            "type": "string",
            "description": "The name of Form.",
            "example": "form1"
          },
          "url_checkbox": {
            "title": "url_checkbox",
            "type": "boolean",
            "description": "Whether url_checkbox of form is turned on.",
            "example": true
          },
          "url_link": {
            "title": "url_link",
            "type": "string",
            "description": "The url_link of Form.",
            "example": "https://seasalt.ai"
          },
          "url_text": {
            "title": "url_text",
            "type": "string",
            "description": "The url_text of Form.",
            "example": "seasalt.ai"
          },
          "is_enabled": {
            "title": "is_enabled",
            "type": "boolean",
            "description": "Whether form is turned on.",
            "example": true
          },
          "title": {
            "title": "title",
            "type": "string",
            "description": "The title of Form.",
            "example": "title"
          },
          "consent_message": {
            "title": "consent_message",
            "type": "string",
            "description": "The consent_message of Form.",
            "example": "please see our privacy"
          },
          "consent_checkbox": {
            "title": "consent_checkbox",
            "type": "boolean",
            "description": "The consent_checkbox of Form.",
            "example": true
          },
          "submission_message": {
            "title": "submission_message",
            "type": "string",
            "description": "The submission_message of Form.",
            "example": "https://seasalt.ai"
          },
          "fields": {
            "title": "fields",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FormField"
            },
            "description": "The fields of Form."
          }
        },
        "description": "UpdateForm schema."
      },
      "UpdateKeyword": {
        "title": "UpdateKeyword",
        "type": "object",
        "properties": {
          "name": {
            "title": "name",
            "type": "string",
            "description": "The name of keyword.",
            "example": "test"
          },
          "reply": {
            "title": "The auto-reply message",
            "type": "string",
            "description": "The auto-reply message",
            "example": "OK, we got it."
          },
          "priority": {
            "title": "The priority of this keyword.",
            "type": "integer",
            "description": "The priority of this keyword to auto-reply message, it's auto incremental.",
            "example": 10
          },
          "enabled_auto_reply": {
            "title": "indicate whether this keyword is enabled auto replying feature",
            "type": "boolean",
            "description": "indicate whether this keyword is enabled",
            "default": true,
            "example": true
          },
          "enabled_contact_label": {
            "title": "indicate whether this keyword is enabled contact labeling feature",
            "type": "boolean",
            "description": "indicate whether this keyword is enabled  contact labeling feature",
            "default": true,
            "example": true
          },
          "contact_label_ids": {
            "title": "contact_label_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The contact_label_ids of this keyword.",
            "example": [
              "11111111-2222-4444-3333-555555555555"
            ]
          },
          "keep_dnc_label_only": {
            "title": "Remove all other labels but keep DNC",
            "type": "boolean",
            "description": "Remove all other labels but keep DNC",
            "default": false,
            "example": false
          }
        },
        "description": "Update Keyword schema."
      },
      "UpdateMessageTemplate": {
        "title": "UpdateMessageTemplate",
        "type": "object",
        "properties": {
          "template": {
            "title": "template",
            "type": "string",
            "description": "The template content of message template resource",
            "example": "Hi {name}, How's going?"
          },
          "name": {
            "title": "name",
            "type": "string",
            "description": "The name of message",
            "example": "Greeting1"
          },
          "header_format": {
            "title": "header_format",
            "allOf": [
              {
                "$ref": "#/components/schemas/WhatsAppBusinessPlatformTemplateComponentFormat"
              }
            ],
            "description": "The header format of message template",
            "example": "TEXT"
          },
          "header_template": {
            "title": "header_template",
            "type": "string",
            "description": "The header template of message template",
            "example": "Hi pike, how's going?"
          }
        },
        "description": "Base Message Template schema"
      },
      "UpdatePhone": {
        "title": "UpdatePhone",
        "type": "object",
        "properties": {
          "name": {
            "title": "name",
            "type": "string",
            "description": "The name of phone number.",
            "example": "tech support"
          },
          "enabled": {
            "title": "enabled",
            "type": "boolean",
            "description": "Indicate whether this phone is enabled."
          },
          "phone": {
            "title": "phone",
            "type": "string",
            "description": "The phone number.",
            "example": "+886912123456"
          },
          "country": {
            "title": "country",
            "type": "string",
            "description": "The country code is on ISO 3166 format",
            "example": "US"
          },
          "generic_reply_message": {
            "title": "generic_reply_message",
            "type": "string",
            "description": "The default reply message when receive message from client if doesn't match any keyword",
            "example": "Welcome! If you want to subscribe daily report, please reply 'DAILY'."
          },
          "dnc_reply_message": {
            "title": "dnc_reply_message",
            "type": "string",
            "description": "The dnc message when receive message from client",
            "example": "Ok, we won't send you any other message."
          },
          "enabled_generic_reply": {
            "title": "enabled_generic_reply",
            "type": "boolean",
            "description": "Whether the generic reply message enabled",
            "example": false
          },
          "enabled_dnc_reply": {
            "title": "enabled_dnc_reply",
            "type": "boolean",
            "description": "Whether the dnc reply message enabled",
            "example": true
          },
          "type": {
            "title": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PhoneType"
              }
            ],
            "description": "The type of this phone.",
            "example": "LOCAL"
          },
          "source": {
            "title": "source",
            "allOf": [
              {
                "$ref": "#/components/schemas/PhoneSource"
              }
            ],
            "description": "The source of this phone.",
            "example": "TWILIO"
          },
          "phone_capability": {
            "title": "phone_capability",
            "allOf": [
              {
                "$ref": "#/components/schemas/PhoneCapability"
              }
            ],
            "description": "Capability of this phone."
          },
          "user_accounts": {
            "title": "user_accounts",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The user accounts associate with this phone.",
            "example": [
              "user1",
              "user2"
            ]
          },
          "is_default": {
            "title": "is_default",
            "type": "boolean",
            "description": "Indicate whether the phone is the default phone of workspace.",
            "example": false
          },
          "call_recipient": {
            "title": "call_recipient",
            "allOf": [
              {
                "$ref": "#/components/schemas/CreateOrUpdatePhoneRecipient"
              }
            ],
            "description": "The call recipient of this phone."
          },
          "sms_recipient": {
            "title": "sms_recipient",
            "allOf": [
              {
                "$ref": "#/components/schemas/CreateOrUpdatePhoneRecipient"
              }
            ],
            "description": "The sms recipient of this phone."
          },
          "wabp_recipient": {
            "title": "wabp_recipient",
            "allOf": [
              {
                "$ref": "#/components/schemas/CreateOrUpdatePhoneRecipient"
              }
            ],
            "description": "The wabp recipient of this phone."
          },
          "byoc_trunk": {
            "title": "byoc_trunk",
            "allOf": [
              {
                "$ref": "#/components/schemas/UpdateBYOCTrunk"
              }
            ],
            "description": "The BYOC trunk configuration."
          },
          "verified_caller_id": {
            "title": "verified_caller_id",
            "type": "string",
            "description": "The associated verified caller id of phone number",
            "example": "40a054cb-1bce-44f0-8c3e-c2443d56f39d"
          },
          "enabled_recipient": {
            "title": "enabled_recipient",
            "type": "boolean",
            "description": "enabled_recipient",
            "default": false,
            "example": false
          },
          "is_twilio_studio_flow_inbound_call_human_agent_enabled": {
            "title": "is_twilio_studio_flow_inbound_call_human_agent_enabled",
            "type": "boolean",
            "description": "Indicate whether the Twilio Studio Flow for inbound call when human agent mode.",
            "example": false
          },
          "twilio_studio_flow_sid_inbound_call_human_agent": {
            "title": "twilio_studio_flow_sid_inbound_call_human_agent",
            "type": "string",
            "description": "The Twilio Studio Flow SID for inbound call when human agent mode.",
            "example": ""
          }
        },
        "description": "Update Phone schema."
      },
      "UpdateRelativeTimeConfig": {
        "title": "UpdateRelativeTimeConfig",
        "type": "object",
        "properties": {
          "timezone": {
            "title": "Timezone",
            "type": "string",
            "description": "The timezone of this config.",
            "example": "Asia/Taipei"
          },
          "delta_years": {
            "title": "Delta Years",
            "type": "integer",
            "description": "The delta years of relative date contact field value.",
            "default": 0,
            "example": 0
          },
          "delta_months": {
            "title": "Delta Months",
            "type": "integer",
            "description": "The delta months of relative date contact field value.",
            "default": 0,
            "example": 0
          },
          "delta_days": {
            "title": "Delta Days",
            "type": "integer",
            "description": "The delta days of relative date contact field value.",
            "default": 0,
            "example": 0
          },
          "delta_hours": {
            "title": "Delta Hours",
            "type": "integer",
            "description": "The delta hours of relative time contact field value.",
            "default": 0,
            "example": 0
          },
          "delta_minutes": {
            "title": "Delta Minutes",
            "type": "integer",
            "description": "The delta minutes of relative time contact field value.",
            "default": 0,
            "example": 0
          },
          "absolute_time": {
            "title": "Absolute Time",
            "type": "string",
            "description": "The absolute time of relative date, formate is HH:mm",
            "format": "time",
            "example": "00:00"
          },
          "date_contact_field_id": {
            "title": "Date Contact Field Id",
            "type": "string",
            "description": "The contact field ID for date associate with this relative time config.",
            "example": "0354fb10-9e18-4923-a213-6253800f8d01"
          },
          "time_contact_field_id": {
            "title": "Time Contact Field Id",
            "type": "string",
            "description": "The contact field ID for time associate with this relative time config.",
            "example": "0354fb10-9e18-4923-a213-6253800f8d01"
          }
        },
        "description": "Relative time config for update schema."
      },
      "UpdateUser": {
        "title": "UpdateUser",
        "type": "object",
        "properties": {
          "language": {
            "title": "language",
            "allOf": [
              {
                "$ref": "#/components/schemas/LanguageCode"
              }
            ],
            "description": "The language of this user.",
            "example": "en-US"
          },
          "theme": {
            "title": "theme",
            "allOf": [
              {
                "$ref": "#/components/schemas/UserTheme"
              }
            ],
            "description": "The theme of this user.",
            "example": "dark"
          },
          "first_name": {
            "title": "first_name",
            "type": "string",
            "description": "The first_name of this user.",
            "example": "Satoshi"
          },
          "last_name": {
            "title": "last_name",
            "type": "string",
            "description": "The last_name of this user.",
            "example": "Nakamoto"
          },
          "phone": {
            "title": "phone",
            "type": "string",
            "description": "The phone of this user.",
            "example": "+1230000000"
          },
          "date_format": {
            "title": "date_format",
            "type": "string",
            "description": "The date_format of this user.",
            "example": "MM/dd/yyyy"
          },
          "time_format": {
            "title": "time_format",
            "type": "string",
            "description": "The time_format of this user.",
            "example": "HH:mm:ss"
          },
          "email_notification_enabled": {
            "title": "email_notification_enabled",
            "type": "boolean",
            "description": "The email_notification_enabled of this user."
          },
          "is_new_user": {
            "title": "is_new_user",
            "type": "boolean",
            "description": "The is_new_user of this user."
          },
          "email_notification_only_offline": {
            "title": "email_notification_only_offline",
            "type": "boolean",
            "description": "The email_notification_only_offline of this user."
          },
          "sms_notification_enabled": {
            "title": "sms_notification_enabled",
            "type": "boolean",
            "description": "The sms_notification_enabled of this user."
          },
          "sms_notification_only_offline": {
            "title": "sms_notification_only_offline",
            "type": "boolean",
            "description": "The sms_notification_only_offline of this user."
          }
        },
        "description": "Update user schema"
      },
      "UpdateUserWorkspace": {
        "title": "UpdateUserWorkspace",
        "type": "object",
        "properties": {
          "workspace_role": {
            "title": "workspace_role",
            "allOf": [
              {
                "$ref": "#/components/schemas/UserWorkspaceRole"
              }
            ],
            "description": "The workspace_role of user in this workspace.",
            "example": "OPERATOR"
          },
          "status": {
            "title": "status",
            "allOf": [
              {
                "$ref": "#/components/schemas/UserWorkspaceStatus"
              }
            ],
            "description": "The status of user in this workspace.",
            "example": "ACTIVE"
          },
          "preferred_campaign_timezone": {
            "title": "preferred_campaign_timezone",
            "type": "string",
            "description": "User preferred timezone information for campaign in workspace.",
            "example": "America/Los_Angeles"
          },
          "phone_ids": {
            "title": "phone_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The phones' id in this workspace.",
            "example": [
              "11111111-2222-4444-3333-555555555555"
            ]
          },
          "added_agent_skill_ids": {
            "title": "added_agent_skill_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The agent skill ids to added of this user."
          },
          "removed_agent_skill_ids": {
            "title": "removed_agent_skill_ids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The agent skill ids to removed of this user."
          }
        },
        "description": "UpdateUserWorkspace schema"
      },
      "UpdateWidget": {
        "title": "UpdateWidget",
        "type": "object",
        "properties": {
          "widget_logo": {
            "title": "widget_logo",
            "type": "string",
            "description": "The widget logo url of widget.",
            "example": "https://seax-bulksms.s3.amazonaws.com/pic/xxx.png"
          },
          "widget_title": {
            "title": "widget_title",
            "type": "string",
            "description": "The widget title of widget.",
            "example": "The cardinal camera"
          },
          "widget_subtitle": {
            "title": "widget_subtitle",
            "type": "string",
            "description": "The widget subtitle of widget.",
            "example": "agent01"
          },
          "language": {
            "title": "language",
            "allOf": [
              {
                "$ref": "#/components/schemas/LanguageCode"
              }
            ],
            "description": "The language of widget.",
            "example": "en-US"
          },
          "font_size": {
            "title": "font_size",
            "type": "integer",
            "description": "The front size of text of widget.",
            "example": 12
          },
          "style": {
            "title": "style",
            "allOf": [
              {
                "$ref": "#/components/schemas/Style"
              }
            ],
            "description": "The style of widget."
          },
          "max_character": {
            "title": "max_character",
            "type": "integer",
            "description": "The max character of widget.",
            "example": 150
          },
          "opening_message": {
            "title": "opening_message",
            "type": "string",
            "description": "The opening message of widget.",
            "example": "Hello"
          },
          "gate_message": {
            "title": "gate_message",
            "type": "string",
            "description": "The gate message of widget.",
            "example": "You can leave your message here."
          },
          "icon": {
            "title": "icon",
            "type": "string",
            "description": "The icon of widget.",
            "example": "https://seax-bulksms.s3.amazonaws.com/pic/xxx.png"
          },
          "popup_message": {
            "title": "popup_message",
            "type": "string",
            "description": "The popup message of widget.",
            "example": "You can leave your message here."
          }
        },
        "description": "UpdateWidget schema."
      },
      "UpdateWorkspace": {
        "title": "UpdateWorkspace",
        "type": "object",
        "properties": {
          "name": {
            "title": "name",
            "type": "string",
            "description": "The name of workspace.",
            "example": "Seasalt"
          },
          "twilio_account_sid": {
            "title": "twilio_account_sid",
            "type": "string",
            "description": "The twilio_account_sid of workspace.",
            "example": "AC00000000000000000000000000000000"
          },
          "twilio_auth_token": {
            "title": "twilio_auth_token",
            "type": "string",
            "description": "The twilio_auth_token of workspace.",
            "example": "00000000000000000000000000000001"
          },
          "timezone": {
            "title": "timezone",
            "type": "string",
            "description": "The timezone of workspace.",
            "example": "America/Los_Angeles"
          },
          "logo_url": {
            "title": "logo_url",
            "type": "string",
            "description": "The logo url of workspace.",
            "example": "https://seax-bulksms.s3.amazonaws.com/test.jpg"
          },
          "enable_global_link_shortening": {
            "title": "enable_global_link_shortening",
            "type": "boolean",
            "description": "Whether the link shortening of workspace is enabled.",
            "example": false
          }
        },
        "description": "UpdateWorkspace schema"
      },
      "User": {
        "title": "User",
        "required": [
          "account",
          "last_name",
          "email",
          "language",
          "theme",
          "date_format",
          "time_format",
          "created_time",
          "email_notification_enabled",
          "is_new_user",
          "email_notification_only_offline",
          "sms_notification_enabled",
          "sms_notification_only_offline"
        ],
        "type": "object",
        "properties": {
          "account": {
            "title": "account",
            "type": "string",
            "description": "The account of this user.",
            "example": "satoshi"
          },
          "first_name": {
            "title": "first_name",
            "type": "string",
            "description": "The first_name of this user.",
            "example": "Satoshi"
          },
          "last_name": {
            "title": "last_name",
            "type": "string",
            "description": "The last_name of this user.",
            "example": "Nakamoto"
          },
          "email": {
            "title": "email",
            "type": "string",
            "description": "The email of this user.",
            "example": "satoshi@btc.com"
          },
          "phone": {
            "title": "phone",
            "type": "string",
            "description": "The phone of this user.",
            "example": "+1230000000"
          },
          "language": {
            "title": "language",
            "allOf": [
              {
                "$ref": "#/components/schemas/LanguageCode"
              }
            ],
            "description": "The language of this user.",
            "example": "en-US"
          },
          "theme": {
            "title": "theme",
            "allOf": [
              {
                "$ref": "#/components/schemas/UserTheme"
              }
            ],
            "description": "The theme of this user.",
            "example": "dark"
          },
          "date_format": {
            "title": "date_format",
            "type": "string",
            "description": "The date_format of this user.",
            "example": "MM/dd/yyyy"
          },
          "time_format": {
            "title": "time_format",
            "type": "string",
            "description": "The time_format of this user.",
            "example": "HH:mm:ss"
          },
          "created_time": {
            "title": "created_time",
            "type": "string",
            "description": "The created time of this user.",
            "format": "date-time",
            "example": "2009-01-03T18:15:00"
          },
          "email_notification_enabled": {
            "title": "email_notification_enabled",
            "type": "boolean",
            "description": "The email_notification_enabled of this user.",
            "example": false
          },
          "is_new_user": {
            "title": "is_new_user",
            "type": "boolean",
            "description": "The is_new_user of this user.",
            "example": false
          },
          "email_notification_only_offline": {
            "title": "email_notification_only_offline",
            "type": "boolean",
            "description": "The email_notification_only_offline of this user.",
            "example": false
          },
          "sms_notification_enabled": {
            "title": "sms_notification_enabled",
            "type": "boolean",
            "description": "The sms_notification_enabled of this user.",
            "example": false
          },
          "sms_notification_only_offline": {
            "title": "sms_notification_only_offline",
            "type": "boolean",
            "description": "The sms_notification_only_offline of this user.",
            "example": false
          }
        },
        "description": "User schema"
      },
      "UserAgentSkillMapping": {
        "title": "UserAgentSkillMapping",
        "required": [
          "user_account",
          "agent_skill_id"
        ],
        "type": "object",
        "properties": {
          "user_account": {
            "title": "user_account",
            "type": "string",
            "description": "The user_account of mapping.",
            "example": "pika@seasalt.ai"
          },
          "agent_skill_id": {
            "title": "agent_skill_id",
            "type": "string",
            "description": "The agent_skill_id of mapping.",
            "example": "uuid-v4-xxx"
          }
        },
        "description": "UserAgentSkillMapping schema"
      },
      "UserCreateRequest": {
        "title": "UserCreateRequest",
        "required": [
          "account",
          "password",
          "last_name",
          "email",
          "workspace_id",
          "workspace_role",
          "status"
        ],
        "type": "object",
        "properties": {
          "account": {
            "title": "account",
            "type": "string",
            "description": "The account of user.",
            "example": "satoshi"
          },
          "password": {
            "title": "password",
            "type": "string",
            "description": "The password of user.",
            "example": "19d6689c085"
          },
          "first_name": {
            "title": "first_name",
            "type": "string",
            "description": "The first name of user.",
            "example": "Satoshi"
          },
          "last_name": {
            "title": "last_name",
            "type": "string",
            "description": "The last name of user.",
            "example": "Nakamoto"
          },
          "email": {
            "title": "email",
            "type": "string",
            "description": "The email of user.",
            "example": "satoshi@nakamoto.ai"
          },
          "workspace_id": {
            "title": "workspace_id",
            "type": "string",
            "description": "The workspace_id of user.",
            "example": "11111111-2222-4444-3333-666666666666"
          },
          "workspace_role": {
            "title": "workspace_role",
            "allOf": [
              {
                "$ref": "#/components/schemas/UserWorkspaceRole"
              }
            ],
            "description": "The workspace_role of user in workspace.",
            "example": "OPERATOR"
          },
          "status": {
            "title": "status",
            "allOf": [
              {
                "$ref": "#/components/schemas/UserWorkspaceStatus"
              }
            ],
            "description": "The status of user in workspace.",
            "example": "ACTIVE"
          },
          "email_notification_enabled": {
            "title": "email_notification_enabled",
            "type": "boolean",
            "description": "The email_notification_enabled of this user.",
            "default": true,
            "example": false
          },
          "email_notification_only_offline": {
            "title": "email_notification_only_offline",
            "type": "boolean",
            "description": "The email_notification_only_offline of this user.",
            "default": true,
            "example": false
          }
        },
        "description": "User Create Request schema"
      },
      "UserLoginResponse": {
        "title": "UserLoginResponse",
        "required": [
          "account",
          "access_token",
          "refresh_token"
        ],
        "type": "object",
        "properties": {
          "account": {
            "title": "account",
            "type": "string",
            "description": "The account of login user.",
            "example": "satoshi"
          },
          "access_token": {
            "title": "access_token",
            "type": "string",
            "description": "The JWT token of this login.",
            "example": "xxxxx.yyyyy.zzzzz"
          },
          "token_type": {
            "title": "token_type",
            "type": "string",
            "description": "The token type.",
            "default": "bearer",
            "example": "bearer"
          },
          "refresh_token": {
            "title": "refresh_token",
            "type": "string",
            "description": "The refresh token for the login user.",
            "example": "ee9c91666a*****"
          }
        },
        "description": "User Login Response schema\n\nIt should have a token_type. In our case, as we are using \"Bearer\" tokens, the token type should be \"bearer\".\nAnd it should have an access_token, with a string containing our access JWT token."
      },
      "UserTheme": {
        "title": "UserTheme",
        "enum": [
          "pink",
          "dark",
          "light"
        ],
        "type": "string",
        "description": "User theme."
      },
      "UserUsageMessagesCount": {
        "title": "UserUsageMessagesCount",
        "required": [
          "account"
        ],
        "type": "object",
        "properties": {
          "mms_recieve_count": {
            "title": "mms_recieve_count",
            "type": "integer",
            "description": "The count of sending message with picture.",
            "default": 0,
            "example": 10
          },
          "mms_send_count": {
            "title": "mms_send_count",
            "type": "integer",
            "description": "The count of receiving message with picture.",
            "default": 0,
            "example": 10
          },
          "sms_send_count": {
            "title": "sms_send_count",
            "type": "integer",
            "description": "The count of receiving message.",
            "default": 0,
            "example": 10
          },
          "sms_recieve_count": {
            "title": "sms_recieve_count",
            "type": "integer",
            "description": "The count of sending message.",
            "default": 0,
            "example": 10
          },
          "voice_drop_count": {
            "title": "voice_drop_count",
            "type": "integer",
            "description": "The count of dialing calls in voice drop.",
            "default": 0,
            "example": 10
          },
          "total_count": {
            "title": "total_count",
            "type": "integer",
            "description": "The count of all received and sent messages of sms, mms and calls.",
            "default": 0,
            "example": 10
          },
          "lookup_count": {
            "title": "lookup_count",
            "type": "integer",
            "description": "The count of Twilio Lookup API queries.",
            "default": 0,
            "example": 10
          },
          "account": {
            "title": "account",
            "type": "string",
            "description": "The message count of user."
          }
        },
        "description": "Send, Receive messages count with from_datetime to to_datetime."
      },
      "UserWorkspaceRole": {
        "title": "UserWorkspaceRole",
        "enum": [
          "OWNER",
          "MANAGER",
          "OPERATOR"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "UserWorkspaceStatus": {
        "title": "UserWorkspaceStatus",
        "enum": [
          "ACTIVE",
          "INACTIVE",
          "INVITED"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "ValidationError": {
        "title": "ValidationError",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "type": "object",
        "properties": {
          "loc": {
            "title": "Location",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "msg": {
            "title": "Message",
            "type": "string"
          },
          "type": {
            "title": "Error Type",
            "type": "string"
          }
        }
      },
      "ValidationOption": {
        "title": "ValidationOption",
        "enum": [
          "SENDING_TIME",
          "PLAY_TIME_DURATION"
        ],
        "type": "string",
        "description": "Validation option."
      },
      "VerifiedCaller": {
        "title": "VerifiedCaller",
        "required": [
          "created_time",
          "updated_time",
          "id",
          "phone_number",
          "status"
        ],
        "type": "object",
        "properties": {
          "created_time": {
            "title": "Created Time",
            "type": "string",
            "description": "The time of this item created.",
            "format": "date-time",
            "example": "2025-07-10T02:40:38.825204"
          },
          "updated_time": {
            "title": "Updated Time",
            "type": "string",
            "description": "The time of this item updated.",
            "format": "date-time",
            "example": "2025-07-10T02:40:38.825222"
          },
          "id": {
            "title": "Id",
            "type": "string",
            "description": "The entry UUID.",
            "example": "0354fb10-9e18-4923-a213-6253800f8d01"
          },
          "phone_number": {
            "title": "Phone Number",
            "type": "string",
            "description": "Phone number of this verified caller.",
            "example": "+1234567890"
          },
          "name": {
            "title": "Name",
            "type": "string",
            "description": "Human readable name of this verified caller.",
            "example": "+1234567890"
          },
          "validation_code": {
            "title": "validation_code",
            "type": "string",
            "description": "validation_code of this verified caller",
            "example": "813955"
          },
          "status": {
            "title": "status",
            "allOf": [
              {
                "$ref": "#/components/schemas/CallerVerificationStatus"
              }
            ],
            "description": "status of this verified caller",
            "example": "failed"
          },
          "call_id": {
            "title": "call_id",
            "type": "string",
            "description": "call_id of this verified caller",
            "example": "CAca1ce90f90c7609477eee1f6bbc75a50"
          }
        },
        "description": "VerifiedCaller schema."
      },
      "VoiceCallData": {
        "title": "VoiceCallData",
        "required": [
          "id",
          "account_sid",
          "call_sid",
          "type",
          "direction",
          "from_number",
          "to_number",
          "status",
          "workspace_id",
          "phone_id",
          "duration",
          "created_time"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "id",
            "type": "string",
            "description": "The voice call id",
            "example": "0354fb10-9e18-4923-a213-6253800f8d01"
          },
          "contact_name": {
            "title": "name",
            "type": "string",
            "description": "The voice call contact name",
            "example": "John Doe"
          },
          "stream_sid": {
            "title": "stream_sid",
            "type": "string",
            "description": "The twilio stream sid",
            "example": "MZXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
          },
          "account_sid": {
            "title": "account_sid",
            "type": "string",
            "description": "The twilio account sid",
            "example": "ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
          },
          "call_sid": {
            "title": "call_sid",
            "type": "string",
            "description": "The twilio call sid",
            "example": "CAXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
          },
          "type": {
            "title": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/CallType"
              }
            ],
            "description": "The call type"
          },
          "direction": {
            "title": "direction",
            "allOf": [
              {
                "$ref": "#/components/schemas/CallDirection"
              }
            ],
            "description": "The call direction"
          },
          "from_number": {
            "title": "from_number",
            "type": "string",
            "description": "The phone number that made this call",
            "example": "+1234567890"
          },
          "to_number": {
            "title": "to_number",
            "type": "string",
            "description": "The phone number that received this call",
            "example": "+1234567890"
          },
          "status": {
            "title": "status",
            "allOf": [
              {
                "$ref": "#/components/schemas/CallStatus"
              }
            ],
            "description": "The call status"
          },
          "user_account": {
            "title": "user_account",
            "type": "string",
            "description": "The user account deals with the voice call"
          },
          "workspace_id": {
            "title": "workspace_id",
            "type": "string",
            "description": "The workspace id",
            "example": "0354fb10-9e18-4923-a213-6253800f8d01"
          },
          "phone_id": {
            "title": "phone_id",
            "type": "string",
            "description": "The phone id",
            "example": "0354fb10-9e18-4923-a213-6253800f8d01"
          },
          "duration": {
            "title": "duration",
            "type": "integer",
            "description": "The call duration in seconds",
            "example": 0
          },
          "created_time": {
            "title": "Created Time",
            "type": "string",
            "description": "External timestamp when this object was created.",
            "format": "date-time",
            "example": "2025-07-10T02:41:05.344876"
          }
        },
        "description": "Call response schema"
      },
      "WebhookCampaignContact": {
        "title": "WebhookCampaignContact",
        "required": [
          "name",
          "phone"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "name",
            "type": "string",
            "description": "The contact name of this campaign.",
            "example": "Pikachu"
          },
          "phone": {
            "title": "phone",
            "type": "string",
            "description": "The contact phone of this campaign.",
            "example": "+12345678900"
          },
          "contact_field_data": {
            "title": "contact_field_data",
            "type": "object",
            "description": "The raw data of the contact."
          }
        },
        "description": "WebhookCampaignContact schema."
      },
      "WebhookCampaignRequest": {
        "title": "WebhookCampaignRequest",
        "required": [
          "contacts"
        ],
        "type": "object",
        "properties": {
          "contacts": {
            "title": "contacts",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebhookCampaignContact"
            },
            "description": "The contacts of this campaign."
          },
          "is_dry_run": {
            "title": "Is Dry Run",
            "type": "boolean",
            "description": "Has true if this is an auto dialer campaign dry run.",
            "default": false
          }
        },
        "description": "WebhookCampaignRequest schema."
      },
      "WhatsAppBusinessAccountTemplate": {
        "title": "WhatsAppBusinessAccountTemplate",
        "required": [
          "name",
          "parameter_format",
          "language",
          "status",
          "category",
          "id"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "name",
            "type": "string",
            "description": "whatsapp business account template name.",
            "example": "template_name"
          },
          "parameter_format": {
            "title": "parameter_format",
            "allOf": [
              {
                "$ref": "#/components/schemas/WhatsAppBusinessPlatformTemplateParameterFormat"
              }
            ],
            "description": "whatsapp business account template parameter format.",
            "example": "POSITIONAL"
          },
          "language": {
            "title": "language",
            "allOf": [
              {
                "$ref": "#/components/schemas/WhatsAppBusinessPlatformTemplateLanguage"
              }
            ],
            "description": "whatsapp business account template language.",
            "example": "en_US"
          },
          "status": {
            "title": "status",
            "allOf": [
              {
                "$ref": "#/components/schemas/WhatsAppBusinessPlatformTemplateStatus"
              }
            ],
            "description": "whatsapp business account template status.",
            "example": "APPROVED"
          },
          "category": {
            "title": "category",
            "allOf": [
              {
                "$ref": "#/components/schemas/WhatsAppBusinessPlatformTemplateCategory"
              }
            ],
            "description": "whatsapp business account template category.",
            "example": "MARKETING"
          },
          "components": {
            "title": "components",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WhatsAppBusinessAccountTemplateComponent"
            },
            "description": "whatsapp business account template components."
          },
          "id": {
            "title": "id",
            "type": "string",
            "description": "whatsapp business account template id.",
            "example": "1894111111111111"
          }
        }
      },
      "WhatsAppBusinessAccountTemplateComponent": {
        "title": "WhatsAppBusinessAccountTemplateComponent",
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WhatsAppBusinessPlatformTemplateComponentType"
              }
            ],
            "description": "whatsapp business account template component type.",
            "example": "HEADER"
          },
          "format": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WhatsAppBusinessPlatformTemplateComponentFormat"
              }
            ],
            "description": "whatsapp business account template component format.",
            "example": "TEXT"
          },
          "text": {
            "title": "Text",
            "type": "string",
            "description": "whatsapp business account template component text.",
            "example": "Hello 1, this is a test message."
          },
          "example": {
            "title": "Example",
            "type": "object",
            "description": "whatsapp business account template component example.",
            "example": {
              "body_text": [
                [
                  "User"
                ]
              ]
            }
          },
          "buttons": {
            "title": "Buttons",
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "whatsapp business account template component buttons.",
            "example": [
              {
                "type": "QUICK_REPLY",
                "text": "Button Content"
              }
            ]
          }
        }
      },
      "WhatsAppBusinessPlatformAccountStatus": {
        "title": "WhatsAppBusinessPlatformAccountStatus",
        "enum": [
          "PENDING",
          "APPROVED",
          "REJECTED"
        ],
        "type": "string",
        "description": "WhatsAppBusinessPlatformAccountStatus."
      },
      "WhatsAppBusinessPlatformConfig": {
        "title": "WhatsAppBusinessPlatformConfig",
        "type": "object",
        "properties": {
          "config_id": {
            "title": "Config Id",
            "type": "string",
            "description": "WhatsApp Business Platform Config ID.",
            "default": "",
            "example": "1111111111111111"
          },
          "app_id": {
            "title": "App Id",
            "type": "string",
            "description": "WhatsApp Business Platform App ID.",
            "default": "",
            "example": "111111111111111"
          },
          "api_version": {
            "title": "Api Version",
            "type": "string",
            "description": "WhatsApp Business Platform API Version.",
            "default": "",
            "example": "v21.0"
          }
        },
        "description": "WhatsApp Business Platform Config."
      },
      "WhatsAppBusinessPlatformTemplate": {
        "title": "WhatsAppBusinessPlatformTemplate",
        "required": [
          "template",
          "name",
          "language",
          "status",
          "category",
          "id"
        ],
        "type": "object",
        "properties": {
          "template": {
            "title": "template",
            "type": "string",
            "description": "The template content of message template resource",
            "example": "Hi {name}, How's going?"
          },
          "name": {
            "title": "name",
            "type": "string",
            "description": "The name of message",
            "example": "Greeting1"
          },
          "header_format": {
            "title": "header_format",
            "allOf": [
              {
                "$ref": "#/components/schemas/WhatsAppBusinessPlatformTemplateComponentFormat"
              }
            ],
            "description": "The header format of message template",
            "example": "TEXT"
          },
          "header_template": {
            "title": "header_template",
            "type": "string",
            "description": "The header template of message template",
            "example": "Hi pike, how's going?"
          },
          "language": {
            "title": "language",
            "allOf": [
              {
                "$ref": "#/components/schemas/WhatsAppBusinessPlatformTemplateLanguage"
              }
            ],
            "description": "The language of message template",
            "example": "en_US"
          },
          "status": {
            "title": "status",
            "allOf": [
              {
                "$ref": "#/components/schemas/WhatsAppBusinessPlatformTemplateStatus"
              }
            ],
            "description": "The status of message template",
            "example": "APPROVED"
          },
          "category": {
            "title": "category",
            "allOf": [
              {
                "$ref": "#/components/schemas/WhatsAppBusinessPlatformTemplateCategory"
              }
            ],
            "description": "The category of message template",
            "example": "MARKETING"
          },
          "id": {
            "title": "id",
            "type": "string",
            "description": "The id of this message template",
            "example": "1311824933411111"
          }
        },
        "description": "WhatsApp Business Platform Template schema"
      },
      "WhatsAppBusinessPlatformTemplateCategory": {
        "title": "WhatsAppBusinessPlatformTemplateCategory",
        "enum": [
          "MARKETING",
          "UTILITY",
          "AUTHENTICATION",
          "ACCOUNT_UPDATE",
          "PAYMENT_UPDATE",
          "PERSONAL_FINANCE_UPDATE",
          "SHIPPING_UPDATE",
          "RESERVATION_UPDATE",
          "ISSUE_RESOLUTION",
          "APPOINTMENT_UPDATE",
          "TRANSPORTATION_UPDATE",
          "TICKET_UPDATE",
          "ALERT_UPDATE",
          "AUTO_REPLY",
          "TRANSACTIONAL",
          "OTP"
        ],
        "type": "string",
        "description": "WhatsAppBusinessPlatformTemplateCategory."
      },
      "WhatsAppBusinessPlatformTemplateComponentFormat": {
        "title": "WhatsAppBusinessPlatformTemplateComponentFormat",
        "enum": [
          "TEXT",
          "IMAGE",
          "DOCUMENT",
          "VIDEO",
          "LOCATION"
        ],
        "type": "string",
        "description": "WhatsAppBusinessPlatformTemplateComponentFormat."
      },
      "WhatsAppBusinessPlatformTemplateComponentType": {
        "title": "WhatsAppBusinessPlatformTemplateComponentType",
        "enum": [
          "HEADER",
          "BODY",
          "BUTTONS",
          "FOOTER"
        ],
        "type": "string",
        "description": "WhatsAppBusinessPlatformTemplateComponentType."
      },
      "WhatsAppBusinessPlatformTemplateLanguage": {
        "title": "WhatsAppBusinessPlatformTemplateLanguage",
        "enum": [
          "af",
          "sq",
          "ar",
          "az",
          "bn",
          "bg",
          "ca",
          "zh_CN",
          "zh_HK",
          "zh_TW",
          "hr",
          "cs",
          "da",
          "nl",
          "en",
          "en_GB",
          "en_US",
          "et",
          "fil",
          "fi",
          "fr",
          "ka",
          "de",
          "el",
          "gu",
          "ha",
          "he",
          "hi",
          "hu",
          "id",
          "ga",
          "it",
          "ja",
          "kn",
          "kk",
          "rw_RW",
          "ko",
          "ky_KG",
          "lo",
          "lv",
          "lt",
          "mk",
          "ms",
          "ml",
          "mr",
          "nb",
          "fa",
          "pl",
          "pt_BR",
          "pt_PT",
          "pa",
          "ro",
          "ru",
          "sr",
          "sk",
          "sl",
          "es",
          "es_AR",
          "es_ES",
          "es_MX",
          "sw",
          "sv",
          "ta",
          "te",
          "th",
          "tr",
          "uk",
          "ur",
          "uz",
          "vi",
          "zu"
        ],
        "type": "string",
        "description": "WhatsAppBusinessPlatformTemplateLanguage."
      },
      "WhatsAppBusinessPlatformTemplateParameterFormat": {
        "title": "WhatsAppBusinessPlatformTemplateParameterFormat",
        "enum": [
          "POSITIONAL",
          "NAMED"
        ],
        "type": "string",
        "description": "WhatsAppBusinessPlatformTemplateParameterFormat."
      },
      "WhatsAppBusinessPlatformTemplateStatus": {
        "title": "WhatsAppBusinessPlatformTemplateStatus",
        "enum": [
          "APPROVED",
          "REJECTED",
          "PENDING",
          "IN_APPEAL",
          "PENDING_DELETION",
          "DELETED",
          "DISABLED",
          "PAUSED",
          "LIMIT_EXCEEDED",
          "ARCHIVED"
        ],
        "type": "string",
        "description": "WhatsAppBusinessPlatformTemplateStatus."
      },
      "WhatsAppMessageStatus": {
        "title": "WhatsAppMessageStatus",
        "enum": [
          "initialized",
          "sent",
          "delivered",
          "read",
          "failed",
          "deleted",
          "warning"
        ],
        "type": "string",
        "description": "WhatsAppMessageStatus."
      },
      "WhatsAppQrCodes": {
        "title": "WhatsAppQrCodes",
        "required": [
          "code",
          "start_time",
          "end_time"
        ],
        "type": "object",
        "properties": {
          "code": {
            "title": "code",
            "type": "string",
            "description": "The raw code of this qrcode.",
            "example": "4ZuqtxsbVb"
          },
          "start_time": {
            "title": "start_time",
            "type": "string",
            "description": "The start time of this qrcode.",
            "format": "date-time",
            "example": "2025-07-10T02:40:43.737884"
          },
          "end_time": {
            "title": "end_time",
            "type": "string",
            "description": "The end_time of this qrcode.",
            "format": "date-time",
            "example": "2025-07-10T02:40:43.737901"
          }
        },
        "description": "WhatsAppQrCodes schema"
      },
      "WhatsAppQrCodesResponse": {
        "title": "WhatsAppQrCodesResponse",
        "required": [
          "id",
          "qrcodes"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "id",
            "type": "string",
            "description": "The id of this whatsapp connection."
          },
          "qrcodes": {
            "title": "qrcodes",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WhatsAppQrCodes"
            },
            "description": "The qrcodes of this whatsapp connection."
          }
        },
        "description": "WhatsAppQrCodesResponse schema"
      },
      "WhatsAppStatus": {
        "title": "WhatsAppStatus",
        "enum": [
          "CONNECTING",
          "CONNECTED",
          "DISCONNECTED",
          "VERIFIED",
          "UNVERIFIED",
          "EXPIRED"
        ],
        "type": "string",
        "description": "WhatsAppStatus."
      },
      "WhatsappBusinessPlatformCode": {
        "title": "WhatsappBusinessPlatformCode",
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "code": {
            "title": "code",
            "type": "string",
            "description": "WhatsApp embedded signup returned code.",
            "example": "AQDSADjqtatdSb33N0lsLwSo4K4yBFP2Qc2lCQFnu4fGiVMjY7npTZWsWiJ1h_lY7fvrP6NuWEU8ao-jMqgQluhW8FIFXRFfvLVhNnIGAOSfwULYVDoYsYbIh9TzFKHNR2Dt5cH4b8FEPol-W2-4qtbBLyYCUHfn8Nkmp6cav4jI3_6hRtSGsqJqP-CE7cn-lFzT7KDaBZxB70cX0mH7kPNgCT1NOgQhrorsyfNCKlnFe6csPJr0097DmLaJwMYiHvl-IMvD5FzSNOfipkXba7ABolZZMrshEBvhOkO9raswXZbBlHFA1Uk6_vJRM6qX5aAe26Sa-X2tK5YLOhuZpNby1JcwDmnlxaRBb5-PyjJ1dp74GlCK1oo29tsE-9QV8XpkIdhMp6g6fQvthv9TWDnk"
          },
          "user_id": {
            "title": "user_id",
            "type": "string",
            "description": "WhatsApp embedded signup returned user id, Meta always returns null in this case."
          },
          "expires_in": {
            "title": "expires_in",
            "type": "string",
            "description": "Whatsapp embedded signup returned expires in, Meta always returns null in this case"
          }
        },
        "description": "WhatsappBusinessPlatformCode schema."
      },
      "WhatsappBusinessPlatformData": {
        "title": "WhatsappBusinessPlatformData",
        "required": [
          "workspace_id",
          "service_name",
          "service_account_id",
          "id",
          "is_deleted",
          "status"
        ],
        "type": "object",
        "properties": {
          "workspace_id": {
            "title": "workspace_id",
            "type": "string",
            "description": "Workspace id.",
            "example": "11111111-2222-4444-3333-555555555555"
          },
          "service_name": {
            "title": "service_name",
            "type": "string",
            "description": "Service name.",
            "example": "WHATSAPP_BUSINESS_PLATFORM"
          },
          "service_account_id": {
            "title": "service_account_id",
            "type": "string",
            "description": "Service account id.",
            "example": "123456789011111"
          },
          "service_account_name": {
            "title": "service_account_name",
            "type": "string",
            "description": "Service account name.",
            "example": "John Doe"
          },
          "id": {
            "title": "id",
            "type": "string",
            "description": "Service provider account id.",
            "example": "11111111-2222-4444-3333-555555555555"
          },
          "is_deleted": {
            "title": "is_deleted",
            "type": "boolean",
            "description": "Service provider account is_deleted.",
            "example": true
          },
          "status": {
            "title": "status",
            "allOf": [
              {
                "$ref": "#/components/schemas/WhatsAppBusinessPlatformAccountStatus"
              }
            ],
            "description": "Service account status."
          },
          "phones": {
            "title": "phones",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/app__api__v1__schema__phone__Phone"
            },
            "description": "Service provider account phones."
          }
        },
        "description": "WhatsappBusinessPlatformData schema."
      },
      "WhatsappIntegration": {
        "title": "WhatsappIntegration",
        "required": [
          "whatsapp_account_id",
          "phone_number",
          "phone_id",
          "whatsapp_device_id",
          "whatsapp_status",
          "phone_name",
          "created_time",
          "updated_time",
          "workspace_id"
        ],
        "type": "object",
        "properties": {
          "type": {
            "title": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/WorkspaceIntegrationType"
              }
            ],
            "description": "The type of workspace integration",
            "default": "WHATSAPP",
            "example": "WHATSAPP"
          },
          "whatsapp_account_id": {
            "title": "whatsapp_account_id",
            "type": "string",
            "description": "The whatsapp account of whatsapp integration",
            "example": "+125673@s.whatapp.net"
          },
          "phone_number": {
            "title": "phone_number",
            "type": "string",
            "description": "The phone number of whatsapp integration",
            "example": "+125673@s.whatapp.net"
          },
          "phone_id": {
            "title": "phone_id",
            "type": "string",
            "description": "The phone_id of whatsapp integration",
            "example": "+125673@s.whatapp.net"
          },
          "whatsapp_device_id": {
            "title": "whatsapp_device_id",
            "type": "string",
            "description": "The whatsapp device_id of whatsapp integration",
            "example": "+125673:12@s.whatapp.net"
          },
          "whatsapp_status": {
            "title": "whatsapp_status",
            "allOf": [
              {
                "$ref": "#/components/schemas/WhatsAppStatus"
              }
            ],
            "description": "The whatsapp status of whatsapp phone connection",
            "example": "CONNECTING"
          },
          "phone_name": {
            "title": "phone_name",
            "type": "string",
            "description": "The whatsapp phone_name of whatsapp integration",
            "example": "Test name"
          },
          "created_time": {
            "title": "created_time",
            "type": "string",
            "description": "The created time of whatsapp phone connection",
            "format": "date-time",
            "example": "2025-07-10T02:40:43.714538"
          },
          "updated_time": {
            "title": "updated_time",
            "type": "string",
            "description": "The updated time of whatsapp phone connection",
            "format": "date-time",
            "example": "2025-07-10T02:40:43.714560"
          },
          "workspace_id": {
            "title": "workspace_id",
            "type": "string",
            "description": "The workspace id",
            "example": "11111111-2222-4444-3333-555555555555"
          },
          "whatsapp_session_id": {
            "title": "whatsapp_session_id",
            "type": "string",
            "description": "The whatsapp_session_id of whatsapp phone connection",
            "example": "11111111-2222-4444-3333-555555555555"
          },
          "progress": {
            "title": "progress",
            "type": "integer",
            "description": "The progress when whatsapp phone under CONNECTING status",
            "example": 500
          }
        }
      },
      "WidgetLanguage": {
        "title": "WidgetLanguage",
        "enum": [
          "en",
          "zhTw"
        ],
        "type": "string",
        "description": "Widget language that is compatible ro seachat conversation config"
      },
      "WidgetResponse": {
        "title": "WidgetResponse",
        "required": [
          "id",
          "phone_id",
          "widget_logo",
          "widget_title",
          "widget_subtitle",
          "language",
          "font_size",
          "style",
          "max_character",
          "opening_message",
          "gate_message",
          "icon",
          "popup_message",
          "enabled_types",
          "is_enabled"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "id",
            "type": "string",
            "description": "The id of widget.",
            "example": "11111111-2222-4444-3333-555555555555"
          },
          "phone_id": {
            "title": "phone_id",
            "type": "string",
            "description": "The phone_id of widget.",
            "example": "11111111-2222-4444-3333-555555555555"
          },
          "widget_logo": {
            "title": "widget_logo",
            "type": "string",
            "description": "The widget logo url of widget.",
            "example": "https://seax-bulksms.s3.amazonaws.com/pic/xxx.png"
          },
          "widget_title": {
            "title": "widget_title",
            "type": "string",
            "description": "The widget title of widget.",
            "example": "The cardinal camera"
          },
          "widget_subtitle": {
            "title": "widget_subtitle",
            "type": "string",
            "description": "The widget subtitle of widget.",
            "example": "agent01"
          },
          "language": {
            "title": "language",
            "allOf": [
              {
                "$ref": "#/components/schemas/WidgetLanguage"
              }
            ],
            "description": "The language of widget.",
            "example": "en"
          },
          "font_size": {
            "title": "font_size",
            "type": "integer",
            "description": "The front size of text of widget.",
            "example": 12
          },
          "style": {
            "title": "style",
            "allOf": [
              {
                "$ref": "#/components/schemas/Style"
              }
            ],
            "description": "The style of widget."
          },
          "max_character": {
            "title": "max_character",
            "type": "integer",
            "description": "The max character of widget.",
            "example": 150
          },
          "opening_message": {
            "title": "opening_message",
            "type": "string",
            "description": "The opening message of widget.",
            "example": "Hello"
          },
          "gate_message": {
            "title": "gate_message",
            "type": "string",
            "description": "The gate message of widget.",
            "example": "You can leave your message here."
          },
          "icon": {
            "title": "icon",
            "type": "string",
            "description": "The icon of widget.",
            "example": "https://seax-bulksms.s3.amazonaws.com/pic/xxx.png"
          },
          "popup_message": {
            "title": "popup_message",
            "type": "string",
            "description": "The popup message of widget.",
            "example": "You can leave your message here."
          },
          "enabled_types": {
            "title": "enabled_types",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WidgetType"
            },
            "description": "The enabled types of widget."
          },
          "is_enabled": {
            "title": "is_enabled",
            "type": "boolean",
            "description": "The is_enabled of Widget.",
            "example": true
          }
        },
        "description": "WidgetResponse schema."
      },
      "WidgetType": {
        "title": "WidgetType",
        "enum": [
          "SURVEY_FORM"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "Workspace": {
        "title": "Workspace",
        "required": [
          "id",
          "name",
          "timezone",
          "created_time",
          "updated_time"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "id",
            "type": "string",
            "description": "The id of workspace.",
            "example": "11111111-2222-4444-3333-555555555555"
          },
          "name": {
            "title": "name",
            "type": "string",
            "description": "The name of workspace.",
            "example": "Seasalt"
          },
          "brand_registration_id": {
            "title": "brand_registration_id",
            "type": "string",
            "description": "The brand_registration_id of workspace.",
            "example": "BR00000000000000000000000000000000"
          },
          "timezone": {
            "title": "timezone",
            "type": "string",
            "description": "The timezone of workspace.",
            "example": "America/Los_Angeles"
          },
          "logo_url": {
            "title": "logo_url",
            "type": "string",
            "description": "The logo url of workspace.",
            "example": "https://seax-bulksms.s3.amazonaws.com/test.jpg"
          },
          "enable_global_link_shortening": {
            "title": "enable_global_link_shortening",
            "type": "boolean",
            "description": "Whether the link shortening of a workspace is enabled. it can be overwritten by individual campaign.",
            "default": false,
            "example": false
          },
          "link_shortening_fallback_url": {
            "title": "link_shortening_fallback_url",
            "type": "string",
            "description": "The link shortening fallback url of workspace.",
            "default": "https://i.seasalt.ai",
            "example": "https://i.seasalt.ai"
          },
          "link_shortening_url": {
            "title": "link_shortening_url",
            "type": "string",
            "description": "The link shortening url of workspace.",
            "default": "https://i.seasalt.ai",
            "example": "https://i.seasalt.ai"
          },
          "created_time": {
            "title": "created_time",
            "type": "string",
            "description": "The time of workspace created.",
            "format": "date-time",
            "example": "2025-07-10T02:40:43.634612"
          },
          "updated_time": {
            "title": "updated_time",
            "type": "string",
            "description": "The time of workspace updated.",
            "format": "date-time",
            "example": "2025-07-10T02:40:43.634623"
          },
          "inviter": {
            "title": "inviter",
            "allOf": [
              {
                "$ref": "#/components/schemas/User"
              }
            ],
            "description": "The inviter of workspace."
          },
          "business_name": {
            "title": "business_name",
            "type": "string",
            "description": "The business name of workspace.",
            "example": "Seasalt"
          },
          "business_address": {
            "title": "business_address",
            "type": "string",
            "description": "The business address of workspace.",
            "example": "Seasalt"
          },
          "is_approved": {
            "title": "The workspace has been approved & configured with Twilio",
            "type": "boolean",
            "description": "The workspace has been approved & configured with Twilio.",
            "default": false,
            "example": false
          },
          "dialpad_available": {
            "title": "dialpad_available",
            "type": "boolean",
            "description": "The dialpad_available of workspace.",
            "default": false,
            "example": false
          }
        },
        "description": "Workspace schema."
      },
      "WorkspaceIntegrationType": {
        "title": "WorkspaceIntegrationType",
        "enum": [
          "WHATSAPP"
        ],
        "type": "string",
        "description": "Workspace Integration."
      },
      "WorkspaceUserWithPhone": {
        "title": "WorkspaceUserWithPhone",
        "required": [
          "account",
          "last_name",
          "email",
          "language",
          "theme",
          "date_format",
          "time_format",
          "created_time",
          "email_notification_enabled",
          "is_new_user",
          "email_notification_only_offline",
          "sms_notification_enabled",
          "sms_notification_only_offline"
        ],
        "type": "object",
        "properties": {
          "account": {
            "title": "account",
            "type": "string",
            "description": "The account of this user.",
            "example": "satoshi"
          },
          "first_name": {
            "title": "first_name",
            "type": "string",
            "description": "The first_name of this user.",
            "example": "Satoshi"
          },
          "last_name": {
            "title": "last_name",
            "type": "string",
            "description": "The last_name of this user.",
            "example": "Nakamoto"
          },
          "email": {
            "title": "email",
            "type": "string",
            "description": "The email of this user.",
            "example": "satoshi@btc.com"
          },
          "phone": {
            "title": "phone",
            "type": "string",
            "description": "The phone of this user.",
            "example": "+1230000000"
          },
          "language": {
            "title": "language",
            "allOf": [
              {
                "$ref": "#/components/schemas/LanguageCode"
              }
            ],
            "description": "The language of this user.",
            "example": "en-US"
          },
          "theme": {
            "title": "theme",
            "allOf": [
              {
                "$ref": "#/components/schemas/UserTheme"
              }
            ],
            "description": "The theme of this user.",
            "example": "dark"
          },
          "date_format": {
            "title": "date_format",
            "type": "string",
            "description": "The date_format of this user.",
            "example": "MM/dd/yyyy"
          },
          "time_format": {
            "title": "time_format",
            "type": "string",
            "description": "The time_format of this user.",
            "example": "HH:mm:ss"
          },
          "created_time": {
            "title": "created_time",
            "type": "string",
            "description": "The created time of this user.",
            "format": "date-time",
            "example": "2009-01-03T18:15:00"
          },
          "email_notification_enabled": {
            "title": "email_notification_enabled",
            "type": "boolean",
            "description": "The email_notification_enabled of this user.",
            "example": false
          },
          "is_new_user": {
            "title": "is_new_user",
            "type": "boolean",
            "description": "The is_new_user of this user.",
            "example": false
          },
          "email_notification_only_offline": {
            "title": "email_notification_only_offline",
            "type": "boolean",
            "description": "The email_notification_only_offline of this user.",
            "example": false
          },
          "sms_notification_enabled": {
            "title": "sms_notification_enabled",
            "type": "boolean",
            "description": "The sms_notification_enabled of this user.",
            "example": false
          },
          "sms_notification_only_offline": {
            "title": "sms_notification_only_offline",
            "type": "boolean",
            "description": "The sms_notification_only_offline of this user.",
            "example": false
          },
          "phones": {
            "title": "phones",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/app__api__v1__schema__user__Phone"
            },
            "description": "The phones of this user."
          },
          "workspace_role": {
            "title": "workspace_role",
            "allOf": [
              {
                "$ref": "#/components/schemas/UserWorkspaceRole"
              }
            ],
            "description": "The workspace_role of user in workspace.",
            "example": "OPERATOR"
          },
          "status": {
            "title": "status",
            "allOf": [
              {
                "$ref": "#/components/schemas/UserWorkspaceStatus"
              }
            ],
            "description": "The status of user in workspace.",
            "example": "ACTIVE"
          },
          "preferred_campaign_timezone": {
            "title": "preferred_campaign_timezone",
            "type": "string",
            "description": "User preferred timezone information for campaign in workspace.",
            "example": "America/Los_Angeles"
          },
          "agent_skills": {
            "title": "agent_skills",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AgentSkill"
            },
            "description": "The agent_skills of this user in the workspace."
          }
        },
        "description": "User with phone schema"
      },
      "WorkspaceWithRole": {
        "title": "WorkspaceWithRole",
        "required": [
          "id",
          "name",
          "timezone",
          "created_time",
          "updated_time"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "id",
            "type": "string",
            "description": "The id of workspace.",
            "example": "11111111-2222-4444-3333-555555555555"
          },
          "name": {
            "title": "name",
            "type": "string",
            "description": "The name of workspace.",
            "example": "Seasalt"
          },
          "brand_registration_id": {
            "title": "brand_registration_id",
            "type": "string",
            "description": "The brand_registration_id of workspace.",
            "example": "BR00000000000000000000000000000000"
          },
          "timezone": {
            "title": "timezone",
            "type": "string",
            "description": "The timezone of workspace.",
            "example": "America/Los_Angeles"
          },
          "logo_url": {
            "title": "logo_url",
            "type": "string",
            "description": "The logo url of workspace.",
            "example": "https://seax-bulksms.s3.amazonaws.com/test.jpg"
          },
          "enable_global_link_shortening": {
            "title": "enable_global_link_shortening",
            "type": "boolean",
            "description": "Whether the link shortening of a workspace is enabled. it can be overwritten by individual campaign.",
            "default": false,
            "example": false
          },
          "link_shortening_fallback_url": {
            "title": "link_shortening_fallback_url",
            "type": "string",
            "description": "The link shortening fallback url of workspace.",
            "default": "https://i.seasalt.ai",
            "example": "https://i.seasalt.ai"
          },
          "link_shortening_url": {
            "title": "link_shortening_url",
            "type": "string",
            "description": "The link shortening url of workspace.",
            "default": "https://i.seasalt.ai",
            "example": "https://i.seasalt.ai"
          },
          "created_time": {
            "title": "created_time",
            "type": "string",
            "description": "The time of workspace created.",
            "format": "date-time",
            "example": "2025-07-10T02:40:43.634612"
          },
          "updated_time": {
            "title": "updated_time",
            "type": "string",
            "description": "The time of workspace updated.",
            "format": "date-time",
            "example": "2025-07-10T02:40:43.634623"
          },
          "inviter": {
            "title": "inviter",
            "allOf": [
              {
                "$ref": "#/components/schemas/User"
              }
            ],
            "description": "The inviter of workspace."
          },
          "business_name": {
            "title": "business_name",
            "type": "string",
            "description": "The business name of workspace.",
            "example": "Seasalt"
          },
          "business_address": {
            "title": "business_address",
            "type": "string",
            "description": "The business address of workspace.",
            "example": "Seasalt"
          },
          "is_approved": {
            "title": "The workspace has been approved & configured with Twilio",
            "type": "boolean",
            "description": "The workspace has been approved & configured with Twilio.",
            "default": false,
            "example": false
          },
          "dialpad_available": {
            "title": "dialpad_available",
            "type": "boolean",
            "description": "The dialpad_available of workspace.",
            "default": false,
            "example": false
          },
          "workspace_role": {
            "title": "workspace_role",
            "allOf": [
              {
                "$ref": "#/components/schemas/UserWorkspaceRole"
              }
            ],
            "description": "The workspace_role of user in this workspace.",
            "example": "MANAGER"
          },
          "workspace_owner": {
            "title": "workspace_owner",
            "allOf": [
              {
                "$ref": "#/components/schemas/User"
              }
            ],
            "description": "The workspace_owner in this workspace."
          },
          "workspace_user_counts": {
            "title": "workspace_user_counts",
            "type": "integer",
            "description": "The workspace_user_counts in this workspace."
          },
          "status": {
            "title": "status",
            "allOf": [
              {
                "$ref": "#/components/schemas/UserWorkspaceStatus"
              }
            ],
            "description": "The status of user in this workspace.",
            "example": "ACTIVE"
          },
          "preferred_campaign_timezone": {
            "title": "preferred_campaign_timezone",
            "type": "string",
            "description": "User preferred timezone information for campaign in workspace.",
            "example": "America/Los_Angeles"
          }
        },
        "description": "WorkspaceWithRole schema"
      },
      "app__api__v1__schema__phone__Phone": {
        "title": "Phone",
        "required": [
          "name",
          "enabled",
          "phone",
          "country",
          "enabled_generic_reply",
          "enabled_dnc_reply",
          "type",
          "source",
          "created_time",
          "updated_time",
          "id"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "name",
            "type": "string",
            "description": "The name of phone number.",
            "example": "tech support"
          },
          "enabled": {
            "title": "enabled",
            "type": "boolean",
            "description": "Indicate whether this phone is enabled."
          },
          "phone": {
            "title": "phone",
            "type": "string",
            "description": "The phone number.",
            "example": "+886912123456"
          },
          "country": {
            "title": "country",
            "type": "string",
            "description": "The country code is on ISO 3166 format",
            "example": "US"
          },
          "whatsapp_device_id": {
            "title": "whatsapp_device_id",
            "type": "string",
            "description": "The whatsapp_device_id of phone number",
            "example": "1234567890:98@s.whatsapp.net"
          },
          "whatsapp_status": {
            "title": "whatsapp_status",
            "allOf": [
              {
                "$ref": "#/components/schemas/WhatsAppStatus"
              }
            ],
            "description": "The whatsapp_status of phone number",
            "example": "CONNECTING"
          },
          "generic_reply_message": {
            "title": "generic_reply_message",
            "type": "string",
            "description": "The default reply message when receive message from client if doesn't match any keyword",
            "default": "",
            "example": "Welcome! If you want to subscribe daily report, please reply 'DAILY'."
          },
          "dnc_reply_message": {
            "title": "dnc_reply_message",
            "type": "string",
            "description": "The dnc message when receive message from client",
            "default": "",
            "example": "Ok, we won't send you any other message."
          },
          "enabled_generic_reply": {
            "title": "enabled_generic_reply",
            "type": "boolean",
            "description": "Whether the generic reply message enabled",
            "example": false
          },
          "enabled_dnc_reply": {
            "title": "enabled_dnc_reply",
            "type": "boolean",
            "description": "Whether the dnc reply message enabled",
            "example": false
          },
          "type": {
            "title": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PhoneType"
              }
            ],
            "description": "The type of this phone.",
            "example": "LOCAL"
          },
          "source": {
            "title": "source",
            "allOf": [
              {
                "$ref": "#/components/schemas/PhoneSource"
              }
            ],
            "description": "The source of this phone.",
            "example": "TWILIO"
          },
          "phone_capability": {
            "title": "phone_capability",
            "allOf": [
              {
                "$ref": "#/components/schemas/PhoneCapability"
              }
            ],
            "description": "Capability of this phone."
          },
          "is_default": {
            "title": "is_default",
            "type": "boolean",
            "description": "Indicate whether the phone is the default phone of workspace.",
            "default": false,
            "example": false
          },
          "enabled_recipient": {
            "title": "enabled_recipient",
            "type": "boolean",
            "description": "enabled_recipient",
            "default": false,
            "example": false
          },
          "whatsapp_business_account_phone_id": {
            "title": "whatsapp_business_account_phone_id",
            "type": "string",
            "description": "The whatsapp_business_account_phone_id if phone is WHATSAPP type.",
            "example": "555555555555"
          },
          "dialpad_available": {
            "title": "dialpad_available",
            "type": "boolean",
            "description": "Indicate whether the phone is dialpad available.",
            "default": false,
            "example": false
          },
          "created_time": {
            "title": "Created Time",
            "type": "string",
            "description": "The time of this item created.",
            "format": "date-time",
            "example": "2025-07-10T02:40:38.825204"
          },
          "updated_time": {
            "title": "Updated Time",
            "type": "string",
            "description": "The time of this item updated.",
            "format": "date-time",
            "example": "2025-07-10T02:40:38.825222"
          },
          "id": {
            "title": "Id",
            "type": "string",
            "description": "The entry UUID.",
            "example": "0354fb10-9e18-4923-a213-6253800f8d01"
          },
          "call_recipient": {
            "title": "call_recipient",
            "allOf": [
              {
                "$ref": "#/components/schemas/PhoneRecipient"
              }
            ],
            "description": "The call recipient of this phone."
          },
          "sms_recipient": {
            "title": "sms_recipient",
            "allOf": [
              {
                "$ref": "#/components/schemas/PhoneRecipient"
              }
            ],
            "description": "The sms recipient of this phone."
          },
          "wabp_recipient": {
            "title": "wabp_recipient",
            "allOf": [
              {
                "$ref": "#/components/schemas/PhoneRecipient"
              }
            ],
            "description": "The sms recipient of this phone."
          },
          "verified_caller": {
            "title": "verified_caller",
            "allOf": [
              {
                "$ref": "#/components/schemas/VerifiedCaller"
              }
            ],
            "description": "The associated verified caller."
          },
          "byoc_trunk": {
            "title": "byoc_trunk",
            "allOf": [
              {
                "$ref": "#/components/schemas/BYOCTrunk"
              }
            ],
            "description": "The BYOC trunk configuration."
          }
        },
        "description": "Phone schema with fields that need to return to client."
      },
      "app__api__v1__schema__user__Phone": {
        "title": "Phone",
        "required": [
          "id",
          "name",
          "phone",
          "country",
          "whatsapp_status",
          "enabled_generic_reply",
          "enabled_dnc_reply",
          "type",
          "created_time",
          "enabled",
          "source"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "id",
            "type": "string",
            "description": "The id of this phone",
            "example": "11111111-2222-4444-3333-555555555555"
          },
          "name": {
            "title": "name",
            "type": "string",
            "description": "The name of phone number.",
            "example": "tech support"
          },
          "phone": {
            "title": "phone",
            "type": "string",
            "description": "The phone number.",
            "example": "+886912123456"
          },
          "country": {
            "title": "country",
            "type": "string",
            "description": "The country code is on ISO 3166 format",
            "example": "US"
          },
          "whatsapp_device_id": {
            "title": "whatsapp_device_id",
            "type": "string",
            "description": "The whatsapp_device_id if phone is WHATSAPP type.",
            "example": "14155238886:1@s.whatsapp.net"
          },
          "whatsapp_status": {
            "title": "whatsapp_status",
            "allOf": [
              {
                "$ref": "#/components/schemas/WhatsAppStatus"
              }
            ],
            "description": "The whatsapp_status of phone number",
            "example": "CONNECTING"
          },
          "generic_reply_message": {
            "title": "generic_reply_message",
            "type": "string",
            "description": "The default reply message when receive message from client if doesn't match any keyword",
            "default": "",
            "example": "Welcome! If you want to subscribe daily report, please reply 'DAILY'."
          },
          "dnc_reply_message": {
            "title": "dnc_reply_message",
            "type": "string",
            "description": "The dnc message when receive message from client",
            "default": "",
            "example": "Ok, we won't send you any other message."
          },
          "enabled_generic_reply": {
            "title": "enabled_generic_reply",
            "type": "boolean",
            "description": "Whether the generic reply message enabled",
            "example": false
          },
          "enabled_dnc_reply": {
            "title": "enabled_dnc_reply",
            "type": "boolean",
            "description": "Whether the dnc reply message enabled",
            "example": false
          },
          "type": {
            "title": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PhoneType"
              }
            ],
            "description": "The type of this phone.",
            "example": "LOCAL"
          },
          "created_time": {
            "title": "created_time",
            "type": "string",
            "description": "The time of this item created.",
            "format": "date-time",
            "example": "2025-07-10T02:40:43.614558"
          },
          "enabled": {
            "title": "enabled",
            "type": "boolean",
            "description": "Indicate whether this phone is enabled.",
            "example": true
          },
          "source": {
            "title": "source",
            "allOf": [
              {
                "$ref": "#/components/schemas/PhoneSource"
              }
            ],
            "description": "The source of this phone.",
            "example": "TWILIO"
          },
          "whatsapp_business_account_phone_id": {
            "title": "whatsapp_business_account_phone_id",
            "type": "string",
            "description": "The whatsapp_business_account_phone_id if phone is WHATSAPP type.",
            "example": "555555555555"
          }
        },
        "description": "Phone schema."
      }
    },
    "securitySchemes": {
      "OAuth2PasswordBearer": {
        "type": "oauth2",
        "description": "Authorization with Access Token, Please see https://seax-dev.seasalt.ai/bulk-sms-api/redoc#section/Authorization.",
        "flows": {
          "password": {
            "scopes": {},
            "tokenUrl": "api/v1/users/login"
          }
        }
      }
    }
  }
}