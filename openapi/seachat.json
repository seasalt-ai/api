{"openapi":"3.1.0","info":{"title":"SeaChat API","description":"- [Overview](#section/Overview)\n- [Getting Started](#Getting-Started-with-SeaChat-Workspace)\n- [Authorization](#section/Authorization)\n- [Response Codes](#section/Response-Codes)\n- [Error Message Format](#section/Error-Message-Format)\n\n## Overview\nWelcome to the SeaChat API integration guide. This document will guide you through the process of creating and interacting with a agent (also referred to as an \"bot\") within your SeaChat workspace. Whether you're looking to build an intelligent assistant, automate responses, or enhance your team's communication, this guide provides the essential steps to get started.\n\nThroughout this document, the terms \"agent\" and \"bot\" are used interchangeably to describe the entities you interact with via the API. However, in the context of API endpoints and URLs, we predominantly use \"bots\" and \"bot_id\" to maintain clarity.\n\nBy following these guidelines, you'll be equipped to create, configure, and interact with your SeaChat bot, enabling a new level of automation and intelligence within your workspace. If you encounter any issues or have questions, don't hesitate to contact us at [seachat@seasalt.ai](seachat@seasalt.ai) for further assistance.\n\n## Getting Started with SeaChat Workspace\nBefore diving into the API details, ensure you have completed the following prerequisites:\n1. Workspace Creation: If you haven't already, create a workspace in SeaChat and note down the workspace ID from the URL, which follows the format: `https://chat.seasalt.ai/gpt/workspace/{workspace-id}/bot/{bot-id}/`.\n2. Access Credentials: Obtain your API key by navigating to the \"API Key\" tab under the \"Workspace\" dropdown in SeaChat. Click to toggle the \"Enable API Access\" setting on; this will produce a new API key for your workspace. These credentials are essential for authenticating your API requests, protect them with caution. If you feel your API key has been compromised, you may click the \"refresh\" icon to **deactivate** your old one, and produce a new one.\n\n### Creating and Configuring Your Bot\nTo deploy a new bot within your dedicated workspace, follow these steps:\n1. Create an Agent: Initiate a POST request to the `Create an agent` API endpoint. This action creates a new agent in your workspace, equipped with basic details like name, description, and intended use case.\n2. Knowledge Base Integration: Use the `Import KB` API to upload knowledge base files into your agent. This process might take some time, so it's advisable to:\n3. Set Up a Callback API: Implement a `callback API` endpoint to receive status updates once the Knowledge Base import process completes.\n\n### Interacting with Your SeaChat Bot\nAfter setting up your agent, you're ready to start sending and receiving messages:\n1. Authentication: Confirm that you have the client ID and access token provided by Seasalt.\n2. Bot Readiness: Verify the bot's ID (`bot_id`) and ensure it's configured to handle conversations.\n3. Webhook Implementation: Follow the detailed instructions in [SeaChat Message API - Version1.pdf](https://drive.google.com/file/d/1EeX63dP7oLVbi67YL5a_iVjJLmTOWSec/view) to implement a webhook for your application. This webhook will be used to receive messages from the SeaChat bot.\n\n\n## Authorization\n### SeaChat Workspace API\nWhen calling SeaChat's API, the header of each request must include the Bearer token. A simple curl example is as follows:\n```bash\ncurl -X 'POST' \\\n  'https://chat.seasalt.ai/api/v1/public/bots' \\\n  -H 'accept: application/json' \\\n  -H 'Authorization: Bearer [access token]' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n    \"workspace_id\": \"XXXXX-XXX-XXXXXXXXX\",\n    \"name\": \"SeaChat\",\n    \"description\": \"string\",\n    \"use_case\": \"Customer Service\",\n    \"live_agent_transfer\": false,\n    \"default_response_language\": \"default\",\n    \"is_enabled\": true\n  }'\n```\n### SeaChat Message API\nWhen calling SeaChat's API, the header of each request must include the Bearer token. A simple curl example is as follows:\n```bash\ncurl -X 'POST' \\\n'https://chat.seasalt.ai/api/v1/public/bots/{bot_id}/conversations/ops/get_or_create' \\\n  -H 'accept: application/json' \\\n  -H 'Authorization: Bearer [access token]' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n  \"user\": {\n    \"id\": \"the_user_id\",\n    \"first_name\": \"first_name\",\n    \"last_name\": \"last_name\"\n  }\n}'\n```\n## Response Codes\nFor success responses, SeaChat only use two codes to indicate success:\n1. `200`, indicating that the operation was successful, with a response body attached. \n2. `204`, indicating that the operation was successful but no response body.\n\n## Error Message Format\nWhen the response code is a value above 400, the request body will be a fixed format content with the following structure\n\n| Name | Type | Description | Example |\n|----------|----------|----------|----------|\n| detail | string | Description of the error that occurred | |\n| code | number | The error code can be used to confirm the error type | |\n| parameters | object | The error message may contain parameter information. If there is no parameter information, it will be an empty object| |\n\nExample of the request body in case of error\n```json\n    {\n        \"detail\": \"The token: testtoken decoding failed.\",\n        \"code\": 40007,\n        \"parameters\": {\n            \"token\": \"testtoken\"\n        }\n    }\n```","version":"Beta"},"paths":{"/api/v1/public/bots":{"get":{"tags":["Agent"],"summary":"Get agent list","description":"Query all agents with specified workspace id.","operationId":"list_gptbots_api_v1_public_bots_get","parameters":[{"required":false,"schema":{"type":"string","title":"Workspace Id"},"name":"workspace_id","in":"query"},{"description":"Optional, determine the number of rows need be skipped","required":false,"schema":{"type":"integer","title":"Offset","description":"Optional, determine the number of rows need be skipped","default":0},"example":0,"name":"offset","in":"query"},{"description":"Optional, determine the number of returned rows after skipped offset, if it is 0, return all items","required":false,"schema":{"type":"integer","title":"Limit","description":"Optional, determine the number of returned rows after skipped offset, if it is 0, return all items","default":0},"example":0,"name":"limit","in":"query"},{"description":"Optional, order items by asc or desc with comma-separated list of <field>:<direction> pairs, default is created_at:asc","required":false,"schema":{"type":"string","title":"Order By","description":"Optional, order items by asc or desc with comma-separated list of <field>:<direction> pairs, default is created_at:asc","default":"created_at:asc"},"name":"order_by","in":"query"},{"required":false,"schema":{"type":"string","title":"User Id"},"name":"user_id","in":"query"},{"required":false,"schema":{"type":"string","title":"User Token"},"name":"user_token","in":"query"},{"required":false,"schema":{"title":"Aiohttp Session"},"name":"aiohttp_session","in":"query"},{"required":false,"schema":{"title":"Third Party Client"},"name":"third_party_client","in":"query"},{"required":false,"schema":{"type":"number","title":"Additional Count"},"name":"additional_count","in":"query"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ListResponse_GPTBotForPublicAPI_"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"JWTBearer":[]}]},"post":{"tags":["Agent"],"summary":"Create an agent","description":"Create a new agent within the workspace.","operationId":"create_gptbot_api_v1_public_bots_post","parameters":[{"required":false,"schema":{"type":"string","title":"User Id"},"name":"user_id","in":"query"},{"required":false,"schema":{"type":"string","title":"User Token"},"name":"user_token","in":"query"},{"required":false,"schema":{"title":"Aiohttp Session"},"name":"aiohttp_session","in":"query"},{"required":false,"schema":{"title":"Third Party Client"},"name":"third_party_client","in":"query"},{"required":false,"schema":{"type":"string","title":"Workspace Id"},"name":"workspace_id","in":"query"},{"required":false,"schema":{"type":"number","title":"Additional Count"},"name":"additional_count","in":"query"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateGPTBotForPublicAPI"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GPTBotForPublicAPI"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"JWTBearer":[]}]}},"/api/v1/public/bots/{bot_id}":{"get":{"tags":["Agent"],"summary":"Get agent by ID","description":"Querying the data for a specific bot using the Agent ID.","operationId":"get_gptbot_by_id_api_v1_public_bots__bot_id__get","parameters":[{"required":true,"schema":{"type":"string","title":"Bot Id"},"name":"bot_id","in":"path"},{"required":false,"schema":{"type":"string","title":"User Id"},"name":"user_id","in":"query"},{"required":false,"schema":{"type":"string","title":"User Token"},"name":"user_token","in":"query"},{"required":false,"schema":{"title":"Aiohttp Session"},"name":"aiohttp_session","in":"query"},{"required":false,"schema":{"title":"Third Party Client"},"name":"third_party_client","in":"query"},{"required":false,"schema":{"type":"string","title":"Workspace Id"},"name":"workspace_id","in":"query"},{"required":false,"schema":{"type":"number","title":"Additional Count"},"name":"additional_count","in":"query"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GPTBotForPublicAPI"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"JWTBearer":[]}]},"delete":{"tags":["Agent"],"summary":"Delete agent by ID","description":"Delete a specific bot using the Agent ID.","operationId":"delete_gptbot_by_id_api_v1_public_bots__bot_id__delete","parameters":[{"required":true,"schema":{"type":"string","title":"Bot Id"},"name":"bot_id","in":"path"},{"required":true,"schema":{"type":"string","title":"Workspace Id"},"name":"workspace_id","in":"query"},{"required":false,"schema":{"type":"string","title":"User Id"},"name":"user_id","in":"query"},{"required":false,"schema":{"type":"string","title":"User Token"},"name":"user_token","in":"query"},{"required":false,"schema":{"title":"Aiohttp Session"},"name":"aiohttp_session","in":"query"},{"required":false,"schema":{"title":"Third Party Client"},"name":"third_party_client","in":"query"},{"required":false,"schema":{"type":"number","title":"Additional Count"},"name":"additional_count","in":"query"}],"responses":{"204":{"description":"Successful Response"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"JWTBearer":[]}]},"patch":{"tags":["Agent"],"summary":"Update agent by ID","description":"Modify the data for a specific agent using the Agent ID.","operationId":"patch_gptbot_api_v1_public_bots__bot_id__patch","parameters":[{"required":true,"schema":{"type":"string","title":"Bot Id"},"name":"bot_id","in":"path"},{"required":false,"schema":{"type":"string","title":"User Id"},"name":"user_id","in":"query"},{"required":false,"schema":{"type":"string","title":"User Token"},"name":"user_token","in":"query"},{"required":false,"schema":{"title":"Aiohttp Session"},"name":"aiohttp_session","in":"query"},{"required":false,"schema":{"title":"Third Party Client"},"name":"third_party_client","in":"query"},{"required":false,"schema":{"type":"string","title":"Workspace Id"},"name":"workspace_id","in":"query"},{"required":false,"schema":{"type":"number","title":"Additional Count"},"name":"additional_count","in":"query"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateGPTBotForPublicAPI"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GPTBotForPublicAPI"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"JWTBearer":[]}]}},"/api/v1/public/bots/{bot_id}/kbs/documents":{"post":{"tags":["Agent"],"summary":"Import Knowledge Base docs","description":"Upload a file as the knowledge base corpus for the bot.\nTabular files, such as csv files, will be parsed to allow agents to reference table records in its responses.\nMedia files, including audio and video files, will be transcribed.\nJSON files will undergo minimal processing.\nAll other files will be used directly.\n\nThe knowledge base upload is submitted as a background task. This endpoint will return a 200\nstatus code if the job was submitted successfully. To know the result of a job, you may either provide\na callback URL (in which case, a POST request with the result will be sent when the job is finished),\nor poll the /api/v1/public/tasks/{task_id} endpoint.","operationId":"upload_document_api_v1_public_bots__bot_id__kbs_documents_post","parameters":[{"description":"The ID of the SeaChat bot you are uploading the KB to","required":true,"schema":{"type":"string","title":"Bot ID","description":"The ID of the SeaChat bot you are uploading the KB to"},"example":"aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee","name":"bot_id","in":"path"},{"description":"Upload each table row as it's own individual doc (instead of all rows in a single doc). 'TABLE' type only.","required":false,"schema":{"type":"boolean","title":"Rows as Individual Documents","description":"Upload each table row as it's own individual doc (instead of all rows in a single doc). 'TABLE' type only.","default":false},"name":"rows_as_individual_docs","in":"query"},{"required":false,"schema":{"type":"string","title":"User Id"},"name":"user_id","in":"query"},{"required":false,"schema":{"type":"string","title":"User Token"},"name":"user_token","in":"query"},{"required":false,"schema":{"title":"Aiohttp Session"},"name":"aiohttp_session","in":"query"},{"required":false,"schema":{"title":"Third Party Client"},"name":"third_party_client","in":"query"},{"required":false,"schema":{"type":"string","title":"Workspace Id"},"name":"workspace_id","in":"query"},{"required":false,"schema":{"type":"number","title":"Additional Count"},"name":"additional_count","in":"query"}],"requestBody":{"content":{"multipart/form-data":{"schema":{"$ref":"#/components/schemas/Body_upload_document_api_v1_public_bots__bot_id__kbs_documents_post"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UploadFileResponseForPublicAPI"}}}},"400":{"description":"BadRequestWithMessage","content":{"application/json":{"example":{"message":"Bad Request: DETAIL_MESSAGE.","code":10001,"status_code":400,"parameters":{"message":"DETAIL_MESSAGE"}}}}},"401":{"description":"TokenInvalidError","content":{"application/json":{"example":{"message":"The token: USER_TOKEN is invalid.","code":40003,"status_code":401,"parameters":{"token":"USER_TOKEN"}}}}},"403":{"description":"UserPermissionDenied","content":{"application/json":{"example":{"message":"The account: USER_ACCOUNT_ID does not have the permission to perform this action","code":40001,"status_code":403,"parameters":{"account_id":"USER_ACCOUNT_ID"}}}}},"404":{"description":"EntryWithIDNotExist","content":{"application/json":{"example":{"message":"The entry: THIRD_PARTY_ACCT_NAME, id: THIRD_PARTY_ACCT_ID does not exist.","code":20006,"status_code":404,"parameters":{"entry_name":"THIRD_PARTY_ACCT_NAME","id":"THIRD_PARTY_ACCT_ID"}}}}},"500":{"description":"UploadFileException","content":{"application/json":{"example":{"message":"Upload the file  UPLOAD_FILE_NAME and save it as an error occurred while SERVER_FILE_NAME. DETAIL_MESSAGE","code":10007,"status_code":500,"parameters":{"detail":"DETAIL_MESSAGE","save_file_name":"SERVER_FILE_NAME","upload_file_name":"UPLOAD_FILE_NAME"}}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"JWTBearer":[]}]}},"/api/v1/public/bots/{bot_id}/conversations/ops/get_or_create":{"post":{"tags":["Agent"],"summary":"Get or create a conversation","description":"Return the user's existing conversation with the bot, or create a new one if none exists.\n\nWhen starting a new conversation or uncertain whether the user has established a conversation,\nthis API can be called to get or create a new conversation.\nCurrently, SeaChat will return the conversation ID and confirm whether the Bot has any message to reply to.\nIf data.with_reply is False, and the Bot has a message to send to the user, the message will be awaited and returned.\nIf data.with_reply is True, no message will be sent, and the message for the user will be produced in the background.\n\nThe reply message is either the initial form or the agent's initial message, if either one is configured.\n\nReturns:\n    A ThirdPartyMessageResponse object containing the conversation ID, the user as specified in the data,\n    and the list of messages (including the bot's reply if it was requested).","operationId":"get_or_create_conversation_for_third_party_api_v1_public_bots__bot_id__conversations_ops_get_or_create_post","parameters":[{"required":true,"schema":{"type":"string","title":"Bot Id"},"name":"bot_id","in":"path"},{"required":false,"schema":{"type":"string","title":"User Id"},"name":"user_id","in":"query"},{"required":false,"schema":{"type":"string","title":"User Token"},"name":"user_token","in":"query"},{"required":false,"schema":{"title":"Aiohttp Session"},"name":"aiohttp_session","in":"query"},{"required":false,"schema":{"title":"Third Party Client"},"name":"third_party_client","in":"query"},{"required":false,"schema":{"type":"string","title":"Workspace Id"},"name":"workspace_id","in":"query"},{"required":false,"schema":{"type":"number","title":"Additional Count"},"name":"additional_count","in":"query"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateThirdPartyConversation"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThirdPartyConversationResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"JWTBearer":[]}]}},"/api/v1/public/bots/{bot_id}/conversations/{conversation_id}":{"patch":{"tags":["Agent"],"summary":"Update conversation setting by conversation_id","description":"Modify the settings of an existing conversation.","operationId":"patch_conversation_for_third_party_api_v1_public_bots__bot_id__conversations__conversation_id__patch","parameters":[{"required":true,"schema":{"type":"string","title":"Bot Id"},"name":"bot_id","in":"path"},{"required":true,"schema":{"type":"string","title":"Conversation Id"},"name":"conversation_id","in":"path"},{"required":false,"schema":{"type":"string","title":"User Id"},"name":"user_id","in":"query"},{"required":false,"schema":{"type":"string","title":"User Token"},"name":"user_token","in":"query"},{"required":false,"schema":{"title":"Aiohttp Session"},"name":"aiohttp_session","in":"query"},{"required":false,"schema":{"title":"Third Party Client"},"name":"third_party_client","in":"query"},{"required":false,"schema":{"type":"string","title":"Workspace Id"},"name":"workspace_id","in":"query"},{"required":false,"schema":{"type":"number","title":"Additional Count"},"name":"additional_count","in":"query"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateThirdPartyConversation"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThirdPartyConversationResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"JWTBearer":[]}]}},"/api/v1/public/bots/{bot_id}/conversations/{conversation_id}/messages":{"get":{"tags":["Agent"],"summary":"Get message data by conversation id","description":"Get message data by conversation_id.","operationId":"get_conversation_message_list_by_conversation_id_api_v1_public_bots__bot_id__conversations__conversation_id__messages_get","parameters":[{"required":true,"schema":{"type":"string","title":"Bot Id"},"name":"bot_id","in":"path"},{"required":true,"schema":{"type":"string","title":"Conversation Id"},"name":"conversation_id","in":"path"},{"description":"Optional, the direction of the query, default is BACKWARD.","required":false,"schema":{"allOf":[{"$ref":"#/components/schemas/ConversationMessageQueryDirection"}],"description":"Optional, the direction of the query, default is BACKWARD."},"example":"BACKWARD","name":"direction","in":"query"},{"description":"Optional, the starting sequence of the query, BACKWARD mode is set to 1 by default,The default value of FORWARD mode is the sequence of the last conversation logging of the conversation","required":false,"schema":{"type":"integer","title":"Sequence","description":"Optional, the starting sequence of the query, BACKWARD mode is set to 1 by default,The default value of FORWARD mode is the sequence of the last conversation logging of the conversation"},"example":0,"name":"sequence","in":"query"},{"description":"Optional, determine the number of rows need be skipped, default is 0","required":false,"schema":{"type":"integer","title":"Offset","description":"Optional, determine the number of rows need be skipped, default is 0","default":0},"example":0,"name":"offset","in":"query"},{"description":"Optional, the limit of data count in the query. If set to 0, it means there is no limit, default is 0.","required":false,"schema":{"type":"integer","title":"Limit","description":"Optional, the limit of data count in the query. If set to 0, it means there is no limit, default is 0."},"example":0,"name":"limit","in":"query"},{"required":false,"schema":{"type":"string","title":"User Id"},"name":"user_id","in":"query"},{"required":false,"schema":{"type":"string","title":"User Token"},"name":"user_token","in":"query"},{"required":false,"schema":{"title":"Aiohttp Session"},"name":"aiohttp_session","in":"query"},{"required":false,"schema":{"title":"Third Party Client"},"name":"third_party_client","in":"query"},{"required":false,"schema":{"type":"string","title":"Workspace Id"},"name":"workspace_id","in":"query"},{"required":false,"schema":{"type":"number","title":"Additional Count"},"name":"additional_count","in":"query"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThirdPartyListMessagesResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"JWTBearer":[]}]},"post":{"tags":["Agent"],"summary":"Send a Text Message","description":"Post a text message for non-coach conversations using the conversation ID.\n\nGet the text content of the message from the request.\nIf is_reply is set to True, query the agent, wait for the agent's response, and\nreturn the response.\n\nAn error will be raised if you attempt to use this endpoint with a coach conversation.","operationId":"post_text_message_from_third_party_api_v1_public_bots__bot_id__conversations__conversation_id__messages_post","parameters":[{"required":true,"schema":{"type":"string","title":"Bot Id"},"name":"bot_id","in":"path"},{"required":true,"schema":{"type":"string","title":"Conversation Id"},"name":"conversation_id","in":"path"},{"required":false,"schema":{"type":"string","title":"User Id"},"name":"user_id","in":"query"},{"required":false,"schema":{"type":"string","title":"User Token"},"name":"user_token","in":"query"},{"required":false,"schema":{"title":"Aiohttp Session"},"name":"aiohttp_session","in":"query"},{"required":false,"schema":{"title":"Third Party Client"},"name":"third_party_client","in":"query"},{"required":false,"schema":{"type":"string","title":"Workspace Id"},"name":"workspace_id","in":"query"},{"required":false,"schema":{"type":"number","title":"Additional Count"},"name":"additional_count","in":"query"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThirdPartyInboundMessageBody"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThirdPartyMessageResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"JWTBearer":[]}]}},"/api/v1/public/bots/{bot_id}/conversations/{conversation_id}/messages/audio":{"post":{"tags":["Agent"],"summary":"Send an Audio Message","description":"Post a audio message for non-coach conversations using the conversation ID.\n\nGet the contents of the message by performing STT on the uploaded file.\nIf is_reply is set to True, query the agent, wait for the agent's response, and\nreturn the response.\n\nFor sending multimedia messages, use the multipart/form-data with the fields described below.\n\nAn error will be raised if you attempt to use this endpoint with a coach conversation.","operationId":"post_multimedia_message_from_third_party_api_v1_public_bots__bot_id__conversations__conversation_id__messages_audio_post","parameters":[{"required":true,"schema":{"type":"string","title":"Bot Id"},"name":"bot_id","in":"path"},{"required":true,"schema":{"type":"string","title":"Conversation Id"},"name":"conversation_id","in":"path"},{"required":false,"schema":{"type":"string","title":"User Id"},"name":"user_id","in":"query"},{"required":false,"schema":{"type":"string","title":"User Token"},"name":"user_token","in":"query"},{"required":false,"schema":{"title":"Aiohttp Session"},"name":"aiohttp_session","in":"query"},{"required":false,"schema":{"title":"Third Party Client"},"name":"third_party_client","in":"query"},{"required":false,"schema":{"type":"string","title":"Workspace Id"},"name":"workspace_id","in":"query"},{"required":false,"schema":{"type":"number","title":"Additional Count"},"name":"additional_count","in":"query"}],"requestBody":{"content":{"multipart/form-data":{"schema":{"$ref":"#/components/schemas/Body_post_multimedia_message_from_third_party_api_v1_public_bots__bot_id__conversations__conversation_id__messages_audio_post"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThirdPartyMessageResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"JWTBearer":[]}]}},"/api/v1/public/bots/{bot_id}/conversations/outbound_call":{"post":{"tags":["Agent"],"summary":"Trigger an Outbound Call from Voicebot to Customer","description":"Place an outbound call to a customer from the agent associated with the given bot_id.\n\nResponse will contain a conversation_id which can then be used as the parameter for GET conversation_results\nendpoint to get call information.","operationId":"trigger_outbound_call_api_v1_public_bots__bot_id__conversations_outbound_call_post","parameters":[{"required":true,"schema":{"type":"string","title":"Bot Id"},"name":"bot_id","in":"path"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/VoiceBotOutboundCall"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/OutboundCallResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"JWTBearer":[]}]}},"/api/v1/public/bots/{bot_id}/conversations/{conversation_id}/conversation_results":{"get":{"tags":["Agent"],"summary":"Get Call Results","description":"Return CallStatus object for the given conversation_id.\n\nResponse includes labels, extraction results, transcripts, and summaries.\nCurrently call_status will always return \"COMPLETED\".\nFor accurate call status, please pass a callback_url when using the outbound_call endpoint,","operationId":"get_call_results_api_v1_public_bots__bot_id__conversations__conversation_id__conversation_results_get","parameters":[{"required":true,"schema":{"type":"string","title":"Conversation Id"},"name":"conversation_id","in":"path"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CallStatus"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"JWTBearer":[]}]}},"/api/v1/public/bots/{bot_id}/conversations/{conversation_id}/memory":{"get":{"tags":["Agent"],"summary":"List User Memories","description":"List all the existing memories about a user for a particular conversation.","operationId":"list_user_memories_api_v1_public_bots__bot_id__conversations__conversation_id__memory_get","parameters":[{"description":"The ID of the SeaChat bot you are uploading the KB to","required":true,"schema":{"type":"string","title":"Bot ID","description":"The ID of the SeaChat bot you are uploading the KB to"},"example":"aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee","name":"bot_id","in":"path"},{"description":"The unique ID of the conversation between user and bot","required":true,"schema":{"type":"string","title":"Conversation ID","description":"The unique ID of the conversation between user and bot"},"example":"aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee","name":"conversation_id","in":"path"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/GetMemoryResponse"},"type":"array","title":"Response List User Memories Api V1 Public Bots  Bot Id  Conversations  Conversation Id  Memory Get"}}}},"400":{"description":"BadRequestWithMessage","content":{"application/json":{"example":{"message":"Bad Request: DETAIL_MESSAGE.","code":10001,"status_code":400,"parameters":{"message":"DETAIL_MESSAGE"}}}}},"401":{"description":"TokenInvalidError","content":{"application/json":{"example":{"message":"The token: USER_TOKEN is invalid.","code":40003,"status_code":401,"parameters":{"token":"USER_TOKEN"}}}}},"403":{"description":"UserPermissionDenied","content":{"application/json":{"example":{"message":"The account: USER_ACCOUNT_ID does not have the permission to perform this action","code":40001,"status_code":403,"parameters":{"account_id":"USER_ACCOUNT_ID"}}}}},"404":{"description":"EntryWithIDNotExist","content":{"application/json":{"example":{"message":"The entry: THIRD_PARTY_ACCT_NAME, id: THIRD_PARTY_ACCT_ID does not exist.","code":20006,"status_code":404,"parameters":{"entry_name":"THIRD_PARTY_ACCT_NAME","id":"THIRD_PARTY_ACCT_ID"}}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"JWTBearer":[]}]},"put":{"tags":["Agent"],"summary":"Import User Memory Document","description":"Upload a file, extract facts, and save them to the agent's memory about this user/conversation.\n\nWhen new facts from the document are ready to be added to the memory, the existing user/conversation memory\nwill be checked for conflicts. Older memories may be updated or deleted based on the new information.\nNovel information will be created as new memories.\nFor now, only .txt and .md file are accepted.","operationId":"upload_user_memory_document_api_v1_public_bots__bot_id__conversations__conversation_id__memory_put","parameters":[{"description":"The ID of the SeaChat bot you are uploading the KB to","required":true,"schema":{"type":"string","title":"Bot ID","description":"The ID of the SeaChat bot you are uploading the KB to"},"example":"aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee","name":"bot_id","in":"path"},{"description":"The unique ID of the conversation between user and bot","required":true,"schema":{"type":"string","title":"Conversation ID","description":"The unique ID of the conversation between user and bot"},"example":"aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee","name":"conversation_id","in":"path"},{"required":false,"schema":{"type":"string","title":"User Id"},"name":"user_id","in":"query"},{"required":false,"schema":{"type":"string","title":"User Token"},"name":"user_token","in":"query"},{"required":false,"schema":{"title":"Aiohttp Session"},"name":"aiohttp_session","in":"query"},{"required":false,"schema":{"title":"Third Party Client"},"name":"third_party_client","in":"query"},{"required":false,"schema":{"type":"string","title":"Workspace Id"},"name":"workspace_id","in":"query"},{"required":false,"schema":{"type":"number","title":"Additional Count"},"name":"additional_count","in":"query"}],"requestBody":{"content":{"multipart/form-data":{"schema":{"$ref":"#/components/schemas/Body_upload_user_memory_document_api_v1_public_bots__bot_id__conversations__conversation_id__memory_put"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PutMemoryResponse"}}}},"400":{"description":"BadRequestWithMessage","content":{"application/json":{"example":{"message":"Bad Request: DETAIL_MESSAGE.","code":10001,"status_code":400,"parameters":{"message":"DETAIL_MESSAGE"}}}}},"401":{"description":"TokenInvalidError","content":{"application/json":{"example":{"message":"The token: USER_TOKEN is invalid.","code":40003,"status_code":401,"parameters":{"token":"USER_TOKEN"}}}}},"403":{"description":"UserPermissionDenied","content":{"application/json":{"example":{"message":"The account: USER_ACCOUNT_ID does not have the permission to perform this action","code":40001,"status_code":403,"parameters":{"account_id":"USER_ACCOUNT_ID"}}}}},"404":{"description":"EntryWithIDNotExist","content":{"application/json":{"example":{"message":"The entry: THIRD_PARTY_ACCT_NAME, id: THIRD_PARTY_ACCT_ID does not exist.","code":20006,"status_code":404,"parameters":{"entry_name":"THIRD_PARTY_ACCT_NAME","id":"THIRD_PARTY_ACCT_ID"}}}}},"500":{"description":"UploadFileException","content":{"application/json":{"example":{"message":"Upload the file  UPLOAD_FILE_NAME and save it as an error occurred while SERVER_FILE_NAME. DETAIL_MESSAGE","code":10007,"status_code":500,"parameters":{"detail":"DETAIL_MESSAGE","save_file_name":"SERVER_FILE_NAME","upload_file_name":"UPLOAD_FILE_NAME"}}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"JWTBearer":[]}]},"delete":{"tags":["Agent"],"summary":"Delete All User Memories","description":"Delete all the existing memories about a user for a particular conversation.","operationId":"delete_all_user_memories_api_v1_public_bots__bot_id__conversations__conversation_id__memory_delete","parameters":[{"description":"The ID of the SeaChat bot you are uploading the KB to","required":true,"schema":{"type":"string","title":"Bot ID","description":"The ID of the SeaChat bot you are uploading the KB to"},"example":"aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee","name":"bot_id","in":"path"},{"description":"The unique ID of the conversation between user and bot","required":true,"schema":{"type":"string","title":"Conversation ID","description":"The unique ID of the conversation between user and bot"},"example":"aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee","name":"conversation_id","in":"path"}],"responses":{"204":{"description":"Successful Response"},"400":{"description":"BadRequestWithMessage","content":{"application/json":{"example":{"message":"Bad Request: DETAIL_MESSAGE.","code":10001,"status_code":400,"parameters":{"message":"DETAIL_MESSAGE"}}}}},"401":{"description":"TokenInvalidError","content":{"application/json":{"example":{"message":"The token: USER_TOKEN is invalid.","code":40003,"status_code":401,"parameters":{"token":"USER_TOKEN"}}}}},"403":{"description":"UserPermissionDenied","content":{"application/json":{"example":{"message":"The account: USER_ACCOUNT_ID does not have the permission to perform this action","code":40001,"status_code":403,"parameters":{"account_id":"USER_ACCOUNT_ID"}}}}},"404":{"description":"EntryWithIDNotExist","content":{"application/json":{"example":{"message":"The entry: THIRD_PARTY_ACCT_NAME, id: THIRD_PARTY_ACCT_ID does not exist.","code":20006,"status_code":404,"parameters":{"entry_name":"THIRD_PARTY_ACCT_NAME","id":"THIRD_PARTY_ACCT_ID"}}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"JWTBearer":[]}]}},"/api/v1/public/bots/{bot_id}/coach":{"get":{"tags":["Agent"],"summary":"Get the current COACH settings for a bot.","operationId":"get_coach_settings_api_v1_public_bots__bot_id__coach_get","parameters":[{"required":true,"schema":{"type":"string","title":"Bot Id"},"name":"bot_id","in":"path"},{"required":false,"schema":{"type":"string","title":"User Id"},"name":"user_id","in":"query"},{"required":false,"schema":{"type":"string","title":"User Token"},"name":"user_token","in":"query"},{"required":false,"schema":{"title":"Aiohttp Session"},"name":"aiohttp_session","in":"query"},{"required":false,"schema":{"title":"Third Party Client"},"name":"third_party_client","in":"query"},{"required":false,"schema":{"type":"string","title":"Workspace Id"},"name":"workspace_id","in":"query"},{"required":false,"schema":{"type":"number","title":"Additional Count"},"name":"additional_count","in":"query"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CoachSettings"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"JWTBearer":[]}]},"patch":{"tags":["Agent"],"summary":"Update the COACH settings for a bot.","operationId":"put_coach_settings_api_v1_public_bots__bot_id__coach_patch","parameters":[{"required":true,"schema":{"type":"string","title":"Bot Id"},"name":"bot_id","in":"path"},{"required":false,"schema":{"type":"string","title":"User Id"},"name":"user_id","in":"query"},{"required":false,"schema":{"type":"string","title":"User Token"},"name":"user_token","in":"query"},{"required":false,"schema":{"title":"Aiohttp Session"},"name":"aiohttp_session","in":"query"},{"required":false,"schema":{"title":"Third Party Client"},"name":"third_party_client","in":"query"},{"required":false,"schema":{"type":"string","title":"Workspace Id"},"name":"workspace_id","in":"query"},{"required":false,"schema":{"type":"number","title":"Additional Count"},"name":"additional_count","in":"query"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CoachSettings"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CoachSettings"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"JWTBearer":[]}]}},"/api/v1/public/bots/{bot_id}/coach/conversations/ops/get_or_create":{"post":{"tags":["Agent"],"summary":"Get or create a COACH conversation","description":"Return the user's existing COACH conversation with the bot, or create a new one if none exists.\n\nWhen starting a new coach conversation or uncertain whether the user has established a coach conversation,\nthis API can be called to get or create a new coach conversation.\nCurrently, SeaChat will return the conversation ID and confirm whether the Bot has any message to reply to.\nIf data.with_reply is False, and the Bot has a message to send to the user, the message will be awaited and returned.\nIf data.with_reply is True, no message will be sent, and the message for the user will be produced in the background.\n\nThe reply message is either the initial form or the agent's initial message, if either one is configured.\n\nReturns:\n    A ThirdPartyMessageResponse object containing the conversation ID, the user as specified in the data,\n    and the list of messages (including the bot's reply if it was requested).","operationId":"get_or_create_coach_conversation_for_third_party_api_v1_public_bots__bot_id__coach_conversations_ops_get_or_create_post","parameters":[{"required":true,"schema":{"type":"string","title":"Bot Id"},"name":"bot_id","in":"path"},{"required":false,"schema":{"type":"string","title":"User Id"},"name":"user_id","in":"query"},{"required":false,"schema":{"type":"string","title":"User Token"},"name":"user_token","in":"query"},{"required":false,"schema":{"title":"Aiohttp Session"},"name":"aiohttp_session","in":"query"},{"required":false,"schema":{"title":"Third Party Client"},"name":"third_party_client","in":"query"},{"required":false,"schema":{"type":"string","title":"Workspace Id"},"name":"workspace_id","in":"query"},{"required":false,"schema":{"type":"number","title":"Additional Count"},"name":"additional_count","in":"query"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateThirdPartyCoachConversation"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThirdPartyConversationResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"JWTBearer":[]}]}},"/api/v1/public/bots/{bot_id}/coach/conversations/{conversation_id}/messages":{"get":{"tags":["Agent"],"summary":"Get message data by conversation id for a coach conversation","description":"Get message data for a coach conversation by conversation_id.","operationId":"get_coach_conversation_message_list_by_conversation_id_api_v1_public_bots__bot_id__coach_conversations__conversation_id__messages_get","parameters":[{"required":true,"schema":{"type":"string","title":"Bot Id"},"name":"bot_id","in":"path"},{"required":true,"schema":{"type":"string","title":"Conversation Id"},"name":"conversation_id","in":"path"},{"description":"Optional, the direction of the query, default is BACKWARD.","required":false,"schema":{"allOf":[{"$ref":"#/components/schemas/ConversationMessageQueryDirection"}],"description":"Optional, the direction of the query, default is BACKWARD."},"example":"BACKWARD","name":"direction","in":"query"},{"description":"Optional, the starting sequence of the query, BACKWARD mode is set to 1 by default,The default value of FORWARD mode is the sequence of the last conversation logging of the conversation","required":false,"schema":{"type":"integer","title":"Sequence","description":"Optional, the starting sequence of the query, BACKWARD mode is set to 1 by default,The default value of FORWARD mode is the sequence of the last conversation logging of the conversation"},"example":0,"name":"sequence","in":"query"},{"description":"Optional, determine the number of rows need be skipped, default is 0","required":false,"schema":{"type":"integer","title":"Offset","description":"Optional, determine the number of rows need be skipped, default is 0","default":0},"example":0,"name":"offset","in":"query"},{"description":"Optional, the limit of data count in the query. If set to 0, it means there is no limit, default is 0.","required":false,"schema":{"type":"integer","title":"Limit","description":"Optional, the limit of data count in the query. If set to 0, it means there is no limit, default is 0."},"example":0,"name":"limit","in":"query"},{"required":false,"schema":{"type":"string","title":"User Id"},"name":"user_id","in":"query"},{"required":false,"schema":{"type":"string","title":"User Token"},"name":"user_token","in":"query"},{"required":false,"schema":{"title":"Aiohttp Session"},"name":"aiohttp_session","in":"query"},{"required":false,"schema":{"title":"Third Party Client"},"name":"third_party_client","in":"query"},{"required":false,"schema":{"type":"string","title":"Workspace Id"},"name":"workspace_id","in":"query"},{"required":false,"schema":{"type":"number","title":"Additional Count"},"name":"additional_count","in":"query"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThirdPartyListMessagesResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"JWTBearer":[]}]},"post":{"tags":["Agent"],"summary":"Send a Text Message to a COACH conversation","description":"Post a text message for COACH conversations using the conversation ID.\n\nGet the text content of the message from the request.\nIf is_reply is set to True, query the agent, wait for the agent's response, and\nreturn the response.\n\nAn error will be raised if you attempt to use this endpoint with a non-coach conversation.","operationId":"post_text_message_to_coach_from_third_party_api_v1_public_bots__bot_id__coach_conversations__conversation_id__messages_post","parameters":[{"required":true,"schema":{"type":"string","title":"Bot Id"},"name":"bot_id","in":"path"},{"required":true,"schema":{"type":"string","title":"Conversation Id"},"name":"conversation_id","in":"path"},{"required":false,"schema":{"type":"string","title":"User Id"},"name":"user_id","in":"query"},{"required":false,"schema":{"type":"string","title":"User Token"},"name":"user_token","in":"query"},{"required":false,"schema":{"title":"Aiohttp Session"},"name":"aiohttp_session","in":"query"},{"required":false,"schema":{"title":"Third Party Client"},"name":"third_party_client","in":"query"},{"required":false,"schema":{"type":"string","title":"Workspace Id"},"name":"workspace_id","in":"query"},{"required":false,"schema":{"type":"number","title":"Additional Count"},"name":"additional_count","in":"query"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThirdPartyInboundMessageBody"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThirdPartyMessageResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"JWTBearer":[]}]}},"/api/v1/public/bots/{bot_id}/coach/conversations/{conversation_id}/messages/audio":{"post":{"tags":["Agent"],"summary":"Send an Audio Message to a COACH conversation","description":"Post a audio message for COACH conversations using the conversation ID.\n\nGet the contents of the message by performing STT on the uploaded file.\nIf is_reply is set to True, query the agent, wait for the agent's response, and\nreturn the response.\n\nFor sending multimedia messages, use the multipart/form-data with the fields described below.\n\nAn error will be raised if you attempt to use this endpoint with a non-coach conversation.","operationId":"post_multimedia_message_from_third_party_api_v1_public_bots__bot_id__coach_conversations__conversation_id__messages_audio_post","parameters":[{"required":true,"schema":{"type":"string","title":"Bot Id"},"name":"bot_id","in":"path"},{"required":true,"schema":{"type":"string","title":"Conversation Id"},"name":"conversation_id","in":"path"},{"required":false,"schema":{"type":"string","title":"User Id"},"name":"user_id","in":"query"},{"required":false,"schema":{"type":"string","title":"User Token"},"name":"user_token","in":"query"},{"required":false,"schema":{"title":"Aiohttp Session"},"name":"aiohttp_session","in":"query"},{"required":false,"schema":{"title":"Third Party Client"},"name":"third_party_client","in":"query"},{"required":false,"schema":{"type":"string","title":"Workspace Id"},"name":"workspace_id","in":"query"},{"required":false,"schema":{"type":"number","title":"Additional Count"},"name":"additional_count","in":"query"}],"requestBody":{"content":{"multipart/form-data":{"schema":{"$ref":"#/components/schemas/Body_post_multimedia_message_from_third_party_api_v1_public_bots__bot_id__coach_conversations__conversation_id__messages_audio_post"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThirdPartyMessageResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"JWTBearer":[]}]}},"/api/v1/public/bots/{bot_id}/memory":{"get":{"tags":["Agent"],"summary":"List Agent Memories","description":"List all the existing memories about an agent.","operationId":"list_agent_memories_api_v1_public_bots__bot_id__memory_get","parameters":[{"description":"The ID of the SeaChat bot you are uploading the memory to","required":true,"schema":{"type":"string","title":"Bot ID","description":"The ID of the SeaChat bot you are uploading the memory to"},"example":"aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee","name":"bot_id","in":"path"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/GetMemoryResponse"},"type":"array","title":"Response List Agent Memories Api V1 Public Bots  Bot Id  Memory Get"}}}},"400":{"description":"BadRequestWithMessage","content":{"application/json":{"example":{"message":"Bad Request: DETAIL_MESSAGE.","code":10001,"status_code":400,"parameters":{"message":"DETAIL_MESSAGE"}}}}},"401":{"description":"TokenInvalidError","content":{"application/json":{"example":{"message":"The token: USER_TOKEN is invalid.","code":40003,"status_code":401,"parameters":{"token":"USER_TOKEN"}}}}},"403":{"description":"UserPermissionDenied","content":{"application/json":{"example":{"message":"The account: USER_ACCOUNT_ID does not have the permission to perform this action","code":40001,"status_code":403,"parameters":{"account_id":"USER_ACCOUNT_ID"}}}}},"404":{"description":"EntryWithIDNotExist","content":{"application/json":{"example":{"message":"The entry: THIRD_PARTY_ACCT_NAME, id: THIRD_PARTY_ACCT_ID does not exist.","code":20006,"status_code":404,"parameters":{"entry_name":"THIRD_PARTY_ACCT_NAME","id":"THIRD_PARTY_ACCT_ID"}}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"JWTBearer":[]}]},"put":{"tags":["Agent"],"summary":"Import Agent Memory Document","description":"Upload a file, extract facts, and save them to the agent's memory.\n\nWhen new facts from the document are ready to be added to the memory, the existing user/conversation memory\nwill be checked for conflicts. Older memories may be updated or deleted based on the new information.\nNovel information will be created as new memories.\nFor now, only .txt and .md file are accepted.","operationId":"upload_agent_memory_document_api_v1_public_bots__bot_id__memory_put","parameters":[{"description":"The ID of the SeaChat bot you are uploading the memory to","required":true,"schema":{"type":"string","title":"Bot ID","description":"The ID of the SeaChat bot you are uploading the memory to"},"example":"aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee","name":"bot_id","in":"path"},{"required":false,"schema":{"type":"string","title":"User Id"},"name":"user_id","in":"query"},{"required":false,"schema":{"type":"string","title":"User Token"},"name":"user_token","in":"query"},{"required":false,"schema":{"title":"Aiohttp Session"},"name":"aiohttp_session","in":"query"},{"required":false,"schema":{"title":"Third Party Client"},"name":"third_party_client","in":"query"},{"required":false,"schema":{"type":"string","title":"Workspace Id"},"name":"workspace_id","in":"query"},{"required":false,"schema":{"type":"number","title":"Additional Count"},"name":"additional_count","in":"query"}],"requestBody":{"content":{"multipart/form-data":{"schema":{"$ref":"#/components/schemas/Body_upload_agent_memory_document_api_v1_public_bots__bot_id__memory_put"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PutMemoryResponse"}}}},"400":{"description":"BadRequestWithMessage","content":{"application/json":{"example":{"message":"Bad Request: DETAIL_MESSAGE.","code":10001,"status_code":400,"parameters":{"message":"DETAIL_MESSAGE"}}}}},"401":{"description":"TokenInvalidError","content":{"application/json":{"example":{"message":"The token: USER_TOKEN is invalid.","code":40003,"status_code":401,"parameters":{"token":"USER_TOKEN"}}}}},"403":{"description":"UserPermissionDenied","content":{"application/json":{"example":{"message":"The account: USER_ACCOUNT_ID does not have the permission to perform this action","code":40001,"status_code":403,"parameters":{"account_id":"USER_ACCOUNT_ID"}}}}},"404":{"description":"EntryWithIDNotExist","content":{"application/json":{"example":{"message":"The entry: THIRD_PARTY_ACCT_NAME, id: THIRD_PARTY_ACCT_ID does not exist.","code":20006,"status_code":404,"parameters":{"entry_name":"THIRD_PARTY_ACCT_NAME","id":"THIRD_PARTY_ACCT_ID"}}}}},"500":{"description":"UploadFileException","content":{"application/json":{"example":{"message":"Upload the file  UPLOAD_FILE_NAME and save it as an error occurred while SERVER_FILE_NAME. DETAIL_MESSAGE","code":10007,"status_code":500,"parameters":{"detail":"DETAIL_MESSAGE","save_file_name":"SERVER_FILE_NAME","upload_file_name":"UPLOAD_FILE_NAME"}}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"JWTBearer":[]}]},"delete":{"tags":["Agent"],"summary":"Delete All Agent Memories","description":"Delete all the existing memories about an agent.","operationId":"delete_all_agent_memories_api_v1_public_bots__bot_id__memory_delete","parameters":[{"description":"The ID of the SeaChat bot you are uploading the KB to","required":true,"schema":{"type":"string","title":"Bot ID","description":"The ID of the SeaChat bot you are uploading the KB to"},"example":"aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee","name":"bot_id","in":"path"}],"responses":{"204":{"description":"Successful Response"},"400":{"description":"BadRequestWithMessage","content":{"application/json":{"example":{"message":"Bad Request: DETAIL_MESSAGE.","code":10001,"status_code":400,"parameters":{"message":"DETAIL_MESSAGE"}}}}},"401":{"description":"TokenInvalidError","content":{"application/json":{"example":{"message":"The token: USER_TOKEN is invalid.","code":40003,"status_code":401,"parameters":{"token":"USER_TOKEN"}}}}},"403":{"description":"UserPermissionDenied","content":{"application/json":{"example":{"message":"The account: USER_ACCOUNT_ID does not have the permission to perform this action","code":40001,"status_code":403,"parameters":{"account_id":"USER_ACCOUNT_ID"}}}}},"404":{"description":"EntryWithIDNotExist","content":{"application/json":{"example":{"message":"The entry: THIRD_PARTY_ACCT_NAME, id: THIRD_PARTY_ACCT_ID does not exist.","code":20006,"status_code":404,"parameters":{"entry_name":"THIRD_PARTY_ACCT_NAME","id":"THIRD_PARTY_ACCT_ID"}}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"JWTBearer":[]}]}},"/api/v1/public/bots/{bot_id}/fine_tuning/jobs":{"get":{"tags":["Agent"],"summary":"List all fine tuning job by bot ID.","description":"List all the fine tuning jobs for an agent.","operationId":"list_fine_tuning_jobs_api_v1_public_bots__bot_id__fine_tuning_jobs_get","parameters":[{"description":"The ID of the SeaChat bot you are creating a fine tuned model for","required":true,"schema":{"type":"string","title":"Bot ID","description":"The ID of the SeaChat bot you are creating a fine tuned model for"},"example":"aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee","name":"bot_id","in":"path"},{"description":"The limit of the number of job returned","required":false,"schema":{"type":"integer","title":"Limit","description":"The limit of the number of job returned"},"name":"limit","in":"query"},{"description":"The offset to start at when retrieving jobs","required":false,"schema":{"type":"integer","title":"Offset","description":"The offset to start at when retrieving jobs"},"name":"offset","in":"query"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/FineTuningJobResponse"},"type":"array","title":"Response List Fine Tuning Jobs Api V1 Public Bots  Bot Id  Fine Tuning Jobs Get"}}}},"400":{"description":"BadRequestWithMessage","content":{"application/json":{"example":{"message":"Bad Request: DETAIL_MESSAGE.","code":10001,"status_code":400,"parameters":{"message":"DETAIL_MESSAGE"}}}}},"401":{"description":"TokenInvalidError","content":{"application/json":{"example":{"message":"The token: USER_TOKEN is invalid.","code":40003,"status_code":401,"parameters":{"token":"USER_TOKEN"}}}}},"403":{"description":"UserPermissionDenied","content":{"application/json":{"example":{"message":"The account: USER_ACCOUNT_ID does not have the permission to perform this action","code":40001,"status_code":403,"parameters":{"account_id":"USER_ACCOUNT_ID"}}}}},"404":{"description":"EntryWithIDNotExist","content":{"application/json":{"example":{"message":"The entry: THIRD_PARTY_ACCT_NAME, id: THIRD_PARTY_ACCT_ID does not exist.","code":20006,"status_code":404,"parameters":{"entry_name":"THIRD_PARTY_ACCT_NAME","id":"THIRD_PARTY_ACCT_ID"}}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"JWTBearer":[]}]},"post":{"tags":["Agent"],"summary":"Create new fine tuning job from training file.","description":"Upload a training file and start a new fine tuning job on the base language model.","operationId":"create_llm_fine_tuning_job_api_v1_public_bots__bot_id__fine_tuning_jobs_post","parameters":[{"description":"The ID of the SeaChat bot you are creating a fine tuned model for","required":true,"schema":{"type":"string","title":"Bot ID","description":"The ID of the SeaChat bot you are creating a fine tuned model for"},"example":"aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee","name":"bot_id","in":"path"},{"required":false,"schema":{"type":"string","title":"User Id"},"name":"user_id","in":"query"},{"required":false,"schema":{"type":"string","title":"User Token"},"name":"user_token","in":"query"},{"required":false,"schema":{"title":"Aiohttp Session"},"name":"aiohttp_session","in":"query"},{"required":false,"schema":{"title":"Third Party Client"},"name":"third_party_client","in":"query"},{"required":false,"schema":{"type":"string","title":"Workspace Id"},"name":"workspace_id","in":"query"},{"required":false,"schema":{"type":"number","title":"Additional Count"},"name":"additional_count","in":"query"}],"requestBody":{"content":{"multipart/form-data":{"schema":{"$ref":"#/components/schemas/Body_create_llm_fine_tuning_job_api_v1_public_bots__bot_id__fine_tuning_jobs_post"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/FineTuningJobResponse"}}}},"400":{"description":"BadRequestWithMessage","content":{"application/json":{"example":{"message":"Bad Request: DETAIL_MESSAGE.","code":10001,"status_code":400,"parameters":{"message":"DETAIL_MESSAGE"}}}}},"401":{"description":"TokenInvalidError","content":{"application/json":{"example":{"message":"The token: USER_TOKEN is invalid.","code":40003,"status_code":401,"parameters":{"token":"USER_TOKEN"}}}}},"403":{"description":"UserPermissionDenied","content":{"application/json":{"example":{"message":"The account: USER_ACCOUNT_ID does not have the permission to perform this action","code":40001,"status_code":403,"parameters":{"account_id":"USER_ACCOUNT_ID"}}}}},"404":{"description":"EntryWithIDNotExist","content":{"application/json":{"example":{"message":"The entry: THIRD_PARTY_ACCT_NAME, id: THIRD_PARTY_ACCT_ID does not exist.","code":20006,"status_code":404,"parameters":{"entry_name":"THIRD_PARTY_ACCT_NAME","id":"THIRD_PARTY_ACCT_ID"}}}}},"500":{"description":"UploadFileException","content":{"application/json":{"example":{"message":"Upload the file  UPLOAD_FILE_NAME and save it as an error occurred while SERVER_FILE_NAME. DETAIL_MESSAGE","code":10007,"status_code":500,"parameters":{"detail":"DETAIL_MESSAGE","save_file_name":"SERVER_FILE_NAME","upload_file_name":"UPLOAD_FILE_NAME"}}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"JWTBearer":[]}]}},"/api/v1/public/bots/{bot_id}/fine_tuning/jobs/{job_id}":{"get":{"tags":["Agent"],"summary":"Get the status of a fine tuning job by ID","description":"List all the existing memories about an agent.","operationId":"get_fine_tuning_job_api_v1_public_bots__bot_id__fine_tuning_jobs__job_id__get","parameters":[{"description":"The ID of the SeaChat bot you are creating a fine tuned model for","required":true,"schema":{"type":"string","title":"Bot ID","description":"The ID of the SeaChat bot you are creating a fine tuned model for"},"example":"aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee","name":"bot_id","in":"path"},{"description":"The ID of the fine tuning job","required":true,"schema":{"type":"string","title":"Job ID","description":"The ID of the fine tuning job"},"example":"ftjob-abc123","name":"job_id","in":"path"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/FineTuningJobResponse"}}}},"400":{"description":"BadRequestWithMessage","content":{"application/json":{"example":{"message":"Bad Request: DETAIL_MESSAGE.","code":10001,"status_code":400,"parameters":{"message":"DETAIL_MESSAGE"}}}}},"401":{"description":"TokenInvalidError","content":{"application/json":{"example":{"message":"The token: USER_TOKEN is invalid.","code":40003,"status_code":401,"parameters":{"token":"USER_TOKEN"}}}}},"403":{"description":"UserPermissionDenied","content":{"application/json":{"example":{"message":"The account: USER_ACCOUNT_ID does not have the permission to perform this action","code":40001,"status_code":403,"parameters":{"account_id":"USER_ACCOUNT_ID"}}}}},"404":{"description":"EntryWithIDNotExist","content":{"application/json":{"example":{"message":"The entry: THIRD_PARTY_ACCT_NAME, id: THIRD_PARTY_ACCT_ID does not exist.","code":20006,"status_code":404,"parameters":{"entry_name":"THIRD_PARTY_ACCT_NAME","id":"THIRD_PARTY_ACCT_ID"}}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"JWTBearer":[]}]}},"/api/v1/public/bots/{bot_id}/fine_tuning/jobs/{job_id}/cancel":{"patch":{"tags":["Agent"],"summary":"Cancel an in-progress fine tuning job","description":"Cancel a fine tuning job.","operationId":"cancel_fine_tuning_job_api_v1_public_bots__bot_id__fine_tuning_jobs__job_id__cancel_patch","parameters":[{"description":"The ID of the fine tune job to cancel","required":true,"schema":{"type":"string","title":"Job ID","description":"The ID of the fine tune job to cancel"},"example":"aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee","name":"job_id","in":"path"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/FineTuningJobResponse"}}}},"400":{"description":"BadRequestWithMessage","content":{"application/json":{"example":{"message":"Bad Request: DETAIL_MESSAGE.","code":10001,"status_code":400,"parameters":{"message":"DETAIL_MESSAGE"}}}}},"401":{"description":"TokenInvalidError","content":{"application/json":{"example":{"message":"The token: USER_TOKEN is invalid.","code":40003,"status_code":401,"parameters":{"token":"USER_TOKEN"}}}}},"403":{"description":"UserPermissionDenied","content":{"application/json":{"example":{"message":"The account: USER_ACCOUNT_ID does not have the permission to perform this action","code":40001,"status_code":403,"parameters":{"account_id":"USER_ACCOUNT_ID"}}}}},"404":{"description":"EntryWithIDNotExist","content":{"application/json":{"example":{"message":"The entry: THIRD_PARTY_ACCT_NAME, id: THIRD_PARTY_ACCT_ID does not exist.","code":20006,"status_code":404,"parameters":{"entry_name":"THIRD_PARTY_ACCT_NAME","id":"THIRD_PARTY_ACCT_ID"}}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"JWTBearer":[]}]}},"/api/v1/public/bots/{bot_id}/models":{"get":{"tags":["Agent"],"summary":"List all models by bot ID.","description":"List all the fine tuning jobs for an agent.","operationId":"list_llm_models_api_v1_public_bots__bot_id__models_get","parameters":[{"description":"The ID of the SeaChat bot you want to list available models for","required":true,"schema":{"type":"string","title":"Bot ID","description":"The ID of the SeaChat bot you want to list available models for"},"example":"aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee","name":"bot_id","in":"path"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/LLMModelResponse"},"type":"array","title":"Response List Llm Models Api V1 Public Bots  Bot Id  Models Get"}}}},"400":{"description":"BadRequestWithMessage","content":{"application/json":{"example":{"message":"Bad Request: DETAIL_MESSAGE.","code":10001,"status_code":400,"parameters":{"message":"DETAIL_MESSAGE"}}}}},"401":{"description":"TokenInvalidError","content":{"application/json":{"example":{"message":"The token: USER_TOKEN is invalid.","code":40003,"status_code":401,"parameters":{"token":"USER_TOKEN"}}}}},"403":{"description":"UserPermissionDenied","content":{"application/json":{"example":{"message":"The account: USER_ACCOUNT_ID does not have the permission to perform this action","code":40001,"status_code":403,"parameters":{"account_id":"USER_ACCOUNT_ID"}}}}},"404":{"description":"EntryWithIDNotExist","content":{"application/json":{"example":{"message":"The entry: THIRD_PARTY_ACCT_NAME, id: THIRD_PARTY_ACCT_ID does not exist.","code":20006,"status_code":404,"parameters":{"entry_name":"THIRD_PARTY_ACCT_NAME","id":"THIRD_PARTY_ACCT_ID"}}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"JWTBearer":[]}]}},"/api/v1/public/bots/{bot_id}/models/model/{model_id}":{"get":{"tags":["Agent"],"summary":"Get a single model by ID","description":"Retrieve a particular llm model by ID.","operationId":"get_llm_model_by_id_api_v1_public_bots__bot_id__models_model__model_id__get","parameters":[{"description":"The ID of the SeaChat bot you are retrieving a model for","required":true,"schema":{"type":"string","title":"Bot ID","description":"The ID of the SeaChat bot you are retrieving a model for"},"example":"aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee","name":"bot_id","in":"path"},{"description":"The ID of the model","required":true,"schema":{"type":"string","title":"Job ID","description":"The ID of the model"},"example":"ftjob-abc123","name":"model_id","in":"path"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/LLMModelResponse"}}}},"400":{"description":"BadRequestWithMessage","content":{"application/json":{"example":{"message":"Bad Request: DETAIL_MESSAGE.","code":10001,"status_code":400,"parameters":{"message":"DETAIL_MESSAGE"}}}}},"401":{"description":"TokenInvalidError","content":{"application/json":{"example":{"message":"The token: USER_TOKEN is invalid.","code":40003,"status_code":401,"parameters":{"token":"USER_TOKEN"}}}}},"403":{"description":"UserPermissionDenied","content":{"application/json":{"example":{"message":"The account: USER_ACCOUNT_ID does not have the permission to perform this action","code":40001,"status_code":403,"parameters":{"account_id":"USER_ACCOUNT_ID"}}}}},"404":{"description":"EntryWithIDNotExist","content":{"application/json":{"example":{"message":"The entry: THIRD_PARTY_ACCT_NAME, id: THIRD_PARTY_ACCT_ID does not exist.","code":20006,"status_code":404,"parameters":{"entry_name":"THIRD_PARTY_ACCT_NAME","id":"THIRD_PARTY_ACCT_ID"}}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"JWTBearer":[]}]}},"/api/v1/public/bots/{bot_id}/models/models/{model_id}":{"patch":{"tags":["Agent"],"summary":"Update an existing LLM Model","description":"Update and existing LLM Model.","operationId":"patch_llm_model_api_v1_public_bots__bot_id__models_models__model_id__patch","parameters":[{"description":"The ID of the SeaChat bot you are updating a model for","required":true,"schema":{"type":"string","title":"Bot ID","description":"The ID of the SeaChat bot you are updating a model for"},"example":"aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee","name":"bot_id","in":"path"},{"description":"The ID of the model to update","required":true,"schema":{"type":"string","title":"Model ID","description":"The ID of the model to update"},"example":"aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee","name":"model_id","in":"path"}],"requestBody":{"content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/PatchLLMModelRequest"}],"title":"Updated Model","description":"The changes to make to the model"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/LLMModelResponse"}}}},"400":{"description":"BadRequestWithMessage","content":{"application/json":{"example":{"message":"Bad Request: DETAIL_MESSAGE.","code":10001,"status_code":400,"parameters":{"message":"DETAIL_MESSAGE"}}}}},"401":{"description":"TokenInvalidError","content":{"application/json":{"example":{"message":"The token: USER_TOKEN is invalid.","code":40003,"status_code":401,"parameters":{"token":"USER_TOKEN"}}}}},"403":{"description":"UserPermissionDenied","content":{"application/json":{"example":{"message":"The account: USER_ACCOUNT_ID does not have the permission to perform this action","code":40001,"status_code":403,"parameters":{"account_id":"USER_ACCOUNT_ID"}}}}},"404":{"description":"EntryWithIDNotExist","content":{"application/json":{"example":{"message":"The entry: THIRD_PARTY_ACCT_NAME, id: THIRD_PARTY_ACCT_ID does not exist.","code":20006,"status_code":404,"parameters":{"entry_name":"THIRD_PARTY_ACCT_NAME","id":"THIRD_PARTY_ACCT_ID"}}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"JWTBearer":[]}]}},"/api/v1/public/tasks/{task_id}":{"get":{"tags":["Task"],"summary":"Get task by id","description":"Query task information.","operationId":"get_task_by_id_api_v1_public_tasks__task_id__get","parameters":[{"required":true,"schema":{"type":"string","title":"Task Id"},"name":"task_id","in":"path"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GPTKBFileUploadMainTaskResultForPublicAPI"}}}},"400":{"description":"BadRequestWithMessage","content":{"application/json":{"example":{"message":"Bad Request: DETAIL_MESSAGE.","code":10001,"status_code":400,"parameters":{"message":"DETAIL_MESSAGE"}}}}},"401":{"description":"TokenInvalidError","content":{"application/json":{"example":{"message":"The token: USER_TOKEN is invalid.","code":40003,"status_code":401,"parameters":{"token":"USER_TOKEN"}}}}},"403":{"description":"UserPermissionDenied","content":{"application/json":{"example":{"message":"The account: USER_ACCOUNT_ID does not have the permission to perform this action","code":40001,"status_code":403,"parameters":{"account_id":"USER_ACCOUNT_ID"}}}}},"404":{"description":"EntryWithIDNotExist","content":{"application/json":{"example":{"message":"The entry: TASK, id: TASK_ID does not exist.","code":20006,"status_code":404,"parameters":{"entry_name":"TASK","id":"TASK_ID"}}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"JWTBearer":[]}]}},"/api/v1/guests/conversations":{"get":{"tags":["guest"],"summary":"List the conversations of logged-in guest.","description":"List the conversations of logged-in guest.","operationId":"list_conversations_api_v1_guests_conversations_get","parameters":[{"description":"It will search for items with `config_id` equal to input string.","required":true,"schema":{"type":"string","title":"Config Id","description":"It will search for items with `config_id` equal to input string."},"example":"default","name":"config_id","in":"query"},{"description":"Optional, order items by asc or desc with comma-separated list of <field>:<direction> pairs, default is created_at:desc.","required":false,"schema":{"type":"string","title":"Order By","description":"Optional, order items by asc or desc with comma-separated list of <field>:<direction> pairs, default is created_at:desc.","default":"created_at:desc"},"name":"order_by","in":"query"},{"description":"Optional, determine the number of rows need be skipped, default is 0","required":false,"schema":{"type":"integer","title":"Offset","description":"Optional, determine the number of rows need be skipped, default is 0","default":0},"example":0,"name":"offset","in":"query"},{"description":"Optional, determine the number of returned rows after skipped offset, 0 is unlimit, default is 0.","required":false,"schema":{"type":"integer","title":"Limit","description":"Optional, determine the number of returned rows after skipped offset, 0 is unlimit, default is 0.","default":0},"example":0,"name":"limit","in":"query"},{"required":false,"schema":{"type":"boolean","title":"Silent Mode","default":false},"name":"silent_mode","in":"query"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ListResponse_GetGuestConversationResponse_"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"SeachatAnonymousBearer":[]}]},"post":{"tags":["guest"],"summary":"Create a new conversation","description":"Create a new conversation","operationId":"create_conversation_api_v1_guests_conversations_post","parameters":[{"required":false,"schema":{"type":"boolean","title":"Silent Mode","default":false},"name":"silent_mode","in":"query"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateGuestConversationRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GetGuestConversationResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"SeachatAnonymousBearer":[]}]}}},"components":{"schemas":{"Body_create_llm_fine_tuning_job_api_v1_public_bots__bot_id__fine_tuning_jobs_post":{"properties":{"train_file":{"type":"string","format":"binary","title":"Train File","description":"Only files with extension .jsonl are allowed."},"base_model":{"allOf":[{"$ref":"#/components/schemas/FineTuneBaseModel"}],"title":"LLM Base Model","description":"The base model to perform fine-tuning on","default":"gpt-4o-mini-2024-07-18"}},"type":"object","required":["train_file"],"title":"Body_create_llm_fine_tuning_job_api_v1_public_bots__bot_id__fine_tuning_jobs_post"},"Body_post_multimedia_message_from_third_party_api_v1_public_bots__bot_id__coach_conversations__conversation_id__messages_audio_post":{"properties":{"upload_file":{"type":"string","format":"binary","title":"Upload File"},"with_reply":{"type":"boolean","title":"With Reply","description":"Whether or not to return the bot reply in the response body","default":true},"message_media_type":{"allOf":[{"$ref":"#/components/schemas/ConversationMessageMediaType"}],"title":"Message Media Type","description":"The type of the media that's been uploaded as the inbound message","default":"AUDIO"},"sample_rate":{"type":"integer","title":"Sample Rate","description":"The sample rate of audio, limit is 8000 to 48000, default is 16000","default":16000},"language":{"allOf":[{"$ref":"#/components/schemas/KBMediaLanguage"}],"title":"Language","description":"The language used in the uploaded media, for STT","default":"en-US"},"audio_format":{"allOf":[{"$ref":"#/components/schemas/SupportedAudioFormat"}],"title":"Audio Format","description":"The audio format of the uploaded file. Default is identified by file extension"},"sub_channel":{"type":"string","title":"Sub Channel","description":"The sub_channel of the conversation"}},"type":"object","required":["upload_file"],"title":"Body_post_multimedia_message_from_third_party_api_v1_public_bots__bot_id__coach_conversations__conversation_id__messages_audio_post"},"Body_post_multimedia_message_from_third_party_api_v1_public_bots__bot_id__conversations__conversation_id__messages_audio_post":{"properties":{"upload_file":{"type":"string","format":"binary","title":"Upload File"},"with_reply":{"type":"boolean","title":"With Reply","description":"Whether or not to return the bot reply in the response body","default":true},"message_media_type":{"allOf":[{"$ref":"#/components/schemas/ConversationMessageMediaType"}],"title":"Message Media Type","description":"The type of the media that's been uploaded as the inbound message","default":"AUDIO"},"sample_rate":{"type":"integer","title":"Sample Rate","description":"The sample rate of audio, limit is 8000 to 48000, default is 16000","default":16000},"language":{"allOf":[{"$ref":"#/components/schemas/KBMediaLanguage"}],"title":"Language","description":"The language used in the uploaded media, for STT","default":"en-US"},"audio_format":{"allOf":[{"$ref":"#/components/schemas/SupportedAudioFormat"}],"title":"Audio Format","description":"The audio format of the uploaded file. Default is identified by file extension"},"sub_channel":{"type":"string","title":"sub_channel","description":"The sub_channel of the conversation"}},"type":"object","required":["upload_file"],"title":"Body_post_multimedia_message_from_third_party_api_v1_public_bots__bot_id__conversations__conversation_id__messages_audio_post"},"Body_upload_agent_memory_document_api_v1_public_bots__bot_id__memory_put":{"properties":{"upload_file":{"type":"string","format":"binary","title":"Upload File","description":"Only files with extensions .txt, .md are allowed."}},"type":"object","required":["upload_file"],"title":"Body_upload_agent_memory_document_api_v1_public_bots__bot_id__memory_put"},"Body_upload_document_api_v1_public_bots__bot_id__kbs_documents_post":{"properties":{"callback_url":{"type":"string","title":"callback_url","description":"The url to POST task status to when the task is completed"},"upload_file":{"type":"string","format":"binary","title":"Upload File","description":"Only files with extensions .mp3, .odt, .docx, .opus, .wav, .doc, .ppt, .rtf, .tiff, .jpg, .pdf, .ps, .m4a, .html, .pptx, .txt, .eml, .epub, .zip, .msg, .ods, .png, .aac, .xlsm, .xls, .flac, .xlsb, .xlsx, .jpeg, .ogg, .json, .odf, .gif, .mp4, .csv are allowed."},"media_language":{"allOf":[{"$ref":"#/components/schemas/KBMediaLanguage"}],"title":"media_language","description":"The language to use for media transcription - should be either en-US or zh-TW."}},"type":"object","required":["upload_file"],"title":"Body_upload_document_api_v1_public_bots__bot_id__kbs_documents_post"},"Body_upload_user_memory_document_api_v1_public_bots__bot_id__conversations__conversation_id__memory_put":{"properties":{"upload_file":{"type":"string","format":"binary","title":"Upload File","description":"Only files with extensions .txt, .md are allowed."}},"type":"object","required":["upload_file"],"title":"Body_upload_user_memory_document_api_v1_public_bots__bot_id__conversations__conversation_id__memory_put"},"CallStates":{"type":"string","enum":["queued","ringing","in-progress","canceled","completed","busy","no-answer","failed","voicemail"],"title":"CallStates","description":"Voicebot Call status"},"CallStatus":{"properties":{"conversation_id":{"type":"string","title":"conversation_id","description":"The id of conversation.","example":"XXXXX-XXX-XXXXXXXXX"},"created_at":{"type":"string","format":"date-time","title":"The time of conversation was created","description":"The UTC time when the object was initially createdhttps://pydantic-docs.helpmanual.io/usage/types/#datetime-types","example":"2020-06-09 10:25:47.116777"},"title":{"type":"string","title":"title","description":"title of conversation","example":"Pika Chu (+1234567890)"},"workspace_id":{"type":"string","title":"workspace_id","description":"workspace_id of conversation","example":"XXXXX-XXX-XXXXXXXXX"},"gptbot_id":{"type":"string","title":"gptbot_id","description":"The gptbot id of conversation.","example":"XXXXX-XXX-XXXXXXXXX"},"agent_number":{"type":"string","title":"agent_number","description":"The agent number associated with the bot used in call"},"customer_number":{"type":"string","title":"customer_number","description":"The customer's number for SeaChat and SeaX calls"},"labels":{"items":{"$ref":"#/components/schemas/ConversationLabel"},"type":"array","title":"Labels","description":"The labels for this conversation"},"messages":{"items":{"type":"object"},"type":"array","title":"messages","description":"Messages from latest conversation session"},"extraction":{"type":"object","title":"extraction","description":"Extraction variables to extract content","default":{},"example":{"product":{"content":"","description":"the product of interest"},"max_cost":{"content":"","description":"the maximum amount the customer is willing to spend"}}},"summary":{"type":"string","title":"summary","description":"Summary of the call","default":""},"call_status":{"allOf":[{"$ref":"#/components/schemas/CallStates"}],"title":"call_status","description":"Status of the call - \n\nqueued: The call is ready and waiting in line before dialing.\n\nringing: The call is currently ringing.\n\nin-progress: The call was answered and is currently in progress.\n\ncanceled: The call was hung up while it was queued or ringing.\n\ncompleted: The call was answered and has ended normally.\n\nbusy: The caller received a busy signal.\n\nno-answer: There was no answer or the call was rejected.\n\nfailed: The call could not be completed as dialed, most likely because the provided number was invalid.\n\nvoicemail: The call was sent to the customer's voicemail. (Determined by GPT)","default":"completed","example":"completed"}},"type":"object","required":["conversation_id","created_at","workspace_id","gptbot_id","messages"],"title":"CallStatus","description":"The conversation schema."},"CoachSettings":{"properties":{"prompt":{"type":"string","title":"Prompt","description":"The prompt that determines how the coach will interact with the user","examples":["Your task is to learn about the user by engaging in a casual conversation. You will talk with the user and ask them about any recent updates in their life. Be enthusiastic and engaging. End every response with a question to try and get the user to share more about themselves. "]},"welcome_msg":{"type":"string","title":"Welcome Message","description":"The first message the coach will automatically send to the user.","examples":["Hello there! I'm a bridge between you and your avatar. What's up with you recently?"]}},"type":"object","required":["prompt","welcome_msg"],"title":"CoachSettings","description":"The coach settings attached to a gptbot."},"ConversationChannelType":{"type":"string","enum":["WEBCHAT","LINE","WHATSAPP","MESSENGER","INSTAGRAM","VOICE","THIRD_PARTY_CLIENT","SEAX_SMS","SEAX_CALL","SEAX_WABP"],"title":"ConversationChannelType","description":"Channel type of conversation"},"ConversationInboundLoggingPayload":{"properties":{"source":{"type":"string","title":"source of the message","description":"source of the message","example":"USER00001"},"text":{"type":"string","title":"text","description":"message content","example":"Hello!"},"data":{"type":"object","title":"additional data with the message","description":"additional data with the message","example":{"img":"http://img.jpg"}},"uid":{"type":"string","title":"uid","description":"Optional, the UID of conversation logging, should be UUID v4 if provided; otherwise, SeaChat will generate it automatically whe created inbound/outbound message.","example":"f47ac10b-58cc-4372-a567-0e02b2c3d479"},"event":{"allOf":[{"$ref":"#/components/schemas/MessageEvent"}],"title":"event","description":"event of conversation","default":"INBOUND_MESSAGE","example":"INBOUND_MESSAGE"},"message_type":{"anyOf":[{"$ref":"#/components/schemas/LineMessageType"},{"$ref":"#/components/schemas/WhatsappMessageType"},{"$ref":"#/components/schemas/MessengerMessageType"},{"$ref":"#/components/schemas/InstagramMessageType"}],"title":"message_type","description":"type of line message of conversation","example":"text"},"metadata":{"type":"object","title":"Additional information to send with inbound_message request to actions server","default":{},"example":{"initial_message":"Hello how can I help you?","is_first_message":true,"is_inbound_call":false}},"sub_channel":{"type":"string","title":"sub_channel","description":"Sub channel type , A string filled in by customers based on their needs","example":"home_page"},"is_need_ask_bot":{"type":"boolean","title":"is_need_ask_bot","description":"Does this inbound message need a bot response?","default":true}},"type":"object","required":["source"],"title":"ConversationInboundLoggingPayload","description":"The conversation inbound logging payload schema"},"ConversationLabel":{"properties":{"label":{"type":"string","title":"label","description":"A free-form strings to allow you to tag conversations","example":"Follow up"},"color":{"type":"string","title":"color","description":"The CSS 8-digit hex color notation specify RGB colors and transparency using hexadecimal values.","example":"#edea2b"},"description":{"type":"string","title":"description","description":"The description of conversation label.","example":"This label is for vip customer"},"id":{"type":"string","title":"conversation label id","description":"UUID for conversation label","example":"4bf51df0941642d684d37b99758af604"},"created_at":{"type":"string","format":"date-time","title":"The time of this object was created","description":"The UTC time when the object was initially createdhttps://pydantic-docs.helpmanual.io/usage/types/#datetime-types","example":"2020-06-09 10:25:47.116777"},"updated_at":{"type":"string","format":"date-time","title":"The time of this object was updated","description":"The UTC time when the object was updatedhttps://pydantic-docs.helpmanual.io/usage/types/#datetime-types","example":"2020-06-09 10:25:47.116777"},"workspace_id":{"type":"string","title":"workspace_id","description":"Indicates which workspace the label belongs to.","example":"default"}},"type":"object","required":["label","color","id","workspace_id"],"title":"ConversationLabel"},"ConversationMessageMediaType":{"type":"string","enum":["AUDIO"],"title":"ConversationMessageMediaType","description":"An enumeration."},"ConversationMessageQueryDirection":{"type":"string","enum":["FORWARD","BACKWARD"],"title":"ConversationMessageQueryDirection","description":"Query direction of conversation message"},"ConversationStatus":{"type":"string","enum":["BOT_HANDLED","AGENT_HANDLED","COMPLETED"],"title":"ConversationStatus","description":"Conversation status"},"ConversationUser":{"properties":{"id":{"type":"string","title":"id","description":"User ID","example":"xxxxxxxxxxxxxxx"},"name":{"type":"string","title":"name","description":"Name","example":"Pika Chu"},"first_name":{"type":"string","title":"first_name","description":"First name","example":"Pika"},"last_name":{"type":"string","title":"last_name","description":"Last name","example":"Chu"},"phone":{"type":"string","title":"phone","description":"Phone","example":"+123456789"},"email":{"type":"string","title":"email","description":"Email","example":"pikachu@seasalt.ai"},"channel_type":{"allOf":[{"$ref":"#/components/schemas/UserChannelType"}],"title":"channel_type","description":"Channel type of user","example":"SeaAuth"},"channel_user_id":{"type":"string","title":"channel_user_id","description":"Channel id of user","example":"U1d4b52144c659cf7eef29a7a4b1f"}},"type":"object","required":["id","first_name"],"title":"ConversationUser","description":"The conversation user schema."},"CreateGPTBotForPublicAPI":{"properties":{"workspace_id":{"type":"string","title":"workspace_id","description":"the workspace id.","example":"XXXXX-XXX-XXXXXXXXX"},"name":{"type":"string","title":"name","description":"the bot name.","example":"SeaChat"},"description":{"type":"string","title":"description","description":"The description of bot"},"use_case":{"allOf":[{"$ref":"#/components/schemas/GPTBotUseCase"}],"title":"description","description":"The use case of bot","default":"Customer Service","example":"Customer Service"},"live_agent_transfer":{"type":"boolean","title":"live_agent_transfer","description":"Live agent transfer enabled","default":false},"transfer_summary_enabled":{"type":"boolean","title":"transfer_summary_enabled","description":"Whether of not to send a conversation summary to chat when user is transferred to live agent","default":true,"example":true},"default_response_language":{"allOf":[{"$ref":"#/components/schemas/DefaultResponseLanguage"}],"title":"default_response_language","description":"Default language for the bot to respond in if it can't detect user input language","default":"default","example":"default"},"match_user_language":{"type":"boolean","title":"match_user_language","description":"Whether the bot should try to respond in the same language as the user","default":true},"is_enabled":{"type":"boolean","title":"is_enabled","description":"Used to set whether the gptbot is enabled","default":true,"example":true},"extraction":{"type":"object","title":"extraction","description":"Extraction variables to extract","default":{},"example":{"product":{"content":"","description":"the product of interest"},"max_cost":{"content":"","description":"the maximum amount the customer is willing to spend"}}},"kb_search_query_type":{"allOf":[{"$ref":"#/components/schemas/GPTBotKBSearchQueryType"}],"title":"kb_search_query_type","description":"The type of query used to search the knowledge base","example":"LAST_THREE_TURNS"},"kb_search_method":{"allOf":[{"$ref":"#/components/schemas/GPTBotKBSearchMethod"}],"title":"kb_search_method","description":"The method used to search the KB","example":"VECTOR"},"kb_search_retrieve_count":{"type":"integer","title":"kb_search_retrieve_count","description":"The number of results to retrieve from the KB","example":5},"kb_refinement_enabled":{"type":"boolean","title":"kb_refinement_enabled","description":"controls if rag search performs additional refinement query on retrieved articles","default":false,"example":false},"kb_refinement_instructions":{"type":"string","title":"kb_refinement_instructions","description":"Additional instructions to use for kb refinement query","default":"","example":"Look for sections in the articles specifically referencing the product id"},"conversation_history_turn_count":{"type":"integer","title":"conversation_history_turn_count","description":"The number of conversation turns sent to GPT in the prompt","example":5},"time_awareness":{"allOf":[{"$ref":"#/components/schemas/GPTBotTimeAwareness"}],"title":"time_awareness","description":"Time awareness settings of a gptbot"},"emotion_prediction_enabled":{"type":"boolean","title":"emotion_prediction_enabled","description":"Whether or not emotion labels should be predicted on user/agent messages","default":false},"user_memory_enabled":{"type":"boolean","title":"user_memory_enabled","description":"Whether or not user memory should be used","default":false},"agent_memory_enabled":{"type":"boolean","title":"agent_memory_enabled","description":"Whether or not agent memory should be used","default":false},"kb_references_enabled":{"type":"boolean","title":"KB References Enabled","description":"Whether or not to include KB references in the bot's responses","default":false},"model_config":{"allOf":[{"$ref":"#/components/schemas/ModelConfig"}],"title":"model_config","description":"Bot settings, including backend model and temperature"},"live_agent_transfer_mode":{"allOf":[{"$ref":"#/components/schemas/LiveAgentTransferMode"}],"title":"live_agent_transfer_mode","description":"The live agent transfer mode.","example":"button"}},"type":"object","required":["workspace_id","name","description"],"title":"CreateGPTBotForPublicAPI","description":"This Schema is used for public API of creating bots."},"CreateGuestConversationOutboundLoggingRequest":{"properties":{"source":{"type":"string","title":"source of the message","description":"source of the message","example":"USER00001"},"text":{"type":"string","title":"text","description":"message content","example":"Hello!"},"data":{"type":"object","title":"additional data with the message","description":"additional data with the message","example":{"img":"http://img.jpg"}},"uid":{"type":"string","title":"uid","description":"Optional, the UID of conversation logging, should be UUID v4 if provided; otherwise, SeaChat will generate it automatically whe created inbound/outbound message.","example":"f47ac10b-58cc-4372-a567-0e02b2c3d479"},"to_html":{"type":"boolean","title":"to_html","description":"Ask SeaChat to parse the text into an html document for WebChat to display. If the incoming text has already been parsed, this value does not need to be set, or specified as False","default":false,"example":false},"speaker_id":{"type":"string","title":"speaker_id","description":"The id of the speaker","example":"FREE_NOTIFY"}},"type":"object","required":["source","speaker_id"],"title":"CreateGuestConversationOutboundLoggingRequest","description":"The request schema for creating guest conversation outbound logging."},"CreateGuestConversationRequest":{"properties":{"config_id":{"type":"string","title":"config_id","description":"The configuration of conversation","example":"4bf51df0941642d684d37b99758af604"},"user_id":{"type":"string","title":"user_id","description":"Record the user_id of the conversation, you can fill in any string, if you are not sure, you can fill in `anonymous`","example":"anonymous"},"channel_type":{"allOf":[{"$ref":"#/components/schemas/ConversationChannelType"}],"title":"channel_type","description":"The channel type of conversation","default":"WEBCHAT","example":"WEBCHAT"},"sub_channel":{"type":"string","title":"sub_channel","description":"Sub channel type , A string filled in by customers based on their needs","example":"home_page"},"is_coach":{"type":"boolean","title":"is_coach","description":"Indicate that a conversation is a `coach conversation`, giving it the ability to update the bot's knowledge base articles and prompts.","default":false,"example":false},"agent_number":{"type":"string","title":"agent_number","description":"Required when channel_type is SEAX_CALL or SEAX_SMS, used to record the phone numbers of both parties in the conversation","example":"+9876543210"},"customer_number":{"type":"string","title":"customer_number","description":"Required when channel_type is SEAX_CALL or SEAX_SMS, used to record the phone numbers of both parties in the conversation","example":"+1234567890"},"inbound_message":{"allOf":[{"$ref":"#/components/schemas/ConversationInboundLoggingPayload"}],"title":"inbound_message","description":"The inbound message of the new conversation","example":{"source":"web","text":"The user completes the submission of the form","data":{"form_id":"c8763xxxxx","hidden_reply":false,"intent_name":"submit_form","fields":[{"title":"Name","entity_name":"_NAME","value":"777"},{"title":"Phone","entity_name":"_PHONE","value":"+1"},{"title":"Email","entity_name":"_EMAIL","value":""}]},"event":"FORM_SUBMISSION","metadata":{},"sub_channel":"home_page","is_need_ask_bot":true}},"outbound_messages":{"items":{"$ref":"#/components/schemas/CreateGuestConversationOutboundLoggingRequest"},"type":"array","title":"outbound_messages","description":"The outbound messages of the new conversation","example":[{"source":"bot","text":"","data":{"recipient_id":"temp_recipient_id","custom":{"attachment":{"type":"template","payload":{"template_type":"simple_form","title":"Start with the fields","description":"this is for test only","descriptionPosition":"top","hidden_reply":true,"reply_text":"The user completes the submission of the form","submit_button_title":"Send","intent_name":"submit_form","cancel_button":{"title":"Cancel","type":"postback","payload":"/cancel_for_input_data","is_enabled":true,"hidden_reply":true},"is_mailerlite_form":false,"fields":[{"title":"Name","type":"text","icon_url":"https://seachat.s3.us-west-2.amazonaws.com/images/icon-name.svg","is_required":true,"entity_name":"_NAME"},{"title":"Phone","type":"text","icon_url":"https://seachat.s3.us-west-2.amazonaws.com/images/icon-phone.svg","is_required":false,"entity_name":"_PHONE"},{"title":"Email","type":"text","icon_url":"https://seachat.s3.us-west-2.amazonaws.com/images/icon-email.svg","is_required":false,"entity_name":"_EMAIL"}]}}}},"to_html":false,"speaker_id":"FREE_NOTIFY"},{"source":"bot","text":"Welcome!","to_html":false,"speaker_id":"FREE_NOTIFY"}]},"custom_created_at":{"type":"string","format":"date-time","title":"custom_created_at","description":"The custom created at time of conversation, if not provided, will be set to current time","default":"2025-06-18T19:52:25.926214","example":"2025-06-18T19:52:25.926228"}},"type":"object","required":["config_id","user_id","inbound_message"],"title":"CreateGuestConversationRequest","description":"The request schema for creating guest conversation."},"CreateThirdPartyCoachConversation":{"properties":{"user":{"allOf":[{"$ref":"#/components/schemas/ThirdPartyUser"}],"title":"id","description":"third party user id","example":{"id":"TP00001","first_name":"Thomas","last_name":"Jefferson"}},"with_reply":{"type":"boolean","title":"with_reply","description":"the response should include bot reply","default":true,"example":true}},"type":"object","required":["user"],"title":"CreateThirdPartyCoachConversation"},"CreateThirdPartyConversation":{"properties":{"user":{"allOf":[{"$ref":"#/components/schemas/ThirdPartyUser"}],"title":"id","description":"third party user id","example":{"id":"TP00001","first_name":"Thomas","last_name":"Jefferson"}},"with_reply":{"type":"boolean","title":"with_reply","description":"the response should include bot reply","default":true,"example":true},"user_memory_enabled":{"type":"boolean","title":"user_memory_enabled","description":"Whether or not user memory should be used"},"agent_memory_enabled":{"type":"boolean","title":"agent_memory_enabled","description":"Whether or not agent memory should be used"}},"type":"object","required":["user"],"title":"CreateThirdPartyConversation"},"DefaultResponseLanguage":{"type":"string","enum":["default","en-US","en-GB","zh-TW","zh-CN","ar"],"title":"DefaultResponseLanguage","description":"Valid options for the language the bot will respond in.\n'default' is to match the user input, based on frontend."},"FineTuneBaseModel":{"type":"string","enum":["gpt-4o-mini-2024-07-18"],"title":"FineTuneBaseModel","description":"Available base models for fine tuning."},"FineTuneJobStatus":{"type":"string","enum":["validating_files","queued","running","succeeded","failed","cancelled"],"title":"FineTuneJobStatus","description":"The status of a fine tune job."},"FineTuningJobResponse":{"properties":{"id":{"type":"string","title":"Fine Tune Job ID","description":"The unique ID of the fine tuning job","examples":["ftjob-ra2hQlxVWFI5llhqQpGVKv8b"]},"base_model":{"allOf":[{"$ref":"#/components/schemas/FineTuneBaseModel"}],"title":"Base Model","description":"The generic model that the fine tuning will base off of","examples":["gpt-4o-mini-2024-07-18"]},"model_id":{"type":"string","title":"Model ID","description":"The ID of the resulting fine tuned model (only available once training is successfully completed)","examples":["ft:gpt-4o-mini-2024-07-18:seasalt-ai:test123:AbDAnkrj"]},"created_at":{"type":"string","format":"date-time","title":"Created at","description":"When the fine tune job was created"},"estimated_finish":{"type":"string","format":"date-time","title":"Estimated Finish","description":"The estimated finish time of the fine tune job"},"finished_at":{"type":"string","format":"date-time","title":"Finished at","description":"When the fine tune job completed"},"status":{"allOf":[{"$ref":"#/components/schemas/FineTuneJobStatus"}],"title":"Fine Tune Job Status","description":"The status of the job","examples":["succeeded"]},"error":{"type":"object","title":"Error","description":"Details about any errors that occur during the fine tuning process"}},"type":"object","required":["id","base_model","created_at","status"],"title":"FineTuningJobResponse","description":"/fine_tuning/jobs response body."},"GPTBotForPublicAPI":{"properties":{"workspace_id":{"type":"string","title":"workspace_id","description":"the workspace id.","example":"XXXXX-XXX-XXXXXXXXX"},"name":{"type":"string","title":"name","description":"the bot name.","example":"SeaChat"},"description":{"type":"string","title":"description","description":"The description of bot"},"use_case":{"allOf":[{"$ref":"#/components/schemas/GPTBotUseCase"}],"title":"description","description":"The use case of bot","default":"Customer Service","example":"Customer Service"},"live_agent_transfer":{"type":"boolean","title":"live_agent_transfer","description":"Live agent transfer enabled","default":false},"transfer_summary_enabled":{"type":"boolean","title":"transfer_summary_enabled","description":"Whether of not to send a conversation summary to chat when user is transferred to live agent","default":true,"example":true},"default_response_language":{"allOf":[{"$ref":"#/components/schemas/DefaultResponseLanguage"}],"title":"default_response_language","description":"Default language for the bot to respond in if it can't detect user input language","default":"default","example":"default"},"match_user_language":{"type":"boolean","title":"match_user_language","description":"Whether the bot should try to respond in the same language as the user","default":true},"is_enabled":{"type":"boolean","title":"is_enabled","description":"Used to set whether the gptbot is enabled","default":true,"example":true},"extraction":{"type":"object","title":"extraction","description":"Extraction variables to extract content","default":{},"example":{"product":{"content":"","description":"the product of interest"},"max_cost":{"content":"","description":"the maximum amount the customer is willing to spend"}}},"kb_search_query_type":{"allOf":[{"$ref":"#/components/schemas/GPTBotKBSearchQueryType"}],"title":"kb_search_query_type","description":"The type of query used to search the knowledge base","example":"LAST_THREE_TURNS"},"kb_search_method":{"allOf":[{"$ref":"#/components/schemas/GPTBotKBSearchMethod"}],"title":"kb_search_method","description":"The method used to search the KB","example":"VECTOR"},"kb_search_retrieve_count":{"type":"integer","title":"kb_search_retrieve_count","description":"The number of results to retrieve from the KB","example":5},"kb_refinement_enabled":{"type":"boolean","title":"kb_refinement_enabled","description":"controls if rag search performs additional refinement query on retrieved articles","default":false,"example":false},"kb_refinement_instructions":{"type":"string","title":"kb_refinement_instructions","description":"Additional instructions to use for kb refinement query","default":"","example":"Look for sections in the articles specifically referencing the product id"},"conversation_history_turn_count":{"type":"integer","title":"conversation_history_turn_count","description":"The number of conversation turns sent to GPT in the prompt","example":5},"time_awareness":{"allOf":[{"$ref":"#/components/schemas/GPTBotTimeAwareness"}],"title":"time_awareness","description":"Time awareness settings of a gptbot"},"emotion_prediction_enabled":{"type":"boolean","title":"emotion_prediction_enabled","description":"Whether or not emotion labels should be predicted on user/agent messages","default":false},"user_memory_enabled":{"type":"boolean","title":"user_memory_enabled","description":"Whether or not user memory should be used","default":false},"agent_memory_enabled":{"type":"boolean","title":"agent_memory_enabled","description":"Whether or not agent memory should be used","default":false},"kb_references_enabled":{"type":"boolean","title":"KB References Enabled","description":"Whether or not to include KB references in the bot's responses","default":false},"model_config":{"allOf":[{"$ref":"#/components/schemas/ModelConfig"}],"title":"model_config","description":"Bot settings, including backend model and temperature"},"live_agent_transfer_mode":{"allOf":[{"$ref":"#/components/schemas/LiveAgentTransferMode"}],"title":"live_agent_transfer_mode","description":"The live agent transfer mode.","example":"button"},"id":{"type":"string","title":"id","description":"the bot id.","example":"XXXXX-XXX-XXXXXXXXX"}},"type":"object","required":["workspace_id","name","description","id"],"title":"GPTBotForPublicAPI","description":"This schema is used in the public API as the response body of GPTbot."},"GPTBotKBSearchMethod":{"type":"string","enum":["KEYWORD","HYBRID","VECTOR"],"title":"GPTBotKBSearchMethod","description":"An enumeration."},"GPTBotKBSearchQueryType":{"type":"string","enum":["LAST_USER_QUERY","LAST_TWO_USER_QUERIES","LAST_THREE_TURNS"],"title":"GPTBotKBSearchQueryType","description":"An enumeration."},"GPTBotTimeAwareness":{"properties":{"is_enabled":{"type":"boolean","title":"Is Enabled","description":"Enable or disable time awareness","default":false,"example":true},"timezone":{"type":"string","title":"Timezone","description":"The timezone for time awareness","example":"America/Los_Angeles"}},"type":"object","title":"GPTBotTimeAwareness"},"GPTBotUseCase":{"type":"string","enum":["Customer Service","FAQ","Recommend Products","Internal KB","Appointment Scheduling","Celebrity Chat","Survey","Menu Ordering","Blank","Customer Satisfaction Survey","Market Research Survey","Event Feedback Survey","Brand Perception Survey","Recruitment Pre-qualification Survey"],"title":"GPTBotUseCase","description":"Use Case of GPTBot"},"GPTKBFileUploadMainTaskResultForPublicAPI":{"properties":{"id":{"type":"string","title":"id","description":"The task ID","example":"11111111-2222-4444-3333-555555555555"},"task_type":{"allOf":[{"$ref":"#/components/schemas/TaskType"}],"title":"task_type","description":"The task type, always UPLOAD_KB_FILE","default":"UPLOAD_KB_FILE","example":"UPLOAD_KB_FILE"},"status":{"allOf":[{"$ref":"#/components/schemas/GPTKBUploadMainTaskStatus"}],"title":"status","description":"The task status","default":"PENDING","example":"PENDING"},"error_message":{"type":"object","title":"error_message","description":"The error message if the task failed","example":{"message":"The licensed bot documents usage has surpassed the limits 20 of your current paid plan subscription  for SeaChat. To resolve it, consider upgrading to a higher plan with greater limits or reducing your usage to fit within your current plan.","code":80004,"status_code":402,"parameters":{"paid_plan_name":"","paid_tier_description":"licensed bot documents","paid_tier_up_to":20,"service":"SeaChat"},"type":"<class 'seasalt_common_lib.exceptions.payment.PaidTierExceededLimitsError'>"}}},"type":"object","required":["id"],"title":"GPTKBFileUploadMainTaskResultForPublicAPI"},"GPTKBUploadMainTaskStatus":{"type":"string","enum":["FAIL","RUNNING","SUCCESS","PENDING"],"title":"GPTKBUploadMainTaskStatus","description":"An enumeration."},"GetGuestConversationResponse":{"properties":{"user_id":{"type":"string","title":"user_id","description":"user to create conversation","example":"UID000001"},"bot_url":{"type":"string","title":"bot_url","description":"Target bot url for conversation","example":"http://test-bot/model/parse"},"agent_icon_url":{"type":"string","title":"URL of agent icon","description":"Icon url for rendering icon in conversation window","example":"http://my-icon.png"},"config_id":{"type":"string","title":"config_url","description":"The configuration of conversation","example":"4bf51df0941642d684d37b99758af604"},"agent_id":{"type":"string","title":"agent_id","description":"agent_id to received conversation","example":"AGT000001"},"agent_listened":{"type":"boolean","title":"agent_listened","description":"Flag to record conversation status","default":false,"example":false},"bot_listened":{"type":"boolean","title":"bot_listened","description":"Flag to record conversation status","default":true,"example":true},"last_read_sequence":{"type":"integer","title":"last_read_sequence","description":"the sequence of the user's read the last message.","default":0,"example":0},"agent_last_read_sequence":{"type":"integer","title":"agent_last_read_sequence","description":"the sequence of the agent's read the last message.","default":0,"example":0},"status":{"allOf":[{"$ref":"#/components/schemas/ConversationStatus"}],"title":"status","description":"the conversation status.","default":"BOT_HANDLED","example":"BOT_HANDLED"},"is_unread":{"type":"boolean","title":"is_unread","description":"Used to remind the agent that this message has unread messages that must be processed by the agent.","default":false,"example":false},"id":{"type":"string","title":"conversation id","description":"UUID for conversation","example":"4bf51df0941642d684d37b99758af604"},"uid":{"type":"string","title":"uid","description":"uid of conversation","example":"XXXXX-XXX-XXXXXXXXX"},"created_at":{"type":"string","format":"date-time","title":"The time of conversation was created","description":"The UTC time when the object was initially createdhttps://pydantic-docs.helpmanual.io/usage/types/#datetime-types","example":"2020-06-09 10:25:47.116777"},"updated_at":{"type":"string","format":"date-time","title":"The time of conversation was updated","description":"The UTC time when the object was updatedhttps://pydantic-docs.helpmanual.io/usage/types/#datetime-types","example":"2020-06-09 10:25:47.116777"},"ended_at":{"type":"string","format":"date-time","title":"The time of conversation was ended","description":"The UTC time when the object was ended https://pydantic-docs.helpmanual.io/usage/types/#datetime-types","example":"2020-06-09 10:25:47.116777"},"user":{"allOf":[{"$ref":"#/components/schemas/ConversationUser"}],"title":"user","description":"Information about the user who initiated the conversation"},"latest_message_time":{"type":"string","format":"date-time","title":"latest_message_time","description":"The latest message time of the conversation"}},"type":"object","required":["user_id","bot_url","config_id","id","created_at","updated_at"],"title":"GetGuestConversationResponse","description":"The response schema for getting guest conversation."},"GetMemoryResponse":{"properties":{"id":{"type":"string","title":"ID","description":"The ID of the individual memory item"},"memory":{"type":"string","title":"Memory","description":"The fact/statement saved as a memory"},"created_at":{"type":"string","format":"date-time","title":"Created At","description":"When the memory was originally created"},"updated_at":{"type":"string","format":"date-time","title":"Updated At","description":"When the memory was last modified"}},"type":"object","required":["id","memory","created_at","updated_at"],"title":"GetMemoryResponse","description":"A single memory from the database."},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"InstagramMessageType":{"type":"string","enum":["text","audio","file","image","video","fallback","template"],"title":"InstagramMessageType","description":"An enumeration."},"KBMediaLanguage":{"type":"string","enum":["en-US","zh-TW"],"title":"KBMediaLanguage","description":"Enum of possible languages of a doc in the KB for transcription."},"LLMModel":{"type":"string","enum":["gpt-4o","gpt-3.5","gpt-3.5-turbo","mistral-large","gpt-4o-mini","gpt-41-mini","gpt-41-nano"],"title":"LLMModel","description":"List of ALL support LLM models that are supported as identifiers in the database.\n\nThis must be synced with the corresponding enum in ngchat."},"LLMModelResponse":{"properties":{"id":{"type":"string","title":"Model ID","description":"The unique ID of the model","examples":["ft:gpt-4o-mini-2024-07-18:seasalt-ai:test123:AbDAnkrj"]},"type":{"allOf":[{"$ref":"#/components/schemas/LLMModelType"}],"title":"Model Type","description":"The model type, whether it's fine tuned or general","examples":["FINE_TUNED"]},"name":{"type":"string","title":"Model Name","description":"The readable name of the model","example":["2024-1-5 Test Model"]},"base_model":{"allOf":[{"$ref":"#/components/schemas/FineTuneBaseModel"}],"title":"Base Model","description":"The general base model the fine-tuned version was trained off of","examples":["gpt-4o-mini-2024-07-18"]},"fine_tune_job_id":{"type":"string","title":"Fine Tuning Job ID","description":"The ID of the fine tuning job that created the fine tuned model","examples":["ftjob-ra2hQlxVWFI5llhqQpGVKv8b"]},"created_at":{"type":"string","format":"date-time","title":"Created at","description":"The datetime that the model was created"},"updated_at":{"type":"string","format":"date-time","title":"Updated at","description":"The datetime the model entry was most recently updated"}},"type":"object","required":["id","type","name","fine_tune_job_id","created_at","updated_at"],"title":"LLMModelResponse","description":"/models response body."},"LLMModelType":{"type":"string","enum":["GENERAL","FINE_TUNED"],"title":"LLMModelType","description":"Type of LLM Model, general or fine tuned."},"LineMessageType":{"type":"string","enum":["text","image","video","audio","file","location","sticker"],"title":"LineMessageType","description":"An enumeration."},"ListResponse_GPTBotForPublicAPI_":{"properties":{"total":{"type":"integer","title":"total","description":"The total count of entries.","example":0},"data":{"items":{"$ref":"#/components/schemas/GPTBotForPublicAPI"},"type":"array","title":"data","description":"The entry list."}},"type":"object","required":["data"],"title":"ListResponse[GPTBotForPublicAPI]","description":"ListResponse schema."},"ListResponse_GetGuestConversationResponse_":{"properties":{"total":{"type":"integer","title":"total","description":"The total count of entries.","example":0},"data":{"items":{"$ref":"#/components/schemas/GetGuestConversationResponse"},"type":"array","title":"data","description":"The entry list."}},"type":"object","required":["data"],"title":"ListResponse[GetGuestConversationResponse]","description":"ListResponse schema."},"LiveAgentTransferMode":{"type":"string","enum":["button","chat","hybrid"],"title":"LiveAgentTransferMode","description":"Live Agent Transfer Mode"},"MemoryEvent":{"properties":{"id":{"type":"string","title":"ID","description":"The ID of the individual memory item"},"memory":{"type":"string","title":"Memory","description":"The fact/statement saved as a memory"},"event":{"allOf":[{"$ref":"#/components/schemas/MemoryEventType"}],"title":"Event","description":"The type of event executed on the memory database"}},"type":"object","required":["id","memory","event"],"title":"MemoryEvent","description":"A single event executed on the memory."},"MemoryEventType":{"type":"string","enum":["ADD","UPDATE","DELETE"],"title":"MemoryEventType","description":"Types of mem0 operations when handling memory."},"MessageEvent":{"type":"string","enum":["INBOUND_MESSAGE","OUTBOUND_MESSAGE","TRANSFERRING","TIMEOUT","HANGUP","SYSTEM_WARNING_OF_BACK_OFFICE","JOINED","END","EXITED","FORM_SUBMISSION","CSAT_SUBMISSION","BUTTON_POSTBACK","SESSION_START","SESSION_END","ASSIGNED"],"title":"MessageEvent","description":"Event type of message."},"MessengerMessageType":{"type":"string","enum":["text","audio","file","image","video","fallback","template"],"title":"MessengerMessageType","description":"An enumeration."},"ModelConfig":{"properties":{"gptbot_id":{"type":"string","title":"gptbot_id","description":"The id of the GPTBot this model config belongs to","example":"XXXXX-XXX-XXXXXXXXX"},"llm_model":{"allOf":[{"$ref":"#/components/schemas/LLMModel"}],"title":"llm_model","description":"LLM model backend (e.g. GPT-3.5, GPT-4o, Mistral-Large)","example":"gpt-3.5-turbo"},"temperature":{"type":"number","title":"temperature","description":"LLM model temperature","example":0.0}},"type":"object","title":"ModelConfig"},"OutboundCallResponse":{"properties":{"conversation_id":{"type":"string","title":"conversation_id","description":"The id of conversation.","example":"XXXXX-XXX-XXXXXXXXX"},"started_at":{"type":"string","format":"date-time","title":"The time of conversation was created","description":"The UTC time when the object was initially createdhttps://pydantic-docs.helpmanual.io/usage/types/#datetime-types","example":"2020-06-09 10:25:47.116777"}},"type":"object","required":["conversation_id","started_at"],"title":"OutboundCallResponse","description":"Returned payload after triggering outbound call"},"PatchLLMModelRequest":{"properties":{"name":{"type":"string","title":"Model Name","description":"The readable name of the model","example":["2024-1-5 Test Model"]}},"type":"object","title":"PatchLLMModelRequest","description":"PATCH /models/{model_id} request body."},"PutMemoryResponse":{"properties":{"upload_file":{"type":"string","title":"Upload File","description":"The name of the uploaded file used to extract memories."},"memory_events":{"items":{"$ref":"#/components/schemas/MemoryEvent"},"type":"array","title":"Memory Events","description":"A list of events executed on the memory database","default":[]}},"type":"object","required":["upload_file"],"title":"PutMemoryResponse","description":"Response model for `PUT /memory` endpoints."},"SupportedAudioFormat":{"type":"string","enum":["wav_pcm","flac","aac","m4a","opus","mp3","ogg"],"title":"SupportedAudioFormat","description":"An enumeration."},"TaskType":{"type":"string","enum":["UPLOAD_KB_FILE"],"title":"TaskType","description":"An enumeration."},"ThirdPartyConversationLogging":{"properties":{"id":{"type":"integer","title":"Autoincrement number","description":"Autoincrement number","example":0},"text":{"type":"string","title":"text","description":"message content","example":"Hello!"},"data":{"type":"object","title":"additional data with the message","description":"additional data with the message","example":{"recipient_id":"8c8c1228bfce4102b037b14aff67603a","text":"Hello! How can I help you?","confident_response":true}},"event":{"allOf":[{"$ref":"#/components/schemas/MessageEvent"}],"title":"event","description":"event of conversation","example":"OUTBOUND_MESSAGE"},"sequence":{"type":"integer","title":"Autoincrement number","description":"Autoincrement number","example":0},"speaker":{"allOf":[{"$ref":"#/components/schemas/ThirdPartyMessageSpeaker"}],"title":"speaker","description":"speaker of conversation message"},"created_at":{"type":"string","format":"date-time","title":"The time of this object was created","description":"The UTC time when the object was initially createdhttps://pydantic-docs.helpmanual.io/usage/types/#datetime-types","example":"2020-06-09 10:25:47.116777"}},"type":"object","required":["id","event","sequence","speaker"],"title":"ThirdPartyConversationLogging","description":"The conversation logging schema for third party."},"ThirdPartyConversationResponse":{"properties":{"user":{"allOf":[{"$ref":"#/components/schemas/ThirdPartyUser"}],"title":"id","description":"third party user id","example":{"id":"TP00001","first_name":"Thomas","last_name":"Jefferson"}},"conversation_id":{"type":"string","title":"conversation_id","description":"Specifies the user's conversation ID","example":"33ab7ceb-9b6b-4252-baf0-82a6d703aa7d"},"messages":{"items":{"$ref":"#/components/schemas/ThirdPartyConversationLogging"},"type":"array","title":"messages","description":"messages"},"extraction":{"type":"object","title":"extraction","description":"Extraction variables to extract content","default":{},"example":{"product":{"content":"","description":"the product of interest"},"max_cost":{"content":"","description":"the maximum amount the customer is willing to spend"}}}},"type":"object","required":["user","conversation_id"],"title":"ThirdPartyConversationResponse"},"ThirdPartyInboundMessage":{"properties":{"text":{"type":"string","title":"text","description":"message content","example":"Hello!"},"data":{"type":"object","title":"additional data with the message","description":"additional data with the message","example":{"img":"http://img.jpg"}},"event":{"allOf":[{"$ref":"#/components/schemas/MessageEvent"}],"title":"event","description":"event of conversation","default":"INBOUND_MESSAGE","example":"INBOUND_MESSAGE"},"sub_channel":{"type":"string","title":"sub_channel","description":"Sub channel type , A string filled in by customers based on their needs","example":"home_page"}},"type":"object","title":"ThirdPartyInboundMessage"},"ThirdPartyInboundMessageBody":{"properties":{"message":{"allOf":[{"$ref":"#/components/schemas/ThirdPartyInboundMessage"}],"title":"message","description":"message","example":{"text":"Hello!!","data":{},"event":"INBOUND_MESSAGE","sub_channel":"home_page"}},"with_reply":{"type":"boolean","title":"with_reply","description":"the response need include bot reply","default":true,"example":true}},"type":"object","required":["message"],"title":"ThirdPartyInboundMessageBody"},"ThirdPartyListMessagesResponse":{"properties":{"conversation_id":{"type":"string","title":"conversation_id","description":"Specifies the user's conversation ID","example":"33ab7ceb-9b6b-4252-baf0-82a6d703aa7d"},"messages":{"items":{"$ref":"#/components/schemas/ThirdPartyConversationLogging"},"type":"array","title":"messages","description":"messages","examples":[{"id":0,"text":"Hello! How can I help you?","data":{"recipient_id":"8c8c1228bfce4102b037b14aff67603a","text":"Hello! How can I help you?","confident_response":true,"emotion_label":"neutral"},"event":"OUTBOUND_MESSAGE","sequence":0,"speaker":{"id":"BOT","name":"BOT","first_name":"BOT","channel_type":"System","third_party_user_id":"xxxx-xxxxxxxx"},"created_at":"2020-06-09T10:25:47"},{"id":0,"text":"Hello!","data":{"recipient_id":"8c8c1228bfce4102b037b14aff67603a","text":"I'm so excited to talk to you!","emotion_label":"excited"},"event":"INBOUND_MESSAGE","sequence":1,"speaker":{"id":"xxxx-xxxxxxxx","name":"User Name","first_name":"User","last_name":"Name","phone":"1234567890","email":"user@email.com","channel_type":"ThirdPartyClient","third_party_user_id":"xxxx-xxxxxxxx"},"created_at":"2020-06-09T10:25:50"}]}},"type":"object","required":["conversation_id","messages"],"title":"ThirdPartyListMessagesResponse"},"ThirdPartyMessageResponse":{"properties":{"conversation_id":{"type":"string","title":"conversation_id","description":"Specifies the user's conversation ID","example":"33ab7ceb-9b6b-4252-baf0-82a6d703aa7d"},"messages":{"items":{"$ref":"#/components/schemas/ThirdPartyConversationLogging"},"type":"array","title":"messages","description":"messages"},"inbound_sequence":{"type":"integer","title":"sequence","description":"Sequence of the conversation","example":1}},"type":"object","required":["conversation_id","inbound_sequence"],"title":"ThirdPartyMessageResponse"},"ThirdPartyMessageSpeaker":{"properties":{"id":{"type":"string","title":"id","description":"User ID of speaker","example":"pikachu"},"name":{"type":"string","title":"name","description":"Name of speaker","example":"Pika Chu"},"first_name":{"type":"string","title":"first_name","description":"First name of speaker","example":"Pika"},"last_name":{"type":"string","title":"last_name","description":"Last name of speaker","example":"Chu"},"phone":{"type":"string","title":"phone","description":"Phone","example":"+123456789"},"email":{"type":"string","title":"email","description":"Email","example":"pikachu@seasalt.ai"},"channel_type":{"allOf":[{"$ref":"#/components/schemas/UserChannelType"}],"title":"channel_type","description":"Channel type of user","example":"SeaAuth"},"third_party_user_id":{"type":"string","title":"third_party_user_id","description":"the user_id from third party ","example":"TU0001"}},"type":"object","required":["id","name","first_name"],"title":"ThirdPartyMessageSpeaker","description":"The conversation logging speaker schema."},"ThirdPartyUser":{"properties":{"id":{"type":"string","title":"id","description":"third party user id","example":"TP00001"},"first_name":{"type":"string","title":"first_name","description":"third party user first name ,If the first name and last name are not distinguished,please fill in the first name. If the user name cannot be confirmed, pass null.","example":"Thomas"},"last_name":{"type":"string","title":"last_name","description":"third party user last nameIf the first name and last name are not distinguished,please fill in the first name. If the user name cannot be confirmed, pass null.","example":"Jefferson"}},"type":"object","required":["id"],"title":"ThirdPartyUser"},"UpdateGPTBotForPublicAPI":{"properties":{"name":{"type":"string","title":"name","description":"the bot name.","example":"SeaChat"},"description":{"type":"string","title":"description","description":"The description of bot"},"use_case":{"allOf":[{"$ref":"#/components/schemas/GPTBotUseCase"}],"title":"description","description":"The use case of bot","example":"Customer Service"},"extraction":{"type":"object","title":"extraction","description":"Extraction variables to extract","default":{},"example":{"product":{"content":"","description":"the product of interest"},"max_cost":{"content":"","description":"the maximum amount the customer is willing to spend"}}},"live_agent_transfer":{"type":"boolean","title":"live_agent_transfer","description":"Live agent transfer enabled"},"transfer_summary_enabled":{"type":"boolean","title":"transfer_summary_enabled","description":"Whether of not to send a conversation summary to chat when user is transferred to live agent"},"default_response_language":{"allOf":[{"$ref":"#/components/schemas/DefaultResponseLanguage"}],"title":"default_response_language","description":"Default language for the bot to respond in"},"match_user_language":{"type":"boolean","title":"match_user_language","description":"Whether the bot should try to respond in the same language as the user"},"is_enabled":{"type":"boolean","title":"is_enabled","description":"Used to set whether the gptbot is enabled","example":true},"kb_search_query_type":{"allOf":[{"$ref":"#/components/schemas/GPTBotKBSearchQueryType"}],"title":"kb_search_query_type","description":"The type of query used to search the knowledge base","example":"LAST_THREE_TURNS"},"kb_search_method":{"allOf":[{"$ref":"#/components/schemas/GPTBotKBSearchMethod"}],"title":"kb_search_method","description":"The method used to search the KB","example":"VECTOR"},"kb_search_retrieve_count":{"type":"integer","title":"kb_search_retrieve_count","description":"The number of results to retrieve from the KB","example":5},"conversation_history_turn_count":{"type":"integer","title":"conversation_history_turn_count","description":"The number of conversation turns sent to GPT in the prompt","example":5},"time_awareness":{"allOf":[{"$ref":"#/components/schemas/GPTBotTimeAwareness"}],"title":"time_awareness","description":"Time awareness settings of a gptbot"},"emotion_prediction_enabled":{"type":"boolean","title":"emotion_prediction_enabled","description":"Whether or not emotion labels should be predicted on user/agent messages"},"user_memory_enabled":{"type":"boolean","title":"user_memory_enabled","description":"Whether or not user memory should be used"},"agent_memory_enabled":{"type":"boolean","title":"agent_memory_enabled","description":"Whether or not agent memory should be used"},"kb_references_enabled":{"type":"boolean","title":"KB References Enabled","description":"Whether or not to include KB references in the bot's responses"},"model_config":{"allOf":[{"$ref":"#/components/schemas/ModelConfig"}],"title":"model_config","description":"Bot settings, including backend model and temperature"},"live_agent_transfer_mode":{"allOf":[{"$ref":"#/components/schemas/LiveAgentTransferMode"}],"title":"live_agent_transfer_mode","description":"The live agent transfer mode.","example":"button"}},"type":"object","title":"UpdateGPTBotForPublicAPI","description":"Update GPT Bot Schema"},"UpdateThirdPartyConversation":{"properties":{"user":{"allOf":[{"$ref":"#/components/schemas/ThirdPartyUser"}],"title":"user","description":"third party user id","example":{"id":"TP00001","first_name":"Thomas","last_name":"Jefferson"}},"with_reply":{"type":"boolean","title":"with_reply","description":"the response should include bot reply","example":true},"user_memory_enabled":{"type":"boolean","title":"user_memory_enabled","description":"Whether or not user memory should be used"},"agent_memory_enabled":{"type":"boolean","title":"agent_memory_enabled","description":"Whether or not agent memory should be used"}},"type":"object","required":["user"],"title":"UpdateThirdPartyConversation","description":"Third party conversation patch endpoint input schema."},"UploadFileResponseForPublicAPI":{"properties":{"task_id":{"type":"string","title":"task_id","description":"xxxxxxx"}},"type":"object","required":["task_id"],"title":"UploadFileResponseForPublicAPI"},"UserChannelType":{"type":"string","enum":["System","SeaAuth","AgentPhone","WebChat","Line","WhatsApp","Messenger","Instagram","Voice","ThirdPartyClient","SeaX_Call","SeaX_SMS","SeaX_WABP"],"title":"UserChannelType","description":"An enumeration."},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"},"VoiceBotOutboundCall":{"properties":{"to_number":{"type":"string","title":"to_number","description":"The phone number to call for the outbound connection. e.164 format is recommended. If no country code is provided, assumes number is US based. Attempts to parse malformed numbers; however one of the following formats is recommended: +18885550123 [e.164], (888)5550123, (888)555-0123, 1(888)555-0123","example":"+18885550123"},"callback_url":{"type":"string","title":"callback_url","description":"Callback url invoked at end of call. SeaChat will send a post request containing a json CallStatus object including (among other fields) conversation_id, transcriptions, extraction results, labels, call status, and summary","example":"https://example.com/callback"}},"type":"object","required":["to_number"],"title":"VoiceBotOutboundCall","description":"Outbound call payload for voicebot.\nto_number: Number to place call to\ncallback_url: Url to send call results to. Will make post requst and send CallResults object"},"WhatsappMessageType":{"type":"string","enum":["audio","button","document","text","image","interactive","order","sticker","system","video","unknown","reaction","location"],"title":"WhatsappMessageType","description":"An enumeration."}},"securitySchemes":{"JWTBearer":{"type":"http","scheme":"bearer"},"SeachatAnonymousBearer":{"type":"oauth2","description":"Seachat Anonymous User , Log in without specifying username and password.","flows":{"password":{"scopes":{"seachat":"Required from SeaChat service"},"tokenUrl":"api/v1/login/anonymous"}}}}}}